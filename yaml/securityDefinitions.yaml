# Every Open API file needs this
swagger: '2.0'

# Document metadata
info:
  version: "0.3.0"
  title: Music API
  
# URL data
host: api.muzicplayz.com
basePath: /v3
schemes:
  - https

consumes:
  - application/json
produces:
  - application/json
  
# Endpoints
paths:
  # Playlists
  /playlist:
    # Get one or more playlists
    get:
      # Query parameters
      parameters:
        # Number to return
        - name: limit
          in: query
          required: false
          type: integer
          
        # Number to skip
        - name: offset
          in: query
          required: false
          type: integer
          
        # Search term
        - name: search
          in: query
          required: false
          type: string
          
      # Basic auth security
      security:
        - basicAuth: [ ]
        
      # Incomplete response (to finish later)
      responses:
        # Response code
        200:
          description: Successful response
          
    # Create a new playlist
    post:
      # Body 
      parameters:
        - name: newPlaylist
          in: body
          required: true
          schema: 
            $ref: '#/definitions/newPlaylist'
            
      # Incomplete response (to finish later)
      responses:
        # Response code
        200:
          description: Successful response
   
  # Playlists
  /playlist/{playlist-id}:    
    # Delete a playlist 
    delete:
      # Path parameter
      parameters:
        # Playlist id
        - name: playlist-id
          in: path
          required: true
          type: string
          
       # Incomplete response (to finish later)
      responses:
        # Response code
        200:
          description: Successful response
          
        410:
          description: Playlist already deleted
          schema:
            $ref: '#/definitions/error'
          
    # Return a playlist  
    get:
      # Path parameter
      parameters:
        # Playlist id
        - name: playlist-id
          in: path
          required: true
          type: string
          
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/playlistWithSongs'

  # Playlist image
  /playlist/{playlist-id}/image: 
    # Get one or more playlists
    get:
      operationId: getImage
      parameters:
        # Playlist id
        - name: playlist-id
          in: path
          required: true
          type: string
          
      responses:
         200:
          description: Successful response
          schema:
            type: file
            
      produces:
        - image/png
  
definitions:
  # New play list
  newPlaylist:
    properties:
      name:
        type: string
      songIds:
        type: array
        items: 
          type: integer
      
  # Playlist with song info    
  playlistWithSongs:
    properties:
      id:
        type: integer
      name:
        type: string
      song:
        type: array
        items: 
          $ref: '#/definitions/song'
          
  # Song info
  song:
    properties:
      id:
        type: integer
      title:
        type: string      
      artist:
        type: string  
        
  # Errors
  error:
    properties:
      errorMessage:
        type: string
      logData:
        type: object
        properties:
          entry:
            type: integer
          date:
            type: string
            
          
securityDefinitions:
  basicAuth:
    type: basic
    