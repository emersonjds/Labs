{"mappings":"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","sources":["packages/@react-aria/slider/src/index.ts","packages/@react-aria/slider/src/useSlider.ts","packages/@react-aria/slider/src/utils.ts","packages/@react-aria/slider/src/useSliderThumb.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useSlider';\nexport * from './useSliderThumb';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSliderProps} from '@react-types/slider';\nimport {clamp, mergeProps, useGlobalListeners} from '@react-aria/utils';\nimport {getSliderThumbId, sliderIds} from './utils';\nimport React, {HTMLAttributes, LabelHTMLAttributes, OutputHTMLAttributes, RefObject, useRef} from 'react';\nimport {setInteractionModality, useMove} from '@react-aria/interactions';\nimport {SliderState} from '@react-stately/slider';\nimport {useLabel} from '@react-aria/label';\nimport {useLocale} from '@react-aria/i18n';\n\ninterface SliderAria {\n  /** Props for the label element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n\n  /** Props for the root element of the slider component; groups slider inputs. */\n  groupProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the track element. */\n  trackProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the output element, displaying the value of the slider thumbs. */\n  outputProps: OutputHTMLAttributes<HTMLOutputElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a slider component representing one or more values.\n *\n * @param props Props for the slider.\n * @param state State for the slider, as returned by `useSliderState`.\n * @param trackRef Ref for the \"track\" element.  The width of this element provides the \"length\"\n * of the track -- the span of one dimensional space that the slider thumb can be.  It also\n * accepts click and drag motions, so that the closest thumb will follow clicks and drags on\n * the track.\n */\nexport function useSlider(\n  props: AriaSliderProps,\n  state: SliderState,\n  trackRef: RefObject<HTMLElement>\n): SliderAria {\n  let {labelProps, fieldProps} = useLabel(props);\n\n  let isVertical = props.orientation === 'vertical';\n\n  // Attach id of the label to the state so it can be accessed by useSliderThumb.\n  sliderIds.set(state, labelProps.id ?? fieldProps.id);\n\n  let {direction} = useLocale();\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  // When the user clicks or drags the track, we want the motion to set and drag the\n  // closest thumb.  Hence we also need to install useMove() on the track element.\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\n  // It is set onMouseDown/onTouchDown; see trackProps below.\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\n\n  const stateRef = useRef<SliderState>(null);\n  stateRef.current = state;\n  const reverseX = direction === 'rtl';\n  const currentPosition = useRef<number>(null);\n  const {moveProps} = useMove({\n    onMoveStart() {\n      currentPosition.current = null;\n    },\n    onMove({deltaX, deltaY}) {\n      let size = isVertical ? trackRef.current.offsetHeight : trackRef.current.offsetWidth;\n\n      if (currentPosition.current == null) {\n        currentPosition.current = stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) * size;\n      }\n\n      let delta = isVertical ? deltaY : deltaX;\n      if (isVertical || reverseX) {\n        delta = -delta;\n      }\n\n      currentPosition.current += delta;\n\n      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\n        const percent = clamp(currentPosition.current / size, 0, 1);\n        stateRef.current.setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n      }\n    },\n    onMoveEnd() {\n      if (realTimeTrackDraggingIndex.current != null) {\n        stateRef.current.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  });\n\n  let currentPointer = useRef<number | null | undefined>(undefined);\n  let onDownTrack = (e: React.UIEvent, id: number, clientX: number, clientY: number) => {\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n    if (trackRef.current && !props.isDisabled && state.values.every((_, i) => !state.isThumbDragging(i))) {\n      let size = isVertical ? trackRef.current.offsetHeight : trackRef.current.offsetWidth;\n      // Find the closest thumb\n      const trackPosition = trackRef.current.getBoundingClientRect()[isVertical ? 'top' : 'left'];\n      const clickPosition = isVertical ? clientY : clientX;\n      const offset = clickPosition - trackPosition;\n      let percent = offset / size;\n      if (direction === 'rtl' || isVertical) {\n        percent = 1 - percent;\n      }\n      let value = state.getPercentValue(percent);\n\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n      let closestThumb;\n      let split = state.values.findIndex(v => value - v < 0);\n      if (split === 0) { // If the index is zero then the closetThumb is the first one\n        closestThumb = split;\n      } else if (split === -1) { // If no index is found they've clicked past all the thumbs\n        closestThumb = state.values.length - 1;\n      } else {\n        let lastLeft = state.values[split - 1];\n        let firstRight = state.values[split];\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n          closestThumb = split - 1;\n        } else {\n          closestThumb = split;\n        }\n      }\n\n      // Confirm that the found closest thumb is editable, not disabled, and move it\n      if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n        // Don't unfocus anything\n        e.preventDefault();\n\n        realTimeTrackDraggingIndex.current = closestThumb;\n        state.setFocusedThumb(closestThumb);\n        currentPointer.current = id;\n\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n        state.setThumbValue(closestThumb, value);\n\n        addGlobalListener(window, 'mouseup', onUpTrack, false);\n        addGlobalListener(window, 'touchend', onUpTrack, false);\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\n      } else {\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  };\n\n  let onUpTrack = (e) => {\n    let id = e.pointerId ?? e.changedTouches?.[0].identifier;\n    if (id === currentPointer.current) {\n      if (realTimeTrackDraggingIndex.current != null) {\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n\n      removeGlobalListener(window, 'mouseup', onUpTrack, false);\n      removeGlobalListener(window, 'touchend', onUpTrack, false);\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\n    }\n  };\n\n  if (labelProps.htmlFor) {\n    // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n    // causes this to override the `aria-labelledby` on the thumb. This causes the first\n    // thumb to only be announced as the slider label rather than its individual name as well.\n    // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n    delete labelProps.htmlFor;\n    labelProps.onClick = () => {\n      // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n      // so do it manually. In addition, make sure we show the focus ring.\n      document.getElementById(getSliderThumbId(state, 0))?.focus();\n      setInteractionModality('keyboard');\n    };\n  }\n\n  return {\n    labelProps,\n    // The root element of the Slider will have role=\"group\" to group together\n    // all the thumb inputs in the Slider.  The label of the Slider will\n    // be used to label the group.\n    groupProps: {\n      role: 'group',\n      ...fieldProps\n    },\n    trackProps: mergeProps({\n      onMouseDown(e: React.MouseEvent<HTMLElement>) {\n        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n          return;\n        }\n        onDownTrack(e, undefined, e.clientX, e.clientY);\n      },\n      onPointerDown(e: React.PointerEvent<HTMLElement>) {\n        if (e.pointerType === 'mouse' && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) {\n          return;\n        }\n        onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n      },\n      onTouchStart(e: React.TouchEvent<HTMLElement>) { onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY); }\n    }, moveProps),\n    outputProps: {\n      htmlFor: state.values.map((_, index) => getSliderThumbId(state, index)).join(' '),\n      'aria-live': 'off'\n    }\n  };\n}\n","import {SliderState} from '@react-stately/slider';\n\nexport const sliderIds = new WeakMap<SliderState, string>();\n\nexport function getSliderThumbId(state: SliderState, index: number) {\n  let id = sliderIds.get(state);\n  if (!id) {\n    throw new Error('Unknown slider state');\n  }\n\n  return `${id}-${index}`;\n}\n","import {AriaSliderThumbProps} from '@react-types/slider';\nimport {clamp, focusWithoutScrolling, mergeProps, useGlobalListeners} from '@react-aria/utils';\nimport {getSliderThumbId, sliderIds} from './utils';\nimport React, {ChangeEvent, HTMLAttributes, InputHTMLAttributes, LabelHTMLAttributes, RefObject, useCallback, useEffect, useRef} from 'react';\nimport {SliderState} from '@react-stately/slider';\nimport {useFocusable} from '@react-aria/focus';\nimport {useKeyboard, useMove} from '@react-aria/interactions';\nimport {useLabel} from '@react-aria/label';\nimport {useLocale} from '@react-aria/i18n';\n\ninterface SliderThumbAria {\n  /** Props for the root thumb element; handles the dragging motion. */\n  thumbProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the visually hidden range input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n\n  /** Props for the label element for this thumb (optional). */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>\n}\n\ninterface SliderThumbOptions extends AriaSliderThumbProps {\n  /** A ref to the track element. */\n  trackRef: RefObject<HTMLElement>,\n  /** A ref to the thumb input element. */\n  inputRef: RefObject<HTMLInputElement>\n}\n\n/**\n * Provides behavior and accessibility for a thumb of a slider component.\n *\n * @param opts Options for this Slider thumb.\n * @param state Slider state, created via `useSliderState`.\n */\nexport function useSliderThumb(\n  opts: SliderThumbOptions,\n  state: SliderState\n): SliderThumbAria {\n  let {\n    index,\n    isRequired,\n    isDisabled,\n    validationState,\n    trackRef,\n    inputRef\n  } = opts;\n\n  let isVertical = opts.orientation === 'vertical';\n\n  let {direction} = useLocale();\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let labelId = sliderIds.get(state);\n  const {labelProps, fieldProps} = useLabel({\n    ...opts,\n    id: getSliderThumbId(state, index),\n    'aria-labelledby': `${labelId} ${opts['aria-labelledby'] ?? ''}`.trim()\n  });\n\n  const value = state.values[index];\n\n  const focusInput = useCallback(() => {\n    if (inputRef.current) {\n      focusWithoutScrolling(inputRef.current);\n    }\n  }, [inputRef]);\n\n  const isFocused = state.focusedThumb === index;\n\n  useEffect(() => {\n    if (isFocused) {\n      focusInput();\n    }\n  }, [isFocused, focusInput]);\n\n  const stateRef = useRef<SliderState>(null);\n  stateRef.current = state;\n  let reverseX = direction === 'rtl';\n  let currentPosition = useRef<number>(null);\n\n  let {keyboardProps} = useKeyboard({\n    onKeyDown(e) {\n      let {\n        getThumbMaxValue,\n        getThumbMinValue,\n        decrementThumb,\n        incrementThumb,\n        setThumbValue,\n        setThumbDragging,\n        pageSize\n      } = stateRef.current;\n      // these are the cases that useMove or useSlider don't handle\n      if (!/^(PageUp|PageDown|Home|End)$/.test(e.key)) {\n        e.continuePropagation();\n        return;\n      }\n      // same handling as useMove, stopPropagation to prevent useSlider from handling the event as well.\n      e.preventDefault();\n      // remember to set this so that onChangeEnd is fired\n      setThumbDragging(index, true);\n      switch (e.key) {\n        case 'PageUp':\n          incrementThumb(index, pageSize);\n          break;\n        case 'PageDown':\n          decrementThumb(index, pageSize);\n          break;\n        case 'Home':\n          setThumbValue(index, getThumbMinValue(index));\n          break;\n        case 'End':\n          setThumbValue(index, getThumbMaxValue(index));\n          break;\n      }\n      setThumbDragging(index, false);\n    }\n  });\n\n  let {moveProps} = useMove({\n    onMoveStart() {\n      currentPosition.current = null;\n      stateRef.current.setThumbDragging(index, true);\n    },\n    onMove({deltaX, deltaY, pointerType, shiftKey}) {\n      const {\n        getThumbPercent,\n        setThumbPercent,\n        decrementThumb,\n        incrementThumb,\n        step,\n        pageSize\n      } = stateRef.current;\n      let size = isVertical ? trackRef.current.offsetHeight : trackRef.current.offsetWidth;\n\n      if (currentPosition.current == null) {\n        currentPosition.current = getThumbPercent(index) * size;\n      }\n      if (pointerType === 'keyboard') {\n        if ((deltaX > 0 && reverseX) || (deltaX < 0 && !reverseX) || deltaY > 0) {\n          decrementThumb(index, shiftKey ? pageSize : step);\n        } else {\n          incrementThumb(index, shiftKey ? pageSize : step);\n        }\n      } else {\n        let delta = isVertical ? deltaY : deltaX;\n        if (isVertical || reverseX) {\n          delta = -delta;\n        }\n\n        currentPosition.current += delta;\n        setThumbPercent(index, clamp(currentPosition.current / size, 0, 1));\n      }\n    },\n    onMoveEnd() {\n      stateRef.current.setThumbDragging(index, false);\n    }\n  });\n\n  // Immediately register editability with the state\n  state.setThumbEditable(index, !isDisabled);\n\n  const {focusableProps} = useFocusable(\n    mergeProps(opts, {\n      onFocus: () => state.setFocusedThumb(index),\n      onBlur: () => state.setFocusedThumb(undefined)\n    }),\n    inputRef\n  );\n\n  let currentPointer = useRef<number | undefined>(undefined);\n  let onDown = (id?: number) => {\n    focusInput();\n    currentPointer.current = id;\n    state.setThumbDragging(index, true);\n\n    addGlobalListener(window, 'mouseup', onUp, false);\n    addGlobalListener(window, 'touchend', onUp, false);\n    addGlobalListener(window, 'pointerup', onUp, false);\n\n  };\n\n  let onUp = (e) => {\n    let id = e.pointerId ?? e.changedTouches?.[0].identifier;\n    if (id === currentPointer.current) {\n      focusInput();\n      state.setThumbDragging(index, false);\n      removeGlobalListener(window, 'mouseup', onUp, false);\n      removeGlobalListener(window, 'touchend', onUp, false);\n      removeGlobalListener(window, 'pointerup', onUp, false);\n    }\n  };\n\n  // We install mouse handlers for the drag motion on the thumb div, but\n  // not the key handler for moving the thumb with the slider.  Instead,\n  // we focus the range input, and let the browser handle the keyboard\n  // interactions; we then listen to input's onChange to update state.\n  return {\n    inputProps: mergeProps(focusableProps, fieldProps, {\n      type: 'range',\n      tabIndex: !isDisabled ? 0 : undefined,\n      min: state.getThumbMinValue(index),\n      max: state.getThumbMaxValue(index),\n      step: state.step,\n      value: value,\n      disabled: isDisabled,\n      'aria-orientation': opts.orientation,\n      'aria-valuetext': state.getThumbValueLabel(index),\n      'aria-required': isRequired || undefined,\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': opts['aria-errormessage'],\n      onChange: (e: ChangeEvent<HTMLInputElement>) => {\n        stateRef.current.setThumbValue(index, parseFloat(e.target.value));\n      }\n    }),\n    thumbProps: !isDisabled ? mergeProps(\n      keyboardProps,\n      moveProps,\n      {\n        onMouseDown: (e: React.MouseEvent<HTMLElement>) => {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDown();\n        },\n        onPointerDown: (e: React.PointerEvent<HTMLElement>) => {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDown(e.pointerId);\n        },\n        onTouchStart: (e: React.TouchEvent<HTMLElement>) => {onDown(e.changedTouches[0].identifier);}\n      }\n    ) : {},\n    labelProps\n  };\n}\n"],"names":[],"version":3,"file":"module.js.map"}