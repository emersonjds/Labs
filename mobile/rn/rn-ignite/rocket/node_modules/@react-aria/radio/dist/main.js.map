{"mappings":"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","sources":["packages/@react-aria/radio/src/index.ts","packages/@react-aria/radio/src/useRadio.ts","packages/@react-aria/radio/src/utils.ts","packages/@react-aria/radio/src/useRadioGroup.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useRadio';\nexport * from './useRadioGroup';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaRadioProps} from '@react-types/radio';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {InputHTMLAttributes, RefObject} from 'react';\nimport {radioGroupNames} from './utils';\nimport {RadioGroupState} from '@react-stately/radio';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\ninterface RadioAria {\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for an individual\n * radio button in a radio group.\n * @param props - Props for the radio.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n * @param ref - Ref to the HTML input element.\n */\nexport function useRadio(props: AriaRadioProps, state: RadioGroupState, ref: RefObject<HTMLElement>): RadioAria {\n  let {\n    value,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  } = props;\n\n  const isDisabled = props.isDisabled || state.isDisabled;\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  let checked = state.selectedValue === value;\n\n  let onChange = (e) => {\n    e.stopPropagation();\n    state.setSelectedValue(value);\n  };\n\n  let {pressProps} = usePress({\n    isDisabled\n  });\n\n  let {focusableProps} = useFocusable(mergeProps(props, {\n    onFocus: () => state.setLastFocusedValue(value)\n  }), ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n  let tabIndex = state.lastFocusedValue === value || state.lastFocusedValue == null ? 0 : -1;\n  if (isDisabled) {\n    tabIndex = undefined;\n  }\n\n  return {\n    inputProps: mergeProps(domProps, {\n      ...interactions,\n      type: 'radio',\n      name: radioGroupNames.get(state),\n      tabIndex,\n      disabled: isDisabled,\n      checked,\n      value,\n      onChange\n    })\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RadioGroupState} from '@react-stately/radio';\n\nexport const radioGroupNames = new WeakMap<RadioGroupState, string>();\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaRadioGroupProps} from '@react-types/radio';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {getFocusableTreeWalker} from '@react-aria/focus';\nimport {HTMLAttributes} from 'react';\nimport {radioGroupNames} from './utils';\nimport {RadioGroupState} from '@react-stately/radio';\nimport {useFocusWithin} from '@react-aria/interactions';\nimport {useLabel} from '@react-aria/label';\nimport {useLocale} from '@react-aria/i18n';\n\ninterface RadioGroupAria {\n  /** Props for the radio group wrapper element. */\n  radioGroupProps: HTMLAttributes<HTMLElement>,\n  /** Props for the radio group's visible label (if any). */\n  labelProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a radio group component.\n * Radio groups allow users to select a single item from a list of mutually exclusive options.\n * @param props - Props for the radio group.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n */\nexport function useRadioGroup(props: AriaRadioGroupProps, state: RadioGroupState): RadioGroupAria {\n  let {\n    name,\n    validationState,\n    isReadOnly,\n    isRequired,\n    isDisabled,\n    orientation = 'vertical'\n  } = props;\n  let {direction} = useLocale();\n\n  let {labelProps, fieldProps} = useLabel({\n    ...props,\n    // Radio group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  // When the radio group loses focus, reset the focusable radio to null if\n  // there is no selection. This allows tabbing into the group from either\n  // direction to go to the first or last radio.\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin() {\n      if (!state.selectedValue) {\n        state.setLastFocusedValue(null);\n      }\n    }\n  });\n\n  let onKeyDown = (e) => {\n    let nextDir;\n    switch (e.key) {\n      case 'ArrowRight':\n        if (direction === 'rtl' && orientation !== 'vertical') {\n          nextDir = 'prev';\n        } else {\n          nextDir = 'next';\n        }\n        break;\n      case 'ArrowLeft':\n        if (direction === 'rtl' && orientation !== 'vertical') {\n          nextDir = 'next';\n        } else {\n          nextDir = 'prev';\n        }\n        break;\n      case 'ArrowDown':\n        nextDir = 'next';\n        break;\n      case 'ArrowUp':\n        nextDir = 'prev';\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n    let walker = getFocusableTreeWalker(e.currentTarget, {from: e.target});\n    let nextElem;\n    if (nextDir === 'next') {\n      nextElem = walker.nextNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.firstChild();\n      }\n    } else {\n      nextElem = walker.previousNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.lastChild();\n      }\n    }\n    if (nextElem) {\n      // Call focus on nextElem so that keyboard navigation scrolls the radio into view\n      nextElem.focus();\n      state.setSelectedValue(nextElem.value);\n    }\n  };\n\n  let groupName = useId(name);\n  radioGroupNames.set(state, groupName);\n\n  return {\n    radioGroupProps: mergeProps(domProps, {\n      // https://www.w3.org/TR/wai-aria-1.2/#radiogroup\n      role: 'radiogroup',\n      onKeyDown,\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      'aria-disabled': isDisabled || undefined,\n      'aria-orientation': orientation,\n      ...fieldProps,\n      ...focusWithinProps\n    }),\n    labelProps\n  };\n}\n"],"names":[],"version":3,"file":"main.js.map"}