{"version":3,"sources":["propsFlattener.tsx"],"names":["SPECIFICITY_1000","SPECIFICITY_110","SPECIFICITY_100","SPECIFICITY_70","SPECIFICITY_60","SPECIFICITY_55","SPECIFICITY_50","SPECIFICITY_40","SPECIFICITY_30","SPECIFICITY_20","SPECIFICITY_10","specificityPrecedence","INITIAL_PROP_SPECIFICITY","pseudoPropsMap","_web","dependentOn","priority","_ios","_android","_light","_dark","_indeterminate","respondTo","_checked","_readOnly","_invalid","_focus","_focusVisible","_hover","_pressed","_disabled","_loading","_important","compareSpecificity","exisiting","upcoming","ignorebaseTheme","condition","length","index","shouldResolvePseudoProp","property","state","platform","colormode","simplifyProps","props","currentSpecificity","previouslyFlattenProps","cascadePseudoProps","flattenProps","specificityMap","mergePsuedoProps","propertySpecity","process","env","NODE_ENV","debug","console","log","includes","undefined","startsWith","propsFlattener","currentSpecificityMap"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge';\n\nconst SPECIFICITY_1000 = 1000;\nconst SPECIFICITY_110 = 110;\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30;\n// SPECIFICITY_20 is being user for defferentiating between User Props and Theme Props. So any specificity less than SPECIFICITY_20 will be ovridable by user props.\nconst SPECIFICITY_20 = 20;\nconst SPECIFICITY_10 = 10;\nconst specificityPrecedence = [\n  SPECIFICITY_1000,\n  SPECIFICITY_110,\n  SPECIFICITY_100,\n  SPECIFICITY_70,\n  SPECIFICITY_60,\n  SPECIFICITY_55,\n  SPECIFICITY_50,\n  SPECIFICITY_40,\n  SPECIFICITY_30,\n  SPECIFICITY_20,\n  SPECIFICITY_10,\n];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_1000]: 0,\n  [SPECIFICITY_110]: 0,\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_20]: 0,\n  [SPECIFICITY_10]: 0,\n};\n\nconst pseudoPropsMap = {\n  _web: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _ios: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _android: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n\n  _light: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n  _dark: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30,\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40,\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50,\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55,\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60,\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70,\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100,\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110,\n  },\n  _important: {\n    dependentOn: null,\n    priority: SPECIFICITY_1000,\n  },\n} as const;\n\ntype IPseudoPropsMap = typeof pseudoPropsMap;\ntype ExtractState<T extends IPseudoPropsMap> = {\n  // @ts-ignore\n  [P in keyof T as T[P]['respondTo']]?: boolean;\n};\nexport type IStateProps = ExtractState<IPseudoPropsMap>;\n\nexport const compareSpecificity = (\n  exisiting: any,\n  upcoming: any,\n  ignorebaseTheme?: boolean\n  // property?: any\n) => {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme\n    ? specificityPrecedence.length - 1\n    : specificityPrecedence.length;\n  for (let index = 0; index < condition; index++) {\n    if (\n      exisiting[specificityPrecedence[index]] >\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return false;\n    } else if (\n      exisiting[specificityPrecedence[index]] <\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return true;\n    }\n  }\n  return true;\n};\n\nconst shouldResolvePseudoProp = ({\n  property,\n  state,\n  platform,\n  colormode,\n}: {\n  property: keyof IPseudoPropsMap;\n  state: IStateProps;\n  platform: any;\n  colormode: any;\n}) => {\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === `_${platform}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === `_${colormode}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    // @ts-ignore\n    return state[pseudoPropsMap[property].respondTo];\n  } else if (pseudoPropsMap[property].dependentOn === null) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificity,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  flattenProps: any = {},\n  specificityMap: any = {},\n  priority: number\n) => {\n  const mergePsuedoProps = (property: string, propertySpecity: object) => {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with higher specificity'\n        );\n      }\n      specificityMap[property] = propertySpecity;\n      // merging internal props (like, _text, _stack ...)\n      flattenProps[property] = merge(\n        {},\n        flattenProps[property],\n        props[property]\n      );\n    } else {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with lower specificity'\n        );\n      }\n      flattenProps[property] = merge(\n        {},\n        props[property],\n        flattenProps[property]\n      );\n    }\n  };\n  for (const property in props) {\n    // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n    const propertySpecity = currentSpecificity\n      ? { ...currentSpecificity }\n      : {\n          ...INITIAL_PROP_SPECIFICITY,\n          [SPECIFICITY_20]: priority,\n        };\n\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] ||\n      ['_dark', '_light', '_web', '_ios', '_android', '_important'].includes(\n        property\n      )\n    ) {\n      // @ts-ignore\n      if (shouldResolvePseudoProp({ property, state, platform, colormode })) {\n        // NOTE: Handling (state driven) props like _important, _web, _ios, _android, _dark, _light, _disabled, _focus, _focusVisible, _hover, _pressed, _readOnly, _invalid, .... Only when they are true.\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\n            `%c ${property}`,\n            'color: #818cf8;',\n            'recursively resolving'\n          );\n        }\n        // @ts-ignore\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps(\n          {\n            props: props[property],\n            colormode,\n            platform,\n            state,\n            currentSpecificity: propertySpecity,\n            previouslyFlattenProps: previouslyFlattenProps,\n            cascadePseudoProps,\n          },\n          flattenProps,\n          specificityMap,\n          priority\n        );\n      }\n      // @ts-ignore\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        // NOTE: Handling (internal) props like _text, _stack, ....\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\n              `%c ${property}`,\n              'color: #818cf8;',\n              'updated as simple prop'\n            );\n          }\n          specificityMap[property] = propertySpecity;\n          // replacing simple props (like, p, m, bg, color, ...)\n          flattenProps[property] = props[property];\n        } else {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(`%c ${property}`, 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      // Can delete unused props\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'cascaded');\n        }\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport const propsFlattener = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  priority: number\n) => {\n  const flattenProps: any = {};\n\n  for (const property in props) {\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] === undefined &&\n      property.startsWith('_')\n    ) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {};\n\n  simplifyProps(\n    {\n      props,\n      colormode,\n      platform,\n      state,\n      currentSpecificityMap,\n      previouslyFlattenProps,\n      cascadePseudoProps,\n    },\n    flattenProps,\n    specificityMap,\n    priority\n  );\n\n  return [flattenProps, specificityMap];\n};\n"]}