{"version":3,"sources":["ListItem.tsx"],"names":["ListItem","children","props","ref","hoverProps","isHovered","pressableProps","isPressed","focusProps","isFocused","index","start","unordered","ul","ordered","ol","_text","borderTopWidth","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","resolvedProps","_ref","React","useRef","pressableComponentProps","nonPressableProps","Object","keys","length","transform","scale","_hover","_pressed","_focus","fontWeight"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport type { IListItemProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { Pressable } from '../Pressable';\n// import { useHover } from '@react-native-aria/interactions';\nimport { extractInObject } from '../../../theme/tools';\nimport { composeEventHandlers } from '../../../utils';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ListItem = ({ children, ...props }: IListItemProps, ref: any) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const {\n    index,\n    start,\n    unordered,\n    ul,\n    ordered,\n    ol,\n    _text,\n    borderTopWidth,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('ListItem', props, {\n    isHovered,\n    isPressed,\n    isFocused,\n  });\n  const _ref = React.useRef(null);\n  // const { isHovered } = useHover({}, _ref);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  // Extracting Pressable Props from resolvedProps\n  const [\n    pressableComponentProps,\n    nonPressableProps,\n  ] = extractInObject(resolvedProps, [\n    'onPress',\n    'unstable_pressDelay',\n    'android_ripple',\n    'android_disableSound',\n    'delayLongPress',\n    'hitSlop',\n    'disabled',\n    'onLongPress',\n    'onPressIn',\n    'onPressOut',\n    'pressRetentionOffset',\n    'testOnly_pressed',\n    'onHoverIn',\n    'onHoverOut',\n    'onFocus',\n    'onBlur',\n    '_pressed',\n    '_focus',\n  ]);\n\n  return Object.keys(pressableComponentProps).length !== 0 ? (\n    // Checking if any Pressable Props present\n    <Pressable\n      accessibilityRole=\"button\"\n      accessibilityLabel={`List-Item-${index + start}`}\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...resolvedProps}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus)\n        // focusRingProps.onFocu\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur)\n        // focusRingProps.onBlur\n      )}\n      borderTopWidth={index ? borderTopWidth : 0}\n      ref={ref}\n    >\n      {/* {({ isPressed, isHovered, isFocusVisible }: any) => {\n        const focusTextProps = isFocusVisible &&\n          _focus?._text && { ..._focus._text };\n        const hoverTextProps = isHovered &&\n          _hover?._text && { ..._hover._text };\n        const pressedTextProps = isPressed &&\n          _pressed?._text && { ..._pressed._text };\n        return ( */}\n      <>\n        <Box flexDirection=\"row\" alignItems=\"center\" pl={2}>\n          {ul || unordered ? ( //Adding disc in front of ListItem\n            <Box\n              style={{ transform: [{ scale: 1.5 }] }}\n              mr={2}\n              // _text={{\n              //   fontWeight: 'bold',\n              //   ..._text,\n              //   ...hoverTextProps,\n              //   ...focusTextProps,\n              //   ...pressedTextProps,\n              // }}\n            >\n              •\n            </Box>\n          ) : null}\n          {ol || ordered ? ( //Adding index number in front of ListItem\n            <Box\n              mr={2}\n              // _text={{\n              //   fontWeight: 'bold',\n              //   ..._text,\n              //   ...hoverTextProps,\n              //   ...focusTextProps,\n              //   ...pressedTextProps,\n              // }}\n            >\n              {index + start + '.'}\n            </Box>\n          ) : null}\n        </Box>\n        <Box\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          // _text={{\n          //   ..._text,\n          //   ...hoverTextProps,\n          //   ...focusTextProps,\n          //   ...pressedTextProps,\n          // }}\n        >\n          {children}\n        </Box>\n      </>\n      {/* ); */}\n      {/* }} */}\n    </Pressable>\n  ) : (\n    // If no Pressable Props passed by user render Box instead of Pressable\n    <Box\n      accessibilityRole=\"text\"\n      accessibilityLabel={`List-Item-${index + start}`}\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...nonPressableProps}\n      borderTopWidth={index ? borderTopWidth : 0}\n      ref={mergeRefs([ref, _ref])}\n      {...(isHovered && resolvedProps._hover)}\n      {...(isPressed && resolvedProps._pressed)}\n      {...(isFocused && resolvedProps._focus)}\n    >\n      <Box flexDirection=\"row\" alignItems=\"center\" pl={2}>\n        {ul || unordered ? ( //Adding disc in front of ListItem\n          <Box\n            style={{ transform: [{ scale: 1.5 }] }}\n            mr={2}\n            _text={{ fontWeight: 'bold', ..._text }}\n          >\n            •\n          </Box>\n        ) : null}\n        {ol || ordered ? ( //Adding index number in front of ListItem\n          <Box mr={2} _text={{ fontWeight: 'bold', ..._text }}>\n            {index + start + '.'}\n          </Box>\n        ) : null}\n      </Box>\n      <Box\n        flex={1}\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        _text={\n          _text\n          // ...(isHovered && _hover?._text && { ..._hover._text }),\n        }\n      >\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(ListItem));\n"]}