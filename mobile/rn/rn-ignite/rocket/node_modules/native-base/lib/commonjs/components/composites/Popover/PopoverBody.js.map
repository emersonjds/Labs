{"version":3,"sources":["PopoverBody.tsx"],"names":["PopoverBody","props","ref","resolvedProps","setBodyMounted","bodyId","PopoverContext"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAmBC,GAAnB,KAAiC;AACnD,QAAMC,aAAa,GAAG,+BAAmB,aAAnB,EAAkCF,KAAlC,CAAtB;AACA,QAAM;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA6B,uBAAWC,8BAAX,CAAnC;AAEA,wBAAU,MAAM;AACdF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,WAAO,MAAM;AACXA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAFD;AAGD,GALD,EAKG,CAACA,cAAD,CALH,EAJmD,CAWnD;;AACA,MAAI,kDAAsBH,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,6BAAC,YAAD;AAAK,IAAA,QAAQ,EAAEI;AAAf,KAA2BF,aAA3B;AAA0C,IAAA,GAAG,EAAED;AAA/C,KAAP;AACD,CAhBD;;4BAkBe,+BAAK,uBAAWF,WAAX,CAAL,C","sourcesContent":["import { usePropsResolution } from '../../../hooks';\nimport React, { useContext, memo, forwardRef, useEffect } from 'react';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverBody = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverBody', props);\n  const { setBodyMounted, bodyId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setBodyMounted(true);\n    return () => {\n      setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={bodyId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverBody));\n"]}