{"version":3,"sources":["SliderTrack.tsx"],"names":["SliderTrack","children","props","ref","orientation","trackProps","onTrackLayout","colorScheme","sliderSize","isReadOnly","isDisabled","React","useContext","SliderContext","isVertical","_pressable","resolvedProps","size","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAGA,MAAMA,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAA4CC,GAA5C,KAA0D;AAC5E,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA;AAPI,MAQFC,eAAMC,UAAN,CAAiBC,sBAAjB,CARJ;;AAUA,QAAMC,UAAU,GAAGV,WAAW,KAAK,UAAnC;AAEA,QAAM;AAAEW,IAAAA,UAAF;AAAc,OAAGC;AAAjB,MAAmC,uCACvC,aADuC,EAEvC;AACEC,IAAAA,IAAI,EAAET,UADR;AAEED,IAAAA,WAFF;AAGEO,IAAAA,UAHF;AAIE,OAAGZ;AAJL,GAFuC,EAQvC;AAAEO,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GARuC,CAAzC,CAb4E,CAwB5E;;AACA,MAAI,kDAAsBR,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBACE,6BAAC,oBAAD;AACE,IAAA,QAAQ,EAAEI,aADZ;AAEE,IAAA,GAAG,EAAEH;AAFP,KAGME,UAHN,EAIMU,UAJN,gBAME,6BAAC,YAAD,EAASC,aAAT,EAAyBf,QAAzB,CANF,CADF;AAUD,CAvCD;;4BAyCeU,eAAMO,UAAN,CAAiBlB,WAAjB,C","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../Pressable';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { ISliderTrackProps } from './types';\n\nconst SliderTrack = ({ children, ...props }: ISliderTrackProps, ref?: any) => {\n  const {\n    orientation,\n    trackProps,\n    onTrackLayout,\n    colorScheme,\n    sliderSize,\n    isReadOnly,\n    isDisabled,\n  } = React.useContext(SliderContext);\n\n  const isVertical = orientation === 'vertical';\n\n  const { _pressable, ...resolvedProps } = usePropsResolution(\n    'SliderTrack',\n    {\n      size: sliderSize,\n      colorScheme,\n      isVertical,\n      ...props,\n    },\n    { isReadOnly, isDisabled }\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      onLayout={onTrackLayout}\n      ref={ref}\n      {...trackProps}\n      {..._pressable}\n    >\n      <Box {...resolvedProps}>{children}</Box>\n    </Pressable>\n  );\n};\n\nexport default React.forwardRef(SliderTrack);\n"]}