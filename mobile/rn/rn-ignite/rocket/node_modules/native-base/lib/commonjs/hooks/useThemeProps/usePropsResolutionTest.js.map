{"version":3,"sources":["usePropsResolutionTest.tsx"],"names":["SPREAD_PROP_SPECIFICITY_ORDER","FINAL_SPREAD_PROPS","MARGIN_MAP","mx","my","mt","mb","mr","ml","margin","m","marginTop","marginBottom","marginLeft","marginRight","PADDING_MAP","px","py","pt","pb","pr","pl","padding","p","paddingTop","paddingBottom","paddingLeft","paddingRight","SPREAD_PROP_SPECIFICITY_MAP","propsSpreader","incomingProps","incomingSpecifity","flattenedDefaultProps","specificity","forEach","prop","val","includes","newProp","usePropsResolutionTest","component","state","config","ignoredProps","cleanIncomingProps","concat","ignoreProps","resolveResponsively","theme","colorModeProps","componentTheme","incomingWithDefaultProps","defaultProps","flattenProps","specificityMap","props","platform","Platform","OS","colormode","colorMode","previouslyFlattenProps","responsiveProps","map","propsName","responsivelyResolvedProps","componentBaseStyle","flattenBaseStyle","baseSpecificityMap","baseStyle","currentSpecificityMap","variant","componentVariantProps","flattenVariantStyle","variantSpecificityMap","variants","undefined","size","componentSizeProps","flattenSizeStyle","sizeSpecificityMap","sizes","defaultStyles","defaultSpecificity","ignore","bg","linearGradient","background","bgColor","backgroundColor","bgProp","colors","color","gradientProps","contrastTextColor","_text","resolvedProps"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport { Platform } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useContrastText } from '../useContrastText';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport { propsFlattener, compareSpecificity } from './propsFlattenerTest';\n\nconst SPREAD_PROP_SPECIFICITY_ORDER = [\n  'p',\n  'padding',\n  'px',\n  'py',\n  'pt',\n  'pb',\n  'pl',\n  'pr',\n  'paddingTop',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'm',\n  'margin',\n  'mx',\n  'my',\n  'mt',\n  'mb',\n  'ml',\n  'mr',\n  'marginTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n];\n\nconst FINAL_SPREAD_PROPS = [\n  'paddingTop',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'marginTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n];\n\nconst MARGIN_MAP: any = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft'],\n};\n\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\n\nconst PADDING_MAP: any = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft'],\n};\n\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nconst SPREAD_PROP_SPECIFICITY_MAP: any = {\n  ...PADDING_MAP,\n  ...MARGIN_MAP,\n};\n\nfunction propsSpreader(incomingProps: any, incomingSpecifity: any) {\n  const flattenedDefaultProps: any = { ...incomingProps };\n  const specificity: any = {};\n\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach((prop) => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach((newProp: string) => {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n\n  return merge({}, flattenedDefaultProps);\n}\n\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\nexport function usePropsResolutionTest(\n  component: string,\n  incomingProps: any,\n  state?: any,\n  config?: any\n) {\n  const [ignoredProps, cleanIncomingProps] = extractInObject(\n    incomingProps,\n    ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat(\n      config?.ignoreProps || []\n    )\n  );\n  const resolveResponsively = [\n    'colorScheme',\n    'size',\n    'variant',\n    ...(config?.resolveResponsively || []),\n  ];\n\n  const { theme } = useNativeBase();\n  const colorModeProps = useColorMode();\n\n  const componentTheme = get(theme, `components.${component}`, {});\n\n  // STEP 1: combine default props and incoming props\n\n  const incomingWithDefaultProps = merge(\n    {},\n    componentTheme.defaultProps || {},\n    cleanIncomingProps\n  );\n  // STEP 2: flatten them\n\n  let [flattenProps, specificityMap] = propsFlattener(\n    {\n      props: incomingWithDefaultProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      previouslyFlattenProps: {},\n    },\n    2\n  );\n\n  // STEP 2.5: resolving responsive props\n  const responsiveProps = {};\n  resolveResponsively.map((propsName) => {\n    if (flattenProps[propsName]) {\n      // @ts-ignore\n      responsiveProps[propsName] = flattenProps[propsName];\n    }\n  });\n\n  const responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n\n  flattenProps = {\n    ...flattenProps,\n    ...responsivelyResolvedProps,\n  };\n  // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n\n  // NOTE: Resoloving baseStyle\n  let componentBaseStyle = {},\n    flattenBaseStyle,\n    baseSpecificityMap;\n  if (componentTheme.baseStyle) {\n    componentBaseStyle =\n      typeof componentTheme.baseStyle !== 'function'\n        ? componentTheme.baseStyle\n        : componentTheme.baseStyle({\n            theme,\n            ...flattenProps,\n            ...colorModeProps,\n          });\n\n    [flattenBaseStyle, baseSpecificityMap] = propsFlattener(\n      {\n        props: componentBaseStyle,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap: specificityMap,\n        previouslyFlattenProps: flattenProps,\n      },\n      1\n    );\n  }\n\n  // NOTE: Resolving variants\n\n  const variant = flattenProps.variant;\n\n  let componentVariantProps = {},\n    flattenVariantStyle,\n    variantSpecificityMap;\n  // Extracting props from variant\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps =\n      typeof componentTheme.variants[variant] !== 'function'\n        ? componentTheme.variants[variant]\n        : componentTheme.variants[variant]({\n            theme,\n            ...flattenProps,\n            ...colorModeProps,\n          });\n\n    [flattenVariantStyle, variantSpecificityMap] = propsFlattener(\n      {\n        props: componentVariantProps,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap: baseSpecificityMap || specificityMap,\n        // NOTE: Ideally flattenBaseStyle and flattenProps should be deeply merged to create previouslyFlattenProps.\n        previouslyFlattenProps: flattenProps,\n      },\n      1\n    );\n\n    // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n    flattenProps.variant = undefined;\n  }\n\n  // NOTE: Resolving size\n\n  const size = flattenProps.size;\n\n  let componentSizeProps = {},\n    flattenSizeStyle,\n    sizeSpecificityMap;\n  // Extracting props from size\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    // Type - sizes: {lg: 1}. Refer icon theme\n    if (\n      typeof componentTheme.sizes[size] === 'string' ||\n      typeof componentTheme.sizes[size] === 'number'\n    ) {\n      flattenProps.size = componentTheme.sizes[size];\n      //@ts-ignore\n      // componentSizeProps.size = componentTheme.sizes[size];\n    }\n    // Type - sizes: (props) => ({lg: {px: 1}}). Refer heading theme\n    else if (typeof componentTheme.sizes[size] === 'function') {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size]({\n        theme,\n        ...flattenProps,\n        ...colorModeProps,\n      });\n    }\n    // Type - sizes: {lg: {px: 1}}. Refer button theme\n    else {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size];\n    }\n\n    [flattenSizeStyle, sizeSpecificityMap] = propsFlattener(\n      {\n        props: componentSizeProps,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap:\n          variantSpecificityMap || baseSpecificityMap || specificityMap,\n        previouslyFlattenProps: flattenProps,\n      },\n      1\n    );\n  }\n\n  // // STEP 4: merge\n  const defaultStyles = merge(\n    {},\n    flattenBaseStyle,\n    flattenVariantStyle,\n    flattenSizeStyle\n  );\n\n  for (const prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = merge(\n    {},\n    specificityMap,\n    baseSpecificityMap,\n    variantSpecificityMap,\n    sizeSpecificityMap\n  );\n\n  flattenProps = propsSpreader(\n    { ...defaultStyles, ...flattenProps },\n    defaultSpecificity\n  );\n\n  // // STEP 5: linear Grad and contrastText\n  let ignore: any = [];\n  if (\n    flattenProps.bg?.linearGradient ||\n    flattenProps.background?.linearGradient ||\n    flattenProps.bgColor?.linearGradient ||\n    flattenProps.backgroundColor?.linearGradient\n  ) {\n    let bgProp = 'bg';\n    if (flattenProps.background?.linearGradient) {\n      bgProp = 'background';\n    } else if (flattenProps.bgColor?.linearGradient) {\n      bgProp = 'bgColor';\n    } else if (flattenProps.backgroundColor?.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n    flattenProps[bgProp].linearGradient.colors = flattenProps[\n      bgProp\n    ].linearGradient.colors.map((color: string) => {\n      return get(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  }\n  // // NOTE: seprating bg props when linearGardiant is available\n  const [gradientProps] = extractInObject(flattenProps, ignore);\n\n  const bgColor =\n    flattenProps.bg ?? flattenProps.backgroundColor ?? flattenProps.bgColor;\n\n  const contrastTextColor = useContrastText(\n    bgColor,\n    flattenProps?._text?.color\n  );\n\n  flattenProps._text =\n    contrastTextColor && flattenProps?._text?.color === undefined\n      ? {\n          color: contrastTextColor,\n          ...flattenProps._text,\n        }\n      : flattenProps._text;\n\n  const resolvedProps = omitUndefined({\n    ...flattenProps,\n    ...ignoredProps,\n    ...gradientProps,\n  });\n  // STEP 6: Return\n\n  // flattenProps = {};\n  // propertyDepth = {};\n\n  return resolvedProps;\n}\n"]}