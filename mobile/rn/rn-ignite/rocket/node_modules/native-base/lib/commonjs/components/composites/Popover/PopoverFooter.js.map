{"version":3,"sources":["PopoverFooter.tsx"],"names":["PopoverFooter","props","ref","resolvedProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAmBC,GAAnB,KAAiC;AACrD,QAAMC,aAAa,GAAG,+BAAmB,eAAnB,EAAoCF,KAApC,CAAtB,CADqD,CAErD;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,6BAAC,YAAD,eAASE,aAAT;AAAwB,IAAA,GAAG,EAAED;AAA7B,KAAP;AACD,CAPD;;4BASe,+BAAK,uBAAWF,aAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverFooter = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverFooter', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverFooter));\n"]}