{"version":3,"sources":["useBreakpointValue.test.tsx"],"names":["describe","wrapper","children","frame","x","y","width","height","insets","top","left","right","bottom","test","result","expect","current","toEqual","undefined","base","sm","md"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACnC,QAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACd,6BAAC,sCAAD;AACE,IAAA,oBAAoB,EAAE;AACpBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE,CAAX;AAAcC,QAAAA,KAAK,EAAE,CAArB;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OADa;AAEpBC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,IAAI,EAAE,CAAhB;AAAmBC,QAAAA,KAAK,EAAE,CAA1B;AAA6BC,QAAAA,MAAM,EAAE;AAArC;AAFY;AADxB,KAMGV,QANH,CADF;;AAUAW,EAAAA,IAAI,CAAC,aAAD,EAAgB,MAAM;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAa,4BAAW,MAAM,4CAAmB,EAAnB,CAAjB,EAAyC;AAC1Db,MAAAA;AAD0D,KAAzC,CAAnB;AAGAc,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B,EAA/B;AACD,GALG,CAAJ;AAMAJ,EAAAA,IAAI,CAAC,cAAD,EAAiB,MAAM;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAa,4BAAW,MAAM,4CAAmB,EAAnB,CAAjB,EAAyC;AAC1Db,MAAAA;AAD0D,KAAzC,CAAnB;AAGAc,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+BC,SAA/B;AACD,GALG,CAAJ;AAMAL,EAAAA,IAAI,CAAC,aAAD,EAAgB,MAAM;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAa,4BAAW,MAAM,4CAAmB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnB,CAAjB,EAAgD;AACjEb,MAAAA;AADiE,KAAhD,CAAnB;AAGAc,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B,CAA/B;AACD,GALG,CAAJ;AAMAJ,EAAAA,IAAI,CAAC,cAAD,EAAiB,MAAM;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAa,4BACjB,MAAM,4CAAmB;AAAEK,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,EAAE,EAAE,CAAf;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAAnB,CADW,EAEjB;AACEpB,MAAAA;AADF,KAFiB,CAAnB;AAMAc,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B,CAA/B;AACD,GARG,CAAJ;AASD,CAtCO,CAAR","sourcesContent":["import React from 'react';\nimport { useBreakpointValue } from '../../hooks/useBreakpointValue';\nimport { NativeBaseProvider } from '../../core/NativeBaseProvider';\nimport { renderHook } from '@testing-library/react-hooks';\n\ndescribe('useBreakpointValue', () => {\n  const wrapper = ({ children }: any) => (\n    <NativeBaseProvider\n      initialWindowMetrics={{\n        frame: { x: 0, y: 0, width: 0, height: 0 },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }}\n    >\n      {children}\n    </NativeBaseProvider>\n  );\n  test('Empty array', () => {\n    const { result } = renderHook(() => useBreakpointValue([]), {\n      wrapper,\n    });\n    expect(result.current).toEqual([]);\n  });\n  test('Empty object', () => {\n    const { result } = renderHook(() => useBreakpointValue({}), {\n      wrapper,\n    });\n    expect(result.current).toEqual(undefined);\n  });\n  test('Basic array', () => {\n    const { result } = renderHook(() => useBreakpointValue([1, 2, 3]), {\n      wrapper,\n    });\n    expect(result.current).toEqual(2);\n  });\n  test('Basic Object', () => {\n    const { result } = renderHook(\n      () => useBreakpointValue({ base: 0, sm: 1, md: 2 }),\n      {\n        wrapper,\n      }\n    );\n    expect(result.current).toEqual(1);\n  });\n});\n"]}