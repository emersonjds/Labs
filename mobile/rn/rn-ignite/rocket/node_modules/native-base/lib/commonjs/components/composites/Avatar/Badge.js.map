{"version":3,"sources":["Badge.tsx"],"names":["AvatarBadge","props","ref","resolvedProps","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,WAAW,gBAAG,+BAClB,uBAAW,CAACC,KAAD,EAA2BC,GAA3B,KAAyC;AAClD,QAAMC,aAAa,GAAG,uCAAmB,aAAnB,EAAkCF,KAAlC,CAAtB,CADkD,CAElD;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,6BAAC,YAAD,eAASE,aAAT;AAAwB,IAAA,GAAG,EAAED;AAA7B,KAAP;AACD,CAPD,CADkB,CAApB;AAWAF,WAAW,CAACI,WAAZ,GAA0B,aAA1B;eACeJ,W","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarBadgeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AvatarBadge = memo(\n  forwardRef((props: IAvatarBadgeProps, ref?: any) => {\n    const resolvedProps = usePropsResolution('AvatarBadge', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return <Box {...resolvedProps} ref={ref} />;\n  })\n);\n\nAvatarBadge.displayName = 'AvatarBadge';\nexport default AvatarBadge as (props: IAvatarBadgeProps, ref?: any) => any;\n"]}