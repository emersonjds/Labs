{"version":3,"sources":["ModalBody.tsx"],"names":["ModalBody","children","props","ref","_scrollview","resolvedProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,SAAS,GAAG,CAChB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CADgB,EAEhBC,GAFgB,KAGb;AACH,QAAM;AAAEC,IAAAA,WAAF;AAAe,OAAGC;AAAlB,MAAoC,+BACxC,WADwC,EAExCH,KAFwC,CAA1C,CADG,CAKH;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,sBAAD,EAAgBE,WAAhB,eACE,6BAAC,YAAD,eAASC,aAAT;AAAwB,IAAA,GAAG,EAAEF;AAA7B,MACGF,QADH,CADF,CADF;AAOD,CAnBD;;4BAqBe,+BAAK,uBAAWD,SAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { ScrollView, IScrollViewProps } from '../../basic/ScrollView';\n\nconst ModalBody = (\n  { children, ...props }: IBoxProps & { _scrollview?: IScrollViewProps },\n  ref?: any\n) => {\n  const { _scrollview, ...resolvedProps } = usePropsResolution(\n    'ModalBody',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView {..._scrollview}>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n"]}