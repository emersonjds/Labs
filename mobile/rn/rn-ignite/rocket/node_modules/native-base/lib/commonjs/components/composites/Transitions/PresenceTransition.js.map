{"version":3,"sources":["PresenceTransition.tsx"],"names":["PresenceTransition","visible","onTransitionComplete","rest","ref","setExited","React","useContext","ExitAnimationContext","state"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;AAEA,MAAMA,kBAAkB,GAAG,CACzB;AAAEC,EAAAA,OAAO,GAAG,KAAZ;AAAmBC,EAAAA,oBAAnB;AAAyC,KAAGC;AAA5C,CADyB,EAEzBC,GAFyB,KAGtB;AACH;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAgBC,eAAMC,UAAN,CAAiBC,0CAAjB,CAAtB,CAHG,CAIH;;;AACA,MAAI,kDAAsBL,IAAtB,CAAJ,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,sBACE,6BAAC,sBAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,oBAAoB,EAAGQ,KAAD,IAAW;AAC/B,UAAIA,KAAK,KAAK,QAAd,EAAwB;AACtBJ,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AACDH,MAAAA,oBAAoB,IAAIA,oBAAoB,CAACO,KAAD,CAA5C;AACD;AATH,KAUMN,IAVN;AAWE,IAAA,GAAG,EAAEC;AAXP,KADF;AAeD,CA3BD;;4BA6Be,+BAAK,uBAAWJ,kBAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ExitAnimationContext } from '../../primitives/Overlay/ExitAnimationContext';\nimport { Transition } from './Transition';\nimport type { IPresenceTransitionProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PresenceTransition = (\n  { visible = false, onTransitionComplete, ...rest }: IPresenceTransitionProps,\n  ref: any\n) => {\n  // const [animationExited, setAnimationExited] = React.useState(!visible);\n\n  const { setExited } = React.useContext(ExitAnimationContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n\n  return (\n    <Transition\n      visible={visible}\n      onTransitionComplete={(state) => {\n        if (state === 'exited') {\n          setExited(true);\n        } else {\n          setExited(false);\n        }\n        onTransitionComplete && onTransitionComplete(state);\n      }}\n      {...rest}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(PresenceTransition));\n"]}