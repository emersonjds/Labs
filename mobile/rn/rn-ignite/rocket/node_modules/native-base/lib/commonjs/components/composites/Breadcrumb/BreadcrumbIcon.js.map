{"version":3,"sources":["BreadcrumbIcon.tsx"],"names":["BreadcrumbIcon","props","ref","isCurrent","React","useContext","BreadcrumbItemContext","children","_current","resolvedProps"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;AAEA;AACA,MAAMA,cAAc,GAAG,CAACC,KAAD,EAA8BC,GAA9B,KAA4C;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAwCC,eAAMC,UAAN,CAC5CC,8BAD4C,CAA9C;;AAIA,MAAI;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsB,OAAGC;AAAzB,MAA2C,4CAC7C,gBAD6C,EAE7CR,KAF6C,CAA/C;AAIA,sBACE,6BAAC,UAAD;AAAM,IAAA,GAAG,EAAEC;AAAX,KAAqBC,SAAS,IAAIK,QAAlC,EAAiDC,aAAjD,GACGF,QADH,CADF;AAKD,CAdD;;4BAgBe,+BAAK,uBAAWP,cAAX,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Icon } from '../../primitives/Icon';\nimport type { IBreadcrumbItemContext, IBreadcrumbIconProps } from './types';\nimport { BreadcrumbItemContext } from './Context';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\n\n// Add breadcrumbIcon as child of breadcrumbItem for implementaion of isCurrent prop\nconst BreadcrumbIcon = (props: IBreadcrumbIconProps, ref?: any) => {\n  const { isCurrent }: IBreadcrumbItemContext = React.useContext(\n    BreadcrumbItemContext\n  );\n\n  let { children, _current, ...resolvedProps } = usePropsResolution(\n    'BreadcrumbIcon',\n    props\n  );\n  return (\n    <Icon ref={ref} {...(isCurrent && _current)} {...resolvedProps}>\n      {children}\n    </Icon>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbIcon));\n"]}