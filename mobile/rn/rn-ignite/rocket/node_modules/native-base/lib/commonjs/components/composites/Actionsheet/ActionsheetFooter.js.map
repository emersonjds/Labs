{"version":3,"sources":["ActionsheetFooter.tsx"],"names":["ActionsheetFooter","props","ref","resolvedProps"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;AAEA,MAAMA,iBAAiB,GAAG,CAACC,KAAD,EAAiCC,GAAjC,KAA+C;AACvE,QAAMC,aAAa,GAAG,+BAAmB,mBAAnB,EAAwCF,KAAxC,CAAtB,CADuE,CAEvE;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,6BAAC,YAAD,CAAO,OAAP,eAAmBE,aAAnB;AAAkC,IAAA,GAAG,EAAED;AAAvC,KAAP;AACD,CAPD;;4BASe,+BAAK,uBAAWF,iBAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetFooterProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ActionsheetFooter = (props: IActionsheetFooterProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ActionsheetFooter', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Modal.Content {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ActionsheetFooter));\n"]}