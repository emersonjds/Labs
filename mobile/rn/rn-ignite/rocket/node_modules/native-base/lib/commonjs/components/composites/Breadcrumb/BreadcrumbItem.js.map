{"version":3,"sources":["BreadcrumbItem.tsx"],"names":["BreadcrumbItem","props","ref","children","isCurrent","_text","remainingProps","React","Children","map","child","index","cloneElement","fontWeight","isUnderlined","Platform","OS","undefined"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;AAEA,MAAMA,cAAc,GAAG,CAACC,KAAD,EAA8BC,GAA9B,KAA4C;AACjE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,KAAvB;AAA8B,OAAGC;AAAjC,MAAoDL,KAA1D,CADiE,CAEjE;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD;AAAA;AACE;AACA,iCAAC,8BAAD,CAAuB,QAAvB;AAAgC,MAAA,KAAK,EAAE;AAAEG,QAAAA;AAAF;AAAvC,oBACE,6BAAC,aAAD,eAAYE,cAAZ;AAA4B,MAAA,GAAG,EAAEJ;AAAjC,QACGK,eAAMC,QAAN,CAAeC,GAAf,CAAmBN,QAAnB,EAA6B,CAACO,KAAD,EAAaC,KAAb,kBAC5BJ,eAAMK,YAAN,CAAmBF,KAAnB,EAA0B;AACxB,uCAA0BC,KAA1B,CADwB;AAExB,eAAS,EACP,GAAGN,KADI;AACG;AACVQ,QAAAA,UAAU,EAAE;AAFL,OAFe;AAMxB,SAAG;AACDC,QAAAA,YAAY,EAAE;AADb,OANqB;AASxB,SAAGR,cATqB;AAUxB,sBACES,sBAASC,EAAT,KAAgB,KAAhB,IAAyBZ,SAAzB,GAAqC,MAArC,GAA8Ca;AAXxB,KAA1B,CADD,CADH,CADF;AAFF;AAsBD,CA5BD;;4BA8Be,+BAAK,uBAAWjB,cAAX,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Platform } from 'react-native';\nimport { HStack } from '../../primitives/Stack';\nimport { BreadcrumbItemContext } from './Context';\nimport type { IBreadcrumbItemProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst BreadcrumbItem = (props: IBreadcrumbItemProps, ref?: any) => {\n  const { children, isCurrent, _text, ...remainingProps } = props;\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    // Provider wrapped to use isCurrent prop in children of breadcrumb Item\n    <BreadcrumbItemContext.Provider value={{ isCurrent }}>\n      <HStack {...remainingProps} ref={ref}>\n        {React.Children.map(children, (child: any, index: number) =>\n          React.cloneElement(child, {\n            'key': `breadcrumb-item-${index}`,\n            '_text': {\n              ..._text, //taken out empty _text prop from props\n              fontWeight: 700,\n            },\n            ...{\n              isUnderlined: false,\n            },\n            ...remainingProps,\n            'aria-current':\n              Platform.OS === 'web' && isCurrent ? 'page' : undefined,\n          })\n        )}\n      </HStack>\n    </BreadcrumbItemContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbItem));\n"]}