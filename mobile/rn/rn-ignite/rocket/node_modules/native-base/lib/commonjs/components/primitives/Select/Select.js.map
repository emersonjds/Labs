{"version":3,"sources":["Select.tsx"],"names":["SelectContext","React","createContext","onValueChange","selectedValue","_selectedItem","_item","Select","isHovered","isHoveredProp","isFocused","isFocusedProp","isFocusVisible","isFocusVisibleProp","props","ref","selectProps","isDisabled","nativeID","flatListData","disabled","tempFix","_ref","useRef","isOpen","setIsOpen","useState","setIsFocused","focusProps","hoverProps","children","dropdownIcon","dropdownCloseIcon","dropdownOpenIcon","placeholder","accessibilityLabel","defaultValue","onOpen","onClose","optimized","customDropdownIconProps","_actionSheetContent","_actionSheetBody","_webSelect","resolvedProps","undefined","value","setValue","onChange","newValue","itemsList","Children","map","child","label","selectedItemArray","filter","item","selectedItem","length","contextValue","useMemo","rightIcon","handleClose","push","layoutProps","stylingProps","margin","flexbox","position","commonInput","Platform","OS","readOnly","required","e","target","Keyboard","dismiss","index","toString","isSelected","selected"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport type { ISelectProps } from './types';\nimport { Platform, Keyboard } from 'react-native';\nimport { Actionsheet } from '../../composites/Actionsheet';\nimport Box from '../Box';\nimport { Input } from '../Input';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useControllableState } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { useFormControl } from '../../composites/FormControl';\nimport { ChevronDownIcon } from '../Icon/Icons';\nimport type { IButtonProps } from '../Button/types';\nimport { ScrollView } from '../../basic/ScrollView';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { FlatList } from '../../basic/FlatList';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { ISelectItemProps } from './types';\nimport { Pressable } from '../Pressable';\n\nexport const SelectContext = React.createContext({\n  onValueChange: (() => {}) as any,\n  selectedValue: null as any,\n  _selectedItem: {} as IButtonProps,\n  _item: {} as IButtonProps,\n});\n\nconst Select = (\n  {\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    ...props\n  }: ISelectProps,\n  ref: any\n) => {\n  const selectProps = useFormControl({\n    isDisabled: props.isDisabled,\n    nativeID: props.nativeID,\n  });\n  const flatListData: ISelectItemProps[] = [];\n\n  const isDisabled = selectProps.disabled;\n  const tempFix = '__NativebasePlaceholder__';\n  const _ref = React.useRef(null);\n\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const [isFocused, setIsFocused] = React.useState<boolean>(false);\n\n  const { focusProps, isFocusVisible } = useFocusRing();\n  const { hoverProps, isHovered } = useHover({ isDisabled }, _ref);\n\n  const {\n    onValueChange,\n    selectedValue,\n    children,\n    dropdownIcon,\n    dropdownCloseIcon,\n    dropdownOpenIcon,\n    placeholder,\n    accessibilityLabel,\n    defaultValue,\n    _item,\n    _selectedItem,\n    onOpen,\n    onClose,\n    optimized,\n    customDropdownIconProps,\n    _actionSheetContent,\n    _actionSheetBody,\n    _webSelect,\n    ...resolvedProps\n  } = usePropsResolution(\n    'Select',\n    props,\n    {\n      isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    },\n    undefined\n  );\n\n  const [value, setValue] = useControllableState({\n    value: selectedValue,\n    defaultValue,\n    onChange: (newValue) => {\n      onValueChange && onValueChange(newValue);\n      setIsOpen(false);\n    },\n  });\n\n  const itemsList: Array<{ label: string; value: string }> = React.Children.map(\n    children ?? [],\n    (child: any) => {\n      return {\n        label: child.props.label,\n        value: child.props.value,\n      };\n    }\n  );\n\n  const selectedItemArray = itemsList.filter(\n    (item: any) => item.value === value\n  );\n\n  const selectedItem =\n    selectedItemArray && selectedItemArray.length ? selectedItemArray[0] : null;\n\n  const contextValue = React.useMemo(() => {\n    return {\n      onValueChange: setValue,\n      selectedValue: value,\n      _selectedItem: _selectedItem ?? {},\n      _item: _item ?? {},\n    };\n  }, [value, setValue, _selectedItem, _item]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const rightIcon =\n    isOpen && dropdownOpenIcon ? (\n      dropdownOpenIcon\n    ) : !isOpen && dropdownCloseIcon ? (\n      dropdownCloseIcon\n    ) : dropdownIcon ? (\n      dropdownIcon\n    ) : (\n      <ChevronDownIcon {...customDropdownIconProps} />\n    );\n\n  const handleClose = () => {\n    setIsOpen(false);\n    onClose && onClose();\n  };\n\n  if (optimized) {\n    React.Children.map(children, (child: any) => {\n      flatListData.push(child.props);\n    });\n  }\n\n  const [layoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    'shadow',\n    'opacity',\n  ]);\n\n  const commonInput = (\n    <Input\n      placeholder={placeholder}\n      InputRightElement={rightIcon}\n      {...resolvedProps}\n      // NOTE: Adding ts-ignore as we're not exposing isFocused in the Input component\n      // @ts-ignore-next-line\n      isFocused={isFocused}\n      isHovered={isHovered}\n      aria-hidden={true}\n      importantForAccessibility=\"no\"\n      value={selectedItem ? selectedItem.label : ''}\n      editable={false}\n      focusable={false}\n      isDisabled={isDisabled}\n      pointerEvents=\"none\"\n    />\n  );\n\n  return Platform.OS === 'web' ? (\n    <Box>\n      {/* <Box w=\"100%\" h=\"100%\" position=\"absolute\" opacity=\"0\" zIndex={1}> */}\n      <select\n        aria-readonly={selectProps.readOnly}\n        required={selectProps.required}\n        disabled={isDisabled}\n        {...focusProps}\n        {...hoverProps}\n        ref={mergeRefs([ref, _ref])}\n        //@ts-ignore\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n        value={selectedItem === null ? tempFix : value}\n        aria-label={placeholder}\n        onFocus={() => {\n          setIsFocused(true);\n          onOpen && onOpen();\n        }}\n        onBlur={() => {\n          setIsFocused(false);\n          onClose && onClose();\n        }}\n        {..._webSelect}\n      >\n        <option disabled value={tempFix}>\n          {placeholder}\n        </option>\n        {children}\n      </select>\n      {/* </Box> */}\n      {commonInput}\n    </Box>\n  ) : (\n    <>\n      <Pressable\n        onPress={() => {\n          Keyboard.dismiss();\n          setIsOpen(true);\n          onOpen && onOpen();\n        }}\n        disabled={isDisabled}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        ref={mergeRefs([ref, _ref])}\n        {...layoutProps}\n      >\n        {commonInput}\n      </Pressable>\n      <Actionsheet isOpen={isOpen} onClose={handleClose}>\n        <Actionsheet.Content {..._actionSheetContent}>\n          {/* TODO: Replace ScrollVeiw with FlatList */}\n          {optimized ? (\n            <FlatList\n              {..._actionSheetBody}\n              data={flatListData}\n              // eslint-disable-next-line no-shadow\n              keyExtractor={(_item, index) => index.toString()}\n              renderItem={({ item }: any) => {\n                const isSelected = selectedValue === item.value;\n                return (\n                  <Actionsheet.Item\n                    onPress={() => {\n                      if (!isDisabled) {\n                        setValue(item.value);\n                      }\n                    }}\n                    accessibilityState={{ selected: isSelected }}\n                    {...item}\n                    {..._item}\n                    {...(isSelected && _selectedItem)}\n                  >\n                    {item.label}\n                  </Actionsheet.Item>\n                );\n              }}\n            />\n          ) : (\n            <ScrollView {..._actionSheetBody}>\n              <SelectContext.Provider value={contextValue}>\n                {children}\n              </SelectContext.Provider>\n            </ScrollView>\n          )}\n        </Actionsheet.Content>\n      </Actionsheet>\n    </>\n  );\n};\n\nexport default memo(forwardRef(Select));\n"]}