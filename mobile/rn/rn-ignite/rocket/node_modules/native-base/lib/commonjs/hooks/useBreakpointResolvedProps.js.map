{"version":3,"sources":["useBreakpointResolvedProps.ts"],"names":["useBreakpointResolvedProps","props","currentBreakpoint","theme","newProps","React","useMemo","key","rawValue","value","breakpoints"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AAUO,MAAMA,0BAA0B,GAAIC,KAAD,IAAmB;AAC3D,QAAMC,iBAAiB,GAAG,4CAAoB,4BAApB,EACvBA,iBADH;AAEA,QAAMC,KAAK,GAAG,yBAAd;;AACA,QAAMC,QAAmB,GAAGC,eAAMC,OAAN,CAAc,MAAM;AAC9C,QAAIF,QAAmB,GAAG,EAA1B;;AACA,SAAK,IAAIG,GAAT,IAAgBN,KAAhB,EAAuB;AACrB,YAAMO,QAAQ,GAAGP,KAAK,CAACM,GAAD,CAAtB;AACA,YAAME,KAAK,GAAG,uCACZD,QADY,EAEZL,KAAK,CAACO,WAFM,EAGZR,iBAHY,EAIZK,GAJY,CAAd;AAMAH,MAAAA,QAAQ,CAACG,GAAD,CAAR,GAAgBE,KAAhB;AACD;;AACD,WAAOL,QAAP;AACD,GAb2B,EAazB,CAACH,KAAD,EAAQC,iBAAR,EAA2BC,KAAK,CAACO,WAAjC,CAbyB,CAA5B;;AAeA,SAAON,QAAP;AACD,CApBM","sourcesContent":["import React from 'react';\nimport type { ResponsiveValue } from '../components/types';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { resolveValueWithBreakpoint } from './useThemeProps/utils';\nimport { useTheme } from './../hooks/useTheme';\n\ntype IProps = {\n  [key: string]: ResponsiveValue<number | string>;\n};\n\ntype INewProps = {\n  [key: string]: number | string;\n};\n\nexport const useBreakpointResolvedProps = (props: IProps) => {\n  const currentBreakpoint = useNativeBaseConfig('useBreakpointResolvedProps')\n    .currentBreakpoint;\n  const theme = useTheme();\n  const newProps: INewProps = React.useMemo(() => {\n    let newProps: INewProps = {};\n    for (let key in props) {\n      const rawValue = props[key];\n      const value = resolveValueWithBreakpoint(\n        rawValue,\n        theme.breakpoints,\n        currentBreakpoint,\n        key\n      );\n      newProps[key] = value;\n    }\n    return newProps;\n  }, [props, currentBreakpoint, theme.breakpoints]);\n\n  return newProps;\n};\n"]}