{"version":3,"sources":["FormControlErrorMessage.tsx"],"names":["FormControlErrorMessage","props","ref","formControlContext","combinedProps","leftIcon","rightIcon","children","_text","_stack","resolvedProps","isDisabled","isReadOnly","isInvalid","startIcon","endIcon","React","isValidElement","Children","map","child","index","cloneElement","key","useEffect","setHasFeedbackText","helpTextId"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,uBAAuB,GAAG,CAC9BC,KAD8B,EAE9BC,GAF8B,KAG3B;AACH,QAAMC,kBAAkB,GAAG,4CAA3B;AACA,QAAMC,aAAa,GAAG,mCAAuBD,kBAAvB,EAA2CF,KAA3C,CAAtB;AACA,QAAM;AACJI,IAAAA,QADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,MALI;AAMJ,OAAGC;AANC,MAOF,uCAAmB,yBAAnB,EAA8CN,aAA9C,EAA6D;AAC/DO,IAAAA,UAAU,EAAEP,aAAa,CAACO,UADqC;AAE/DC,IAAAA,UAAU,EAAER,aAAa,CAACQ,UAFqC;AAG/DC,IAAAA,SAAS,EAAET,aAAa,CAACS,SAHsC,CAI/D;;AAJ+D,GAA7D,CAPJ;AAaA,MAAI;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBL,aAA7B;;AAEA,MAAIJ,SAAJ,EAAe;AACbS,IAAAA,OAAO,GAAGT,SAAV;AACD;;AACD,MAAID,QAAJ,EAAc;AACZS,IAAAA,SAAS,GAAGT,QAAZ;AACD;;AACD,MAAIU,OAAO,iBAAIC,eAAMC,cAAN,CAAqBF,OAArB,CAAf,EAA8C;AAC5CA,IAAAA,OAAO,GAAGC,eAAME,QAAN,CAAeC,GAAf,CACRJ,OADQ,EAER,CAACK,KAAD,EAAqBC,KAArB,KAAuC;AACrC,0BAAOL,eAAMM,YAAN,CAAmBF,KAAnB,EAA0B;AAC/BG,QAAAA,GAAG,4BAAqBF,KAArB,CAD4B;AAE/B,WAAGb,KAF4B;AAG/B,WAAGY,KAAK,CAACnB;AAHsB,OAA1B,CAAP;AAKD,KARO,CAAV;AAUD;;AACD,MAAIa,SAAS,iBAAIE,eAAMC,cAAN,CAAqBH,SAArB,CAAjB,EAAkD;AAChDA,IAAAA,SAAS,GAAGE,eAAME,QAAN,CAAeC,GAAf,CACVL,SADU,EAEV,CAACM,KAAD,EAAqBC,KAArB,KAAuC;AACrC,0BAAOL,eAAMM,YAAN,CAAmBF,KAAnB,EAA0B;AAC/BG,QAAAA,GAAG,8BAAuBF,KAAvB,CAD4B;AAE/B,WAAGb,KAF4B;AAG/B,WAAGY,KAAK,CAACnB;AAHsB,OAA1B,CAAP;AAKD,KARS,CAAZ;AAUD;;AAEDe,iBAAMQ,SAAN,CAAgB,MAAM;AACpBd,IAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEe,kBAAf,CAAkC,IAAlC;AACA,WAAO,MAAM;AACXf,MAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEe,kBAAf,CAAkC,KAAlC;AACD,KAFD;AAGD,GALD,EAjDG,CAuDH;;;AACA,MAAI,kDAAsBxB,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,SAAOS,aAAa,SAAb,IAAAA,aAAa,WAAb,IAAAA,aAAa,CAAEG,SAAf,IAA4BN,QAA5B,gBACL,6BAAC,YAAD;AAAK,IAAA,QAAQ,EAAEG,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEgB;AAA9B,KAA8ChB,aAA9C;AAA6D,IAAA,GAAG,EAAER;AAAlE,mBACE,6BAAC,aAAD,EAAYO,MAAZ,EACGK,SADH,eAEE,6BAAC,aAAD,EAAUN,KAAV,EAAkBD,QAAlB,CAFF,EAGGQ,OAHH,CADF,CADK,GAQH,IARJ;AASD,CAvED;;4BAyEe,+BAAK,uBAAWf,uBAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { HStack } from '../../primitives/Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFormControlContext } from './useFormControl';\nimport type { IFormControlErrorMessageProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { combineContextAndProps } from '../../../utils';\nimport Text from '../../primitives/Text';\n\nconst FormControlErrorMessage = (\n  props: IFormControlErrorMessageProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n  const combinedProps = combineContextAndProps(formControlContext, props);\n  const {\n    leftIcon,\n    rightIcon,\n    children,\n    _text,\n    _stack,\n    ...resolvedProps\n  } = usePropsResolution('FormControlErrorMessage', combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid,\n    // isRequired: combinedProps.isRequired,\n  });\n  let { startIcon, endIcon } = resolvedProps;\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  React.useEffect(() => {\n    resolvedProps?.setHasFeedbackText(true);\n    return () => {\n      resolvedProps?.setHasFeedbackText(false);\n    };\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return resolvedProps?.isInvalid && children ? (\n    <Box nativeID={resolvedProps?.helpTextId} {...resolvedProps} ref={ref}>\n      <HStack {..._stack}>\n        {startIcon}\n        <Text {..._text}>{children}</Text>\n        {endIcon}\n      </HStack>\n    </Box>\n  ) : null;\n};\n\nexport default memo(forwardRef(FormControlErrorMessage));\n"]}