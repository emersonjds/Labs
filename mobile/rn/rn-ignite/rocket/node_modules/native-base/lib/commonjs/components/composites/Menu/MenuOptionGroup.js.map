{"version":3,"sources":["MenuOptionGroup.tsx"],"names":["MenuOptionContext","React","createContext","values","onChange","_val","type","MenuOptionGroup","defaultValue","value","props","ref","internalDefaultValue","Array","isArray","internalValues","setValues","useState","_onChange","newValue","newValues","includes","splice","indexOf","push"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;AAEO,MAAMA,iBAAiB,gBAAGC,eAAMC,aAAN,CAA6C;AAC5EC,EAAAA,MAAM,EAAE,EADoE;AAE5EC,EAAAA,QAAQ,EAAGC,IAAD,IAAU,CAAE,CAFsD;AAG5EC,EAAAA,IAAI,EAAE;AAHsE,CAA7C,CAA1B;;;;AAMP,MAAMC,eAAe,GAAG,CACtB;AAAED,EAAAA,IAAF;AAAQE,EAAAA,YAAR;AAAsBC,EAAAA,KAAtB;AAA6BL,EAAAA,QAA7B;AAAuC,KAAGM;AAA1C,CADsB,EAEtBC,GAFsB,KAGnB;AACH,QAAMC,oBAAoB,GAAGJ,YAAY,GACrCK,KAAK,CAACC,OAAN,CAAcN,YAAd,IACEA,YADF,GAEE,CAACA,YAAD,CAHmC,GAIrC,EAJJ;;AAMA,QAAM,CAACO,cAAD,EAAiBC,SAAjB,IAA8Bf,eAAMgB,QAAN,CAClCL,oBADkC,CAApC;;AAGA,QAAMM,SAAS,GAAIC,QAAD,IAA+B;AAC/C,QAAIb,IAAI,KAAK,UAAb,EAAyB;AACvB,YAAMc,SAAS,GAAG,CAAC,GAAGL,cAAJ,CAAlB;;AACA,UAAIA,cAAc,CAACM,QAAf,CAAwBF,QAAxB,CAAJ,EAAuC;AACrCC,QAAAA,SAAS,CAACE,MAAV,CAAiBF,SAAS,CAACG,OAAV,CAAkBJ,QAAlB,CAAjB,EAA8C,CAA9C;AACAH,QAAAA,SAAS,CAACI,SAAD,CAAT;AACD,OAHD,MAGO;AACLA,QAAAA,SAAS,CAACI,IAAV,CAAeL,QAAf;AACAH,QAAAA,SAAS,CAACI,SAAD,CAAT;AACD;;AACDhB,MAAAA,QAAQ,IAAIA,QAAQ,CAACgB,SAAD,CAApB;AACD,KAVD,MAUO,IAAId,IAAI,KAAK,OAAb,EAAsB;AAC3BU,MAAAA,SAAS,CAAC,CAACG,QAAD,CAAD,CAAT;AACAf,MAAAA,QAAQ,IAAIA,QAAQ,CAACe,QAAD,CAApB;AACD;AACF,GAfD,CAVG,CA0BH;;;AACA,MAAI,kDAAsBT,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,MAAM,EAAE,CAACM,KAAD,GACJM,cADI,GAEJF,KAAK,CAACC,OAAN,CAAcL,KAAd,IACAA,KADA,GAEA,CAACA,KAAD,CALC;AAMLL,MAAAA,QAAQ,EAAEc,SANL;AAOLZ,MAAAA;AAPK;AADT,kBAWE,6BAAC,kBAAD,eAAeI,KAAf;AAAsB,IAAA,GAAG,EAAEC;AAA3B,KAXF,CADF;AAeD,CAhDD;;4BAkDe,+BAAK,uBAAWJ,eAAX,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport MenuGroup from './MenuGroup';\nimport type { IMenuOptionGroupProps, IMenuOptionContextProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const MenuOptionContext = React.createContext<IMenuOptionContextProps>({\n  values: [],\n  onChange: (_val) => {},\n  type: 'checkbox',\n});\n\nconst MenuOptionGroup = (\n  { type, defaultValue, value, onChange, ...props }: IMenuOptionGroupProps,\n  ref?: any\n) => {\n  const internalDefaultValue = defaultValue\n    ? Array.isArray(defaultValue)\n      ? defaultValue\n      : [defaultValue]\n    : [];\n\n  const [internalValues, setValues] = React.useState<Array<string | number>>(\n    internalDefaultValue\n  );\n  const _onChange = (newValue: string | number) => {\n    if (type === 'checkbox') {\n      const newValues = [...internalValues];\n      if (internalValues.includes(newValue)) {\n        newValues.splice(newValues.indexOf(newValue), 1);\n        setValues(newValues);\n      } else {\n        newValues.push(newValue);\n        setValues(newValues);\n      }\n      onChange && onChange(newValues);\n    } else if (type === 'radio') {\n      setValues([newValue]);\n      onChange && onChange(newValue);\n    }\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <MenuOptionContext.Provider\n      value={{\n        values: !value\n          ? internalValues\n          : Array.isArray(value)\n          ? value\n          : [value],\n        onChange: _onChange,\n        type,\n      }}\n    >\n      <MenuGroup {...props} ref={ref} />\n    </MenuOptionContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(MenuOptionGroup));\n"]}