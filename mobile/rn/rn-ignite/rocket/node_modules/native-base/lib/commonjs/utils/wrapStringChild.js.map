{"version":3,"sources":["wrapStringChild.tsx"],"names":["wrapStringChild","children","textProps","React","Children","map","child","type","Fragment","props"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,MAAMA,eAAe,GAAG,CAACC,QAAD,EAAgBC,SAAhB,KAAmC;AAChE,SAAOC,eAAMC,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA8BK,KAAD,IAAW;AAAA;;AAC7C,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IACL,OAAOA,KAAP,KAAiB,QADZ,IAEJ,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,MAAgBJ,eAAMK,QAAtB,KACE,wBAAOF,KAAK,CAACG,KAAb,iDAAO,aAAaR,QAApB,MAAiC,QAAjC,IACC,yBAAOK,KAAK,CAACG,KAAb,kDAAO,cAAaR,QAApB,MAAiC,QAFpC,CAFI,gBAKL,6BAAC,aAAD,EAAUC,SAAV,EAAsBI,KAAtB,CALK,GAOLA,KAPF;AASD,GAVM,CAAP;AAWD,CAZM","sourcesContent":["import React from 'react';\nimport Text from '../components/primitives/Text';\n\nexport const wrapStringChild = (children: any, textProps: any) => {\n  return React.Children.map(children, (child) => {\n    return typeof child === 'string' ||\n      typeof child === 'number' ||\n      (child?.type === React.Fragment &&\n        (typeof child.props?.children === 'string' ||\n          typeof child.props?.children === 'number')) ? (\n      <Text {...textProps}>{child}</Text>\n    ) : (\n      child\n    );\n  });\n};\n"]}