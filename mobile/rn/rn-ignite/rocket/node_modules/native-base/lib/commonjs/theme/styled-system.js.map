{"version":3,"sources":["styled-system.ts"],"names":["isNumber","n","isNaN","getColor","rawValue","scale","theme","alphaMatched","match","colorMatched","color","alphaValue","split","alphaFromToken","opacity","alpha","parseFloat","newColor","getMargin","convertStringNumberToNumber","isNegative","absolute","Math","abs","value","layout","width","property","w","height","h","minWidth","minW","minHeight","minH","maxWidth","maxW","maxHeight","maxH","size","properties","boxSize","overflow","overflowX","overflowY","display","verticalAlign","textAlign","flexbox","alignItems","alignContent","justifyItems","justifyContent","flexWrap","flexDirection","flexDir","flex","flexGrow","flexShrink","flexBasis","justifySelf","alignSelf","order","position","zIndex","top","right","bottom","left","transformer","tintColor","backgroundColor","bg","bgColor","background","textDecorationColor","border","borderWidth","borderStyle","borderColor","borderRadius","borderTop","borderTopRadius","borderLeftRadius","borderRightRadius","borderTopLeftRadius","borderTopRightRadius","borderRight","borderBottom","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderX","borderY","borderTopWidth","borderTopColor","borderTopStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","borderRightWidth","borderRightColor","borderRightStyle","rounded","roundedTopLeft","roundedTopRight","roundedBottomLeft","roundedBottomRight","roundedTop","borderBottomRadius","roundedBottom","roundedLeft","roundedRight","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundBlendMode","bgImage","bgImg","bgBlendMode","bgSize","bgPosition","bgPos","bgRepeat","bgAttachment","space","margin","m","marginTop","mt","marginRight","mr","marginBottom","mb","marginLeft","ml","marginX","mx","marginY","my","padding","p","paddingTop","pt","paddingRight","pr","paddingBottom","pb","paddingLeft","pl","paddingX","px","paddingY","py","gap","typography","fontFamily","fontSize","fontWeight","val","toString","lineHeight","letterSpacing","fontStyle","wordBreak","overflowWrap","textOverflow","textTransform","whiteSpace","textDecoration","txtDecor","textDecorationLine","extraProps","outline","outlineWidth","outlineColor","outlineStyle","shadow","cursor","userSelect","propConfig","key","Number","getRNKeyAndStyleValue","config","styledSystemProps","currentBreakpoint","style","endsWith","Platform","OS","breakpoints","fontSizes","forEach","getStyleAndFilteredProps","debug","getResponsiveStyles","styleFromProps","dataSet","responsiveStyles","orderedBreakPoints","Object","entries","sort","a","b","Array","isArray","v","i","newStyle","push","k","query","o","initial","base","newDataSet","styles","StyleSheet","flatten","process","env","NODE_ENV","console","log","styleSheet","create","box"],"mappings":"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","sourcesContent":["import { Platform, StyleSheet } from 'react-native';\nimport get from 'lodash.get';\nimport { resolveValueWithBreakpoint } from '../hooks/useThemeProps/utils';\nimport { hasValidBreakpointFormat, transparentize } from './tools';\nimport type { ITheme } from '.';\nimport type { UseResponsiveQueryParams } from '../utils/useResponsiveQuery';\n\nconst isNumber = (n: any) => typeof n === 'number' && !isNaN(n);\n\nexport const getColor = (rawValue: any, scale: any, theme: any) => {\n  const alphaMatched =\n    typeof rawValue === 'string' ? rawValue?.match(/:alpha\\.\\d\\d?\\d?/) : false;\n\n  if (alphaMatched) {\n    const colorMatched = rawValue?.match(/^.*?(?=:alpha)/);\n    const color = colorMatched ? colorMatched[0] : colorMatched;\n    const alphaValue = alphaMatched[0].split('.')[1];\n    const alphaFromToken = get(theme.opacity, alphaValue, alphaValue);\n    const alpha = alphaFromToken ? parseFloat(alphaFromToken) : 1;\n    const newColor = transparentize(color, alpha)(theme);\n    return newColor;\n  } else {\n    return get(scale, rawValue, rawValue);\n  }\n};\n\n// To handle negative margins\nconst getMargin = (n: any, scale: any) => {\n  n = convertStringNumberToNumber('margin', n);\n  if (!isNumber(n)) {\n    return get(scale, n, n);\n  }\n\n  const isNegative = n < 0;\n  const absolute = Math.abs(n);\n  const value = get(scale, absolute, absolute);\n  if (!isNumber(value)) {\n    return isNegative ? '-' + value : value;\n  }\n  return value * (isNegative ? -1 : 1);\n};\n\nexport const layout = {\n  width: {\n    property: 'width',\n    scale: 'sizes',\n  },\n  w: {\n    property: 'width',\n    scale: 'sizes',\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  h: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minW: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  minH: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxW: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  maxH: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  size: {\n    properties: ['width', 'height'],\n    scale: 'sizes',\n  },\n  boxSize: {\n    properties: ['width', 'height'],\n    scale: 'sizes',\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n  textAlign: true,\n} as const;\n\nexport const flexbox = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n  flexDir: {\n    property: 'flexDirection',\n  },\n  // item\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: true,\n  justifySelf: true,\n  alignSelf: true,\n  order: true,\n} as const;\n\nexport const position = {\n  position: true,\n  zIndex: {\n    property: 'zIndex',\n  },\n  top: {\n    property: 'top',\n    scale: 'space',\n  },\n  right: {\n    property: 'right',\n    scale: 'space',\n  },\n  bottom: {\n    property: 'bottom',\n    scale: 'space',\n  },\n  left: {\n    property: 'left',\n    scale: 'space',\n  },\n} as const;\n\nexport const color = {\n  color: {\n    property: 'color',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  tintColor: {\n    property: 'tintColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  backgroundColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  opacity: {\n    property: 'opacity',\n    scale: 'opacity',\n  },\n  bg: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  bgColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  background: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  textDecorationColor: {\n    property: 'textDecorationColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n} as const;\n\nexport const border = {\n  borderWidth: {\n    property: 'borderWidth',\n    scale: 'borderWidths',\n  },\n  borderStyle: {\n    property: 'borderStyle',\n    scale: 'borderStyles',\n  },\n  borderColor: {\n    property: 'borderColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderRadius: {\n    property: 'borderRadius',\n    scale: 'radii',\n  },\n  borderTop: {\n    property: 'borderTop',\n    scale: 'borders',\n  },\n  borderTopRadius: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii',\n  },\n  borderLeftRadius: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii',\n  },\n  borderRightRadius: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n  borderTopLeftRadius: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii',\n  },\n  borderTopRightRadius: {\n    property: 'borderTopRightRadius',\n    scale: 'radii',\n  },\n  borderRight: {\n    property: 'borderRight',\n    scale: 'borders',\n  },\n  borderBottom: {\n    property: 'borderBottom',\n    scale: 'borders',\n  },\n  borderBottomLeftRadius: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii',\n  },\n  borderBottomRightRadius: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii',\n  },\n  borderLeft: {\n    property: 'borderLeft',\n    scale: 'borders',\n  },\n  borderX: {\n    properties: ['borderLeft', 'borderRight'],\n    scale: 'borders',\n  },\n  borderY: {\n    properties: ['borderTop', 'borderBottom'],\n    scale: 'borders',\n  },\n  borderTopWidth: {\n    property: 'borderTopWidth',\n    scale: 'borderWidths',\n  },\n  borderTopColor: {\n    property: 'borderTopColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderTopStyle: {\n    property: 'borderTopStyle',\n    scale: 'borderStyles',\n  },\n  borderBottomWidth: {\n    property: 'borderBottomWidth',\n    scale: 'borderWidths',\n  },\n  borderBottomColor: {\n    property: 'borderBottomColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderBottomStyle: {\n    property: 'borderBottomStyle',\n    scale: 'borderStyles',\n  },\n  borderLeftWidth: {\n    property: 'borderLeftWidth',\n    scale: 'borderWidths',\n  },\n  borderLeftColor: {\n    property: 'borderLeftColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderLeftStyle: {\n    property: 'borderLeftStyle',\n    scale: 'borderStyles',\n  },\n  borderRightWidth: {\n    property: 'borderRightWidth',\n    scale: 'borderWidths',\n  },\n  borderRightColor: {\n    property: 'borderRightColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderRightStyle: {\n    property: 'borderRightStyle',\n    scale: 'borderStyles',\n  },\n  rounded: {\n    property: 'borderRadius',\n    scale: 'radii',\n  },\n\n  roundedTopLeft: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii',\n  },\n\n  roundedTopRight: {\n    property: 'borderTopRightRadius',\n    scale: 'radii',\n  },\n\n  roundedBottomLeft: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii',\n  },\n\n  roundedBottomRight: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii',\n  },\n\n  roundedTop: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii',\n  },\n  borderBottomRadius: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n  roundedBottom: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n\n  roundedLeft: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii',\n  },\n\n  roundedRight: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n} as const;\n\nexport const background = {\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n  backgroundAttachment: true,\n  backgroundBlendMode: true,\n  bgImage: {\n    property: 'backgroundImage',\n  },\n  bgImg: {\n    property: 'backgroundImage',\n  },\n  bgBlendMode: {\n    property: 'backgroundBlendMode',\n  },\n  bgSize: {\n    property: 'backgroundSize',\n  },\n  bgPosition: {\n    property: 'backgroundPosition',\n  },\n  bgPos: {\n    property: 'backgroundPosition',\n  },\n  bgRepeat: {\n    property: 'backgroundRepeat',\n  },\n  bgAttachment: {\n    property: 'backgroundAttachment',\n  },\n} as const;\n\nexport const space = {\n  margin: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  m: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginTop: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mt: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginRight: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mr: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginBottom: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mb: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginLeft: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  ml: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginX: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mx: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginY: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n  my: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n\n  padding: {\n    property: 'padding',\n    scale: 'space',\n  },\n  p: {\n    property: 'padding',\n    scale: 'space',\n  },\n  paddingTop: {\n    property: 'paddingTop',\n    scale: 'space',\n  },\n  pt: {\n    property: 'paddingTop',\n    scale: 'space',\n  },\n  paddingRight: {\n    property: 'paddingRight',\n    scale: 'space',\n  },\n  pr: {\n    property: 'paddingRight',\n    scale: 'space',\n  },\n  paddingBottom: {\n    property: 'paddingBottom',\n    scale: 'space',\n  },\n  pb: {\n    property: 'paddingBottom',\n    scale: 'space',\n  },\n  paddingLeft: {\n    property: 'paddingLeft',\n    scale: 'space',\n  },\n  pl: {\n    property: 'paddingLeft',\n    scale: 'space',\n  },\n  paddingX: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space',\n  },\n  px: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space',\n  },\n  paddingY: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space',\n  },\n  py: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space',\n  },\n  gap: {\n    property: 'gap',\n    scale: 'space',\n  },\n} as const;\n\nexport const typography = {\n  fontFamily: {\n    property: 'fontFamily',\n    scale: 'fonts',\n    // transformer: (val: any, scale: any) => {\n    //   const value = get(scale, val);\n    //   return value ? value.toString() : undefined;\n    // },\n  },\n  fontSize: {\n    property: 'fontSize',\n    scale: 'fontSizes',\n  },\n  fontWeight: {\n    property: 'fontWeight',\n    scale: 'fontWeights',\n    transformer: (val: any, scale: any) => {\n      return val ? get(scale, val, val).toString() : val;\n    },\n  },\n  lineHeight: {\n    property: 'lineHeight',\n    scale: 'lineHeights',\n  },\n  letterSpacing: {\n    property: 'letterSpacing',\n    scale: 'letterSpacings',\n  },\n  textAlign: true,\n  fontStyle: true,\n  wordBreak: true,\n  overflowWrap: true,\n  textOverflow: true,\n  textTransform: true,\n  whiteSpace: true,\n  textDecoration: { property: 'textDecorationLine' },\n  txtDecor: { property: 'textDecorationLine' },\n  textDecorationLine: true,\n} as const;\n\nconst extraProps = {\n  outline: true,\n  outlineWidth: true,\n  outlineColor: true,\n  outlineStyle: true,\n  shadow: {\n    scale: 'shadows',\n  },\n  cursor: true,\n  overflow: true,\n  userSelect: { property: 'userSelect' },\n} as const;\n\nexport const propConfig = {\n  ...color,\n  ...space,\n  ...layout,\n  ...flexbox,\n  ...border,\n  ...position,\n  ...typography,\n  ...background,\n  ...extraProps,\n} as const;\n\n// For backward compatibility with 3.0 of props like non token string numbers `<Box mt={\"39\"} />` => used to get applied as 39px. RN expects fontWeight to be string and crashes with numbers\n// https://reactnative.dev/docs/text-style-props#fontweight\nconst convertStringNumberToNumber = (key: string, value: string) => {\n  if (\n    typeof value === 'string' &&\n    key !== 'fontWeight' &&\n    value &&\n    !isNaN(Number(value))\n  ) {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n\nconst getRNKeyAndStyleValue = ({\n  config,\n  value,\n  key,\n  theme,\n  styledSystemProps,\n  currentBreakpoint,\n}: any) => {\n  let style: any = {};\n  if (config === true) {\n    style = {\n      ...style,\n      [key]: convertStringNumberToNumber(key, value),\n    };\n  } else if (config) {\n    //@ts-ignore\n    const { property, scale, properties, transformer } = config;\n    let val = value;\n\n    if (transformer) {\n      val = transformer(val, theme[scale], theme, styledSystemProps.fontSize);\n    } else {\n      // If a token is not found in the theme\n      val = get(theme[scale], value, value);\n    }\n\n    if (typeof val === 'string') {\n      if (val.endsWith('px')) {\n        val = parseFloat(val);\n      } else if (val.endsWith('em') && Platform.OS !== 'web') {\n        const fontSize = resolveValueWithBreakpoint(\n          styledSystemProps.fontSize,\n          theme.breakpoints,\n          currentBreakpoint,\n          key\n        );\n        val =\n          parseFloat(val) *\n          parseFloat(get(theme.fontSizes, fontSize, fontSize));\n      }\n    }\n\n    val = convertStringNumberToNumber(key, val);\n\n    if (properties) {\n      //@ts-ignore\n      properties.forEach((property) => {\n        style = {\n          ...style,\n          [property]: val,\n        };\n      });\n    } else if (property) {\n      style = {\n        ...style,\n        [property]: val,\n      };\n    } else {\n      style = {\n        ...style,\n        ...val,\n      };\n    }\n  }\n\n  return style;\n};\n\nexport const getStyleAndFilteredProps = ({\n  style,\n  theme,\n  debug,\n  currentBreakpoint,\n  getResponsiveStyles,\n  styledSystemProps,\n}: any) => {\n  let styleFromProps: any = {};\n  let dataSet: any = {};\n  let responsiveStyles: null | Record<\n    keyof typeof theme.breakpoints,\n    Array<any>\n  > = null;\n\n  const orderedBreakPoints = Object.entries(\n    theme.breakpoints as ITheme['breakpoints']\n  ).sort((a, b) => a[1] - b[1]);\n\n  for (const key in styledSystemProps) {\n    const rawValue = styledSystemProps[key];\n\n    const config = propConfig[key as keyof typeof propConfig];\n\n    if (hasValidBreakpointFormat(rawValue, theme.breakpoints)) {\n      if (!responsiveStyles) responsiveStyles = {};\n\n      const value = rawValue;\n      if (Array.isArray(value)) {\n        value.forEach((v, i) => {\n          //@ts-ignore\n          if (!responsiveStyles[orderedBreakPoints[i][0]]) {\n            //@ts-ignore\n            responsiveStyles[orderedBreakPoints[i][0]] = [];\n          }\n          const newStyle = getRNKeyAndStyleValue({\n            config,\n            value: v,\n            key,\n            styledSystemProps,\n            theme,\n            currentBreakpoint,\n          });\n          //@ts-ignore\n          responsiveStyles[orderedBreakPoints[i][0]].push(newStyle);\n        });\n      } else {\n        for (const k in value) {\n          const newStyle = getRNKeyAndStyleValue({\n            config,\n            value: value[k],\n            key,\n            styledSystemProps,\n            theme,\n            currentBreakpoint,\n          });\n          if (!responsiveStyles[k]) {\n            responsiveStyles[k] = [];\n          }\n          responsiveStyles[k].push(newStyle);\n        }\n      }\n    } else {\n      const value = rawValue;\n      const newStyle = getRNKeyAndStyleValue({\n        config,\n        value,\n        key,\n        styledSystemProps,\n        theme,\n        currentBreakpoint,\n      });\n\n      styleFromProps = {\n        ...styleFromProps,\n        ...newStyle,\n      };\n    }\n  }\n\n  if (responsiveStyles) {\n    const query: UseResponsiveQueryParams = { query: [] };\n    orderedBreakPoints.forEach((o) => {\n      const key = o[0];\n      if (key === 'base') {\n        if (responsiveStyles) query.initial = responsiveStyles.base;\n      } else {\n        if (responsiveStyles)\n          if (key in responsiveStyles) {\n            query?.query?.push({\n              minWidth: o[1],\n              style: responsiveStyles[key],\n            });\n          }\n      }\n    });\n\n    const { dataSet: newDataSet, styles } = getResponsiveStyles(query);\n    dataSet = { ...dataSet, ...newDataSet };\n    styleFromProps = { ...styleFromProps, ...StyleSheet.flatten(styles) };\n  }\n\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style ', debug + ' :: ', {\n      styleFromProps,\n      style,\n      styledSystemProps,\n    });\n  }\n\n  return {\n    styleSheet: StyleSheet.create({ box: styleFromProps }),\n    dataSet,\n  };\n};\n\nexport type StyledPropConfig = typeof propConfig;\n"]}