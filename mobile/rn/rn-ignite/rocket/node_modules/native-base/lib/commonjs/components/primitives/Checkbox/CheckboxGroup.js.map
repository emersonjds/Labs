{"version":3,"sources":["CheckboxGroup.tsx"],"names":["CheckboxGroupContext","CheckboxGroup","size","_checkbox","colorScheme","props","ref","resolvedProps","children","state","groupProps","accessibilityLabel","formControlContext"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;AAEO,MAAMA,oBAAoB,gBAAG,0BAClC,IADkC,CAA7B;;;AAIP,SAASC,aAAT,CACE;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA,WAAnB;AAAgC,KAAGC;AAAnC,CADF,EAEEC,GAFF,EAGE;AACA,QAAMC,aAAa,GAAG,uCAAmB,eAAnB,EAAoCF,KAApC,CAAtB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeH,KAArB;AACA,QAAMI,KAAK,GAAG,sCAAsBJ,KAAtB,CAAd;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAiB,iCACrB;AAAE,kBAAcL,KAAK,CAACM,kBAAtB;AAA0C,OAAGN;AAA7C,GADqB,EAErBI,KAFqB,CAAvB;AAKA,QAAMG,kBAAkB,GAAG,yCAA3B,CATA,CAUA;;AACA,MAAI,kDAAsB,EAAE,GAAGP,KAAL;AAAYH,IAAAA,IAAZ;AAAkBE,IAAAA;AAAlB,GAAtB,CAAJ,EAA4D;AAC1D,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,oBAAD,CAAsB,QAAtB;AACE,IAAA,KAAK,EAAE;AACL;AACAF,MAAAA,IAFK;AAGLE,MAAAA,WAHK;AAIL,SAAGD,SAJE;AAKL,SAAGS,kBALE;AAMLH,MAAAA;AANK;AADT,kBAUE,6BAAC,YAAD,eAASF,aAAT,EAA4BG,UAA5B,EAA4CL,KAA5C;AAAmD,IAAA,GAAG,EAAEC;AAAxD,MACGE,QADH,CAVF,CADF;AAgBD;;4BAEc,+BAAK,uBAAWP,aAAX,CAAL,C","sourcesContent":["import React, { createContext, memo, forwardRef } from 'react';\nimport { useCheckboxGroupState } from '@react-stately/checkbox';\nimport { useCheckboxGroup } from '@react-native-aria/checkbox';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport type { ICheckboxGroupProps, ICheckboxContext } from './types';\nimport Box from '../Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\n\nexport const CheckboxGroupContext = createContext<ICheckboxContext | null>(\n  null\n);\n\nfunction CheckboxGroup(\n  { size, _checkbox, colorScheme, ...props }: ICheckboxGroupProps,\n  ref?: any\n) {\n  const resolvedProps = usePropsResolution('CheckboxGroup', props);\n  const { children } = props;\n  const state = useCheckboxGroupState(props);\n  const { groupProps } = useCheckboxGroup(\n    { 'aria-label': props.accessibilityLabel, ...props },\n    state\n  );\n\n  const formControlContext = useFormControlContext();\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps({ ...props, size, colorScheme })) {\n    return null;\n  }\n  return (\n    <CheckboxGroupContext.Provider\n      value={{\n        //@ts-ignore\n        size,\n        colorScheme,\n        ..._checkbox,\n        ...formControlContext,\n        state,\n      }}\n    >\n      <Box {...resolvedProps} {...groupProps} {...props} ref={ref}>\n        {children}\n      </Box>\n    </CheckboxGroupContext.Provider>\n  );\n}\n\nexport default memo(forwardRef(CheckboxGroup));\n"]}