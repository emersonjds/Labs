{"version":3,"sources":["index.tsx"],"names":["Divider","props","ref","orientation","resolvedProps","resolveResponsively","Platform","OS","undefined"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAuBC,GAAvB,KAAqC;AACnD,QAAM;AAAEC,IAAAA,WAAF;AAAe,OAAGC;AAAlB,MAAoC,uCACxC,SADwC,EAExCH,KAFwC,EAGxC,EAHwC,EAIxC;AAAEI,IAAAA,mBAAmB,EAAE,CAAC,WAAD;AAAvB,GAJwC,CAA1C,CADmD,CAOnD;;AACA,MAAI,kDAAsBJ,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,YAAD,eACMG,aADN;AAEE,IAAA,GAAG,EAAEF,GAFP;AAGE,wBAAkBC,WAHpB,CAIE;AAJF;AAKE,IAAA,iBAAiB,EAAEG,sBAASC,EAAT,KAAgB,KAAhB,GAAwB,WAAxB,GAAsCC;AAL3D,KADF;AASD,CApBD;;4BAsBe,+BAAK,uBAAWR,OAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from './../../primitives/Box';\nimport type { IDividerProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Divider = (props: IDividerProps, ref?: any) => {\n  const { orientation, ...resolvedProps } = usePropsResolution(\n    'Divider',\n    props,\n    {},\n    { resolveResponsively: ['thickness'] }\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      {...resolvedProps}\n      ref={ref}\n      aria-orientation={orientation}\n      //@ts-ignore web only role\n      accessibilityRole={Platform.OS === 'web' ? 'separator' : undefined}\n    />\n  );\n};\n\nexport default memo(forwardRef(Divider));\n"]}