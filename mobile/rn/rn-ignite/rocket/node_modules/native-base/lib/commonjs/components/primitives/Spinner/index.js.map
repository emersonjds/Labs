{"version":3,"sources":["index.tsx"],"names":["Spinner","props","ref","color","size","style","testID","resolvedProps","resolvedColor","colors","resolvedStyle"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAIA;;AAEA;;;;;;AAGA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAuBC,GAAvB,KAAoC;AAClD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,MAAtB;AAA8B,OAAGC;AAAjC,MAAmD,+BACvD,SADuD,EAEvDN,KAFuD,CAAzD;AAIA,QAAMO,aAAa,GAAG,qBAASL,KAAT,EAAgB,uBAAWM,MAA3B,EAAmC,sBAAnC,CAAtB;AACA,QAAMC,aAAa,GAAG,yCAA6BH,aAA7B,CAAtB,CANkD,CAOlD;;AACA,MAAI,kDAAsBN,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBACE,6BAAC,8BAAD;AACE,IAAA,MAAM,EAAEK,MADV;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,kBAAkB,EAAC,SAHrB;AAIE,IAAA,KAAK,EAAEE,aAJT;AAKE,IAAA,GAAG,EAAEN,GALP;AAME,IAAA,IAAI,EAAEE,IANR;AAOE,IAAA,KAAK,EAAE,CAACM,aAAD,EAAgBL,KAAhB;AAPT,IADF;AAWD,CAvBD;;4BAyBe,+BAAK,uBAAWL,OAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { getColor } from '../../../theme';\nimport type { ISpinnerProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useTheme } from '../../../hooks';\n\nconst Spinner = (props: ISpinnerProps, ref: any) => {\n  const { color, size, style, testID, ...resolvedProps } = usePropsResolution(\n    'Spinner',\n    props\n  );\n  const resolvedColor = getColor(color, useTheme().colors, useTheme());\n  const resolvedStyle = useStyledSystemPropsResolver(resolvedProps);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <ActivityIndicator\n      testID={testID}\n      accessible\n      accessibilityLabel=\"loading\"\n      color={resolvedColor}\n      ref={ref}\n      size={size}\n      style={[resolvedStyle, style]}\n    />\n  );\n};\n\nexport default memo(forwardRef(Spinner));\nexport type { ISpinnerProps };\n"]}