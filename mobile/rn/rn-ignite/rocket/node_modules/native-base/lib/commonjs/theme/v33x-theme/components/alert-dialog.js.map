{"version":3,"sources":["alert-dialog.ts"],"names":["sizes","xs","contentSize","width","maxWidth","sm","md","lg","xl","full","AlertDialog","baseStyle","height","justifyContent","alignItems","_web","pointerEvents","_backdropFade","exitDuration","entryDuration","_fade","_slide","duration","overlay","defaultProps","size","closeOnOverlayClick","AlertDialogContent","props","bg","_text","color","shadow","rounded","maxHeight","Dimensions","get","overflow","AlertDialogCloseButton","position","right","top","zIndex","colorScheme","p","_icon","AlertDialogHeader","py","px","borderBottomWidth","borderColor","fontSize","fontWeight","lineHeight","AlertDialogBody","pt","AlertDialogFooter","flexDirection","flexWrap","AlertDialogOverlay","left","opacity","bottom"],"mappings":"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","sourcesContent":["import { Dimensions } from 'react-native';\nimport { mode } from '../tools';\n\nconst sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280',\n    },\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320',\n    },\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380',\n    },\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520',\n    },\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580',\n    },\n  },\n  full: {\n    contentSize: {\n      width: '100%',\n    },\n  },\n};\n\nexport const AlertDialog = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    _web: { pointerEvents: 'box-none' },\n    _backdropFade: { exitDuration: 150, entryDuration: 200 },\n    _fade: { exitDuration: 100, entryDuration: 200 },\n    _slide: { duration: 200, overlay: false },\n  },\n  sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true,\n  },\n};\n\nexport const AlertDialogContent = {\n  baseStyle: (props: Record<string, any>) => {\n    return {\n      bg: mode('coolGray.50', 'gray.700')(props),\n      _text: { color: mode('coolGray.800', 'warmGray.50')(props) },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: `${Dimensions.get('window').height - 150}px`,\n      overflow: 'hidden',\n    };\n  },\n};\nexport const AlertDialogCloseButton = {\n  baseStyle: (props: Record<string, any>) => {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: mode('coolGray.600', 'coolGray.100')(props),\n      },\n    };\n  },\n};\nexport const AlertDialogHeader = {\n  baseStyle: (props: Record<string, any>) => {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: mode('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: mode('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm',\n      },\n    };\n  },\n};\nexport const AlertDialogBody = {\n  baseStyle: (props: Record<string, any>) => {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: mode('coolGray.600', 'coolGray.300')(props),\n      },\n    };\n  },\n};\nexport const AlertDialogFooter = {\n  baseStyle: (props: Record<string, any>) => {\n    return {\n      p: '3',\n      bg: mode('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap',\n    };\n  },\n};\nexport const AlertDialogOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0',\n  },\n};\n"]}