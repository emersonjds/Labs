{"version":3,"sources":["Toast.tsx"],"names":["INSET","POSITIONS","top","left","right","bottom","initialAnimationOffset","transitionConfig","ToastContext","toastInfo","setToastInfo","setToast","removeToast","hideAll","isActive","visibleToasts","setVisibleToasts","hideToast","CustomToast","_overlay","_stack","_presenceTransition","React","useContext","bottomInset","getPositions","Object","keys","hasToastOnOverlay","map","position","length","includes","toast","id","status","config","onCloseComplete","opacity","translateY","undefined","component","ToastProvider","children","themeProps","toastIndex","useRef","useCallback","prevVisibleToasts","toastPosition","positionArray","findIndex","toastData","prev","isToastPresent","newPositionArray","filter","item","temp","newToastInfo","props","placement","title","render","current","description","duration","_title","_description","accessibilityAnnouncement","rest","positionToastArray","setTimeout","Platform","OS","AccessibilityInfo","announceForAccessibility","contextValue","useMemo","useToast","show","close","closeAll","ToastRef","createRef","Toast"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAMA;;AACA;;AACA;;AAEA;;;;;;;;;;AACA,MAAMA,KAAK,GAAG,EAAd;AAEA,MAAMC,SAAS,GAAG;AAChB,SAAO;AACLC,IAAAA,GAAG,EAAEF,KADA;AAELG,IAAAA,IAAI,EAAE,CAFD;AAGLC,IAAAA,KAAK,EAAE;AAHF,GADS;AAMhB,eAAa;AACXF,IAAAA,GAAG,EAAEF,KADM;AAEXI,IAAAA,KAAK,EAAE;AAFI,GANG;AAUhB,cAAY;AACVF,IAAAA,GAAG,EAAEF,KADK;AAEVG,IAAAA,IAAI,EAAE;AAFI,GAVI;AAchB,YAAU;AACRE,IAAAA,MAAM,EAAEL,KADA;AAERG,IAAAA,IAAI,EAAE,CAFE;AAGRC,IAAAA,KAAK,EAAE;AAHC,GAdM;AAmBhB,iBAAe;AACbC,IAAAA,MAAM,EAAEL,KADK;AAEbG,IAAAA,IAAI,EAAE;AAFO,GAnBC;AAuBhB,kBAAgB;AACdE,IAAAA,MAAM,EAAEL,KADM;AAEdI,IAAAA,KAAK,EAAE;AAFO;AAvBA,CAAlB;AA6BA,MAAME,sBAAsB,GAAG,EAA/B;AAEA,MAAMC,gBAAqB,GAAG;AAC5B,YAAUD,sBADkB;AAE5B,SAAO,CAACA,sBAFoB;AAG5B,eAAa,CAACA,sBAHc;AAI5B,cAAY,CAACA,sBAJe;AAK5B,iBAAeA,sBALa;AAM5B,kBAAgBA;AANY,CAA9B;AASA,MAAME,YAAY,gBAAG,0BAA6B;AAChDC,EAAAA,SAAS,EAAE,EADqC;AAEhDC,EAAAA,YAAY,EAAE,MAAM,CAAE,CAF0B;AAGhDC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAH8B;AAIhDC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAJ2B;AAKhDC,EAAAA,OAAO,EAAE,MAAM,CAAE,CAL+B;AAMhDC,EAAAA,QAAQ,EAAE,MAAM,KANgC;AAOhDC,EAAAA,aAAa,EAAE,EAPiC;AAQhDC,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CARsB;AAShDC,EAAAA,SAAS,EAAE,MAAM,CAAE;AAT6B,CAA7B,CAArB;;AAYA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAoD;AACtE,QAAM;AAAEZ,IAAAA,SAAF;AAAaM,IAAAA,aAAb;AAA4BH,IAAAA;AAA5B,MAA4CU,eAAMC,UAAN,CAChDf,YADgD,CAAlD;;AAIA,QAAMgB,WAAW,GAAG,uCAA2B,CAA/C;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzB,WAAOC,MAAM,CAACC,IAAP,CAAYlB,SAAZ,CAAP;AACD,GAFD;;AAIA,MAAImB,iBAAiB,GAAG,KAAxB;AACAH,EAAAA,YAAY,GAAGI,GAAf,CAAoBC,QAAD,IAAc;AAAA;;AAC/B,QAAI,wBAAArB,SAAS,CAACqB,QAAD,CAAT,4EAAqBC,MAArB,IAA8B,CAAlC,EAAqCH,iBAAiB,GAAG,IAApB;AACtC,GAFD;AAIA,SAAOH,YAAY,GAAGM,MAAf,GAAwB,CAAxB,gBACL,6BAAC,gBAAD,eAAaZ,QAAb;AAAuB,IAAA,MAAM,EAAES;AAA/B,MACGH,YAAY,GAAGI,GAAf,CAAoBC,QAAD,IAAsB;AACxC,QAAIJ,MAAM,CAACC,IAAP,CAAY1B,SAAZ,EAAuB+B,QAAvB,CAAgCF,QAAhC,CAAJ,EACE,oBACE,6BAAC,eAAD,eACMV,MADN;AAEE,MAAA,GAAG,EAAEU,QAFP,CAGE;;AAHF,OAIM7B,SAAS,CAAC6B,QAAD,CAJf,GAOI;AACArB,IAAAA,SAAS,CAACqB,QAAD,CAAT,CAAoBD,GAApB,CAAyBI,KAAD,iBACtB,6BAAC,+BAAD,eACMZ,mBADN;AAEE,MAAA,GAAG,EAAEY,KAAK,CAACC,EAFb;AAGE,MAAA,OAAO,EAAEnB,aAAa,CAACkB,KAAK,CAACC,EAAP,CAHxB;AAIE,MAAA,oBAAoB,EAAGC,MAAD,IAAiB;AACrC,YAAIA,MAAM,KAAK,QAAf,EAAyB;AAAA;;AACvBvB,UAAAA,WAAW,CAACqB,KAAK,CAACC,EAAP,CAAX;AACA,4BAAAD,KAAK,CAACG,MAAN,gEAAcC,eAAd,wBACEJ,KAAK,CAACG,MADR,mDACE,eAAcC,eAAd,EADF;AAED;AACF,OAVH;AAWE,MAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE,CADF;AAEPC,QAAAA,UAAU,EAAEhC,gBAAgB,CAACuB,QAAD;AAFrB;AAXX,qBAgBE,6BAAC,yBAAD,qBACE,6BAAC,YAAD;AACE,MAAA,MAAM,EACJ,CAAC,QAAD,EAAW,aAAX,EAA0B,cAA1B,EAA0CE,QAA1C,CACEF,QADF,IAGIN,WAAW,GAAG,IAHlB,GAIIgB;AANR,OASGP,KAAK,CAACQ,SATT,CADF,CAhBF,CADF,CARJ,CADF,CADF,KA6CK,OAAO,IAAP;AACN,GA/CA,CADH,CADK,GAmDH,IAnDJ;AAoDD,CAnED;;AAqEO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAChE,QAAM,CAAClC,SAAD,EAAYC,YAAZ,IAA4B,qBAAqB,EAArB,CAAlC;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoC,qBAIxC,EAJwC,CAA1C;AAMA,QAAM,CAAC4B,UAAD,IAAe,qBAAS,+BAAmB,OAAnB,EAA4B,EAA5B,CAAT,CAArB;;AACA,QAAMC,UAAU,GAAGvB,eAAMwB,MAAN,CAAa,CAAb,CAAnB;;AAEA,QAAMjC,OAAO,GAAGS,eAAMyB,WAAN,CAAkB,MAAM;AACtC/B,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAFe,EAEb,CAACA,gBAAD,CAFa,CAAhB;;AAIA,QAAMC,SAAS,GAAGK,eAAMyB,WAAN,CACfb,EAAD,IAAa;AACXlB,IAAAA,gBAAgB,CAAEgC,iBAAD,KAAwB,EACvC,GAAGA,iBADoC;AAEvC,OAACd,EAAD,GAAM;AAFiC,KAAxB,CAAD,CAAhB;AAID,GANe,EAOhB,CAAClB,gBAAD,CAPgB,CAAlB;;AAUA,QAAMF,QAAQ,GAAGQ,eAAMyB,WAAN,CACdb,EAAD,IAAa;AACX,SAAK,MAAMe,aAAX,IAA4BvB,MAAM,CAACC,IAAP,CAAYlB,SAAZ,CAA5B,EAAoD;AAClD,YAAMyC,aAA4B,GAAGzC,SAAS,CAACwC,aAAD,CAA9C;AACA,aAAOC,aAAa,CAACC,SAAd,CAAyBC,SAAD,IAAeA,SAAS,CAAClB,EAAV,KAAiBA,EAAxD,IAA8D,CAAC,CAAtE;AACD;;AAED,WAAO,KAAP;AACD,GARc,EASf,CAACzB,SAAD,CATe,CAAjB;;AAYA,QAAMG,WAAW,GAAGU,eAAMyB,WAAN,CACjBb,EAAD,IAAa;AACXxB,IAAAA,YAAY,CAAE2C,IAAD,IAAU;AACrB,WAAK,MAAMJ,aAAX,IAA4BvB,MAAM,CAACC,IAAP,CAAY0B,IAAZ,CAA5B,EAA+C;AAC7C,cAAMH,aAA4B,GAAGG,IAAI,CAACJ,aAAD,CAAzC;AACA,cAAMK,cAAc,GAClBJ,aAAa,CAACC,SAAd,CAAyBC,SAAD,IAAeA,SAAS,CAAClB,EAAV,KAAiBA,EAAxD,IAA8D,CAAC,CADjE;;AAGA,YAAIoB,cAAJ,EAAoB;AAClB,gBAAMC,gBAAgB,GAAGL,aAAa,CAACM,MAAd,CACtBC,IAAD,IAAUA,IAAI,CAACvB,EAAL,KAAYA,EADC,CAAzB;AAGA,gBAAMwB,IAAS,GAAG,EAAlB;AACAA,UAAAA,IAAI,CAACT,aAAD,CAAJ,GAAsBM,gBAAtB;AAEA,gBAAMI,YAAY,GAAG,EAAE,GAAGN,IAAL;AAAW,eAAGK;AAAd,WAArB;AACA,iBAAOC,YAAP;AACD;AACF;;AAED,aAAON,IAAP;AACD,KAnBW,CAAZ;AAoBD,GAtBiB,EAuBlB,CAAC3C,YAAD,CAvBkB,CAApB;;AA0BA,QAAMC,QAAQ,GAAGW,eAAMyB,WAAN,CACda,KAAD,IAAgC;AAC9B,UAAM;AACJC,MAAAA,SAAS,GAAG,QADR;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,MAHI;AAIJ7B,MAAAA,EAAE,GAAGW,UAAU,CAACmB,OAAX,EAJD;AAKJC,MAAAA,WALI;AAMJC,MAAAA,QAAQ,GAAG,IANP;AAOJC,MAAAA,MAPI;AAQJC,MAAAA,YARI;AASJC,MAAAA,yBATI;AAUJ,SAAGC;AAVC,QAWFV,KAXJ;AAaA,QAAIW,kBAAkB,GAAG9D,SAAS,CAACoD,SAAD,CAAlC;AACA,QAAI,CAACU,kBAAL,EAAyBA,kBAAkB,GAAG,EAArB;AAEzB,QAAI9B,SAAS,GAAG,IAAhB;;AAEA,QAAIsB,MAAJ,EAAY;AACVtB,MAAAA,SAAS,GAAGsB,MAAM,CAAC;AAAE7B,QAAAA;AAAF,OAAD,CAAlB;AACD,KAFD,MAEO;AACLO,MAAAA,SAAS;AAAA;AACP;AACA,mCAAC,eAAD,eAAYG,UAAZ,EAA4B0B,IAA5B,gBACE,6BAAC,YAAD;AAAK,QAAA,KAAK,EAAE,EAAE,GAAG1B,UAAU,CAACuB,MAAhB;AAAwB,aAAGA;AAA3B;AAAZ,SAAkDL,KAAlD,CADF,EAEGG,WAAW,iBACV,6BAAC,YAAD;AAAK,QAAA,KAAK,EAAE,EAAE,GAAGrB,UAAU,CAACwB,YAAhB;AAA8B,aAAGA;AAAjC;AAAZ,SACGH,WADH,CAHJ,CAFF;AAWD;;AAEDxD,IAAAA,SAAS,CAACoD,SAAD,CAAT,GAAuB,CACrB,GAAGU,kBADkB,EAErB;AAAE9B,MAAAA,SAAF;AAAaP,MAAAA,EAAb;AAAiBE,MAAAA,MAAM,EAAEwB;AAAzB,KAFqB,CAAvB;AAKAlD,IAAAA,YAAY,CAAC,EAAE,GAAGD;AAAL,KAAD,CAAZ;AAEAO,IAAAA,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoB,OAACmB,EAAD,GAAM;AAA1B,KAAD,CAAhB;;AACA,QAAIgC,QAAQ,KAAK,IAAjB,EAAuB;AACrBM,MAAAA,UAAU,CAAC,YAAY;AACrBvD,QAAAA,SAAS,CAACiB,EAAD,CAAT;AACD,OAFS,EAEPgC,QAFO,CAAV;AAGD,KA/C6B,CAiD9B;;;AACA,QAAIG,yBAAyB,IAAII,sBAASC,EAAT,KAAgB,KAAjD,EAAwD;AACtDC,qCAAkBC,wBAAlB,CAA2CP,yBAA3C;AACD;;AAED,WAAOnC,EAAP;AACD,GAxDc,EAyDf,CAACU,UAAD,EAAanC,SAAb,EAAwBM,aAAxB,EAAuCE,SAAvC,CAzDe,CAAjB;;AA4DA,QAAM4D,YAAY,GAAGvD,eAAMwD,OAAN,CAAc,MAAM;AACvC,WAAO;AACLrE,MAAAA,SADK;AAELC,MAAAA,YAFK;AAGLC,MAAAA,QAHK;AAILC,MAAAA,WAJK;AAKLC,MAAAA,OALK;AAMLC,MAAAA,QANK;AAOLC,MAAAA,aAPK;AAQLC,MAAAA,gBARK;AASLC,MAAAA;AATK,KAAP;AAWD,GAZoB,EAYlB,CACDR,SADC,EAEDC,YAFC,EAGDC,QAHC,EAIDC,WAJC,EAKDC,OALC,EAMDC,QANC,EAODC,aAPC,EAQDC,gBARC,EASDC,SATC,CAZkB,CAArB;;AAwBA,sBACE,6BAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE4D;AAA9B,KACGlC,QADH,eAEE,6BAAC,WAAD;AACE,IAAA,QAAQ,EAAEC,UAAU,CAACzB,QADvB;AAEE,IAAA,MAAM,EAAEyB,UAAU,CAACxB,MAFrB;AAGE,IAAA,mBAAmB,EAAEwB,UAAU,CAACvB;AAHlC,IAFF,CADF;AAUD,CA7JM;;;;AA+JA,MAAM0D,QAAQ,GAAG,MAAM;AAC5B,QAAM;AAAEpE,IAAAA,QAAF;AAAYE,IAAAA,OAAZ;AAAqBC,IAAAA,QAArB;AAA+BG,IAAAA;AAA/B,MAA6CK,eAAMC,UAAN,CACjDf,YADiD,CAAnD;;AAIA,QAAMyB,KAAK,GAAG,oBACZ,OAAO;AACL+C,IAAAA,IAAI,EAAErE,QADD;AAELsE,IAAAA,KAAK,EAAEhE,SAFF;AAGLiE,IAAAA,QAAQ,EAAErE,OAHL;AAILC,IAAAA;AAJK,GAAP,CADY,EAOZ,CAACH,QAAD,EAAWE,OAAX,EAAoBC,QAApB,EAA8BG,SAA9B,CAPY,CAAd;AAUA,SAAOgB,KAAP;AACD,CAhBM;;;;AAoBA,MAAMkD,QAAQ,gBAAG7D,eAAM8D,SAAN,EAAjB;;;AAEA,MAAMC,KAAoB,GAAG;AAClCL,EAAAA,IAAI,EAAGpB,KAAD;AAAA;;AAAA,gCAAwBuB,QAAQ,CAACnB,OAAjC,sDAAwB,kBAAkBgB,IAAlB,CAAuBpB,KAAvB,CAAxB;AAAA,GAD4B;AAElCqB,EAAAA,KAAK,EAAG/C,EAAD;AAAA;;AAAA,iCAAaiD,QAAQ,CAACnB,OAAtB,uDAAa,mBAAkBiB,KAAlB,CAAwB/C,EAAxB,CAAb;AAAA,GAF2B;AAGlCgD,EAAAA,QAAQ,EAAE;AAAA;;AAAA,iCAAMC,QAAQ,CAACnB,OAAf,uDAAM,mBAAkBkB,QAAlB,EAAN;AAAA,GAHwB;AAIlCpE,EAAAA,QAAQ,EAAGoB,EAAD;AAAA;;AAAA,iCAAaiD,QAAQ,CAACnB,OAAtB,uDAAa,mBAAkBlD,QAAlB,CAA2BoB,EAA3B,CAAb;AAAA;AAJwB,CAA7B","sourcesContent":["import { Overlay } from '../../primitives/Overlay';\nimport { PresenceTransition } from '../Transitions';\nimport VStack from '../../primitives/Stack/VStack';\nimport React, {\n  createContext,\n  MutableRefObject,\n  useState,\n  useMemo,\n} from 'react';\nimport { AccessibilityInfo, Platform, SafeAreaView } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport type { IToastContext, IToastInfo, IToast, IToastProps } from './types';\nimport { useKeyboardBottomInset } from '../../../utils';\nconst INSET = 50;\n\nconst POSITIONS = {\n  'top': {\n    top: INSET,\n    left: 0,\n    right: 0,\n  },\n  'top-right': {\n    top: INSET,\n    right: 0,\n  },\n  'top-left': {\n    top: INSET,\n    left: 0,\n  },\n  'bottom': {\n    bottom: INSET,\n    left: 0,\n    right: 0,\n  },\n  'bottom-left': {\n    bottom: INSET,\n    left: 0,\n  },\n  'bottom-right': {\n    bottom: INSET,\n    right: 0,\n  },\n};\n\nconst initialAnimationOffset = 24;\n\nconst transitionConfig: any = {\n  'bottom': initialAnimationOffset,\n  'top': -initialAnimationOffset,\n  'top-right': -initialAnimationOffset,\n  'top-left': -initialAnimationOffset,\n  'bottom-left': initialAnimationOffset,\n  'bottom-right': initialAnimationOffset,\n};\n\nconst ToastContext = createContext<IToastContext>({\n  toastInfo: {},\n  setToastInfo: () => {},\n  setToast: () => {},\n  removeToast: () => {},\n  hideAll: () => {},\n  isActive: () => false,\n  visibleToasts: {},\n  setVisibleToasts: () => {},\n  hideToast: () => {},\n});\n\nconst CustomToast = ({ _overlay, _stack, _presenceTransition }: any) => {\n  const { toastInfo, visibleToasts, removeToast } = React.useContext(\n    ToastContext\n  );\n\n  const bottomInset = useKeyboardBottomInset() * 2;\n  const getPositions = () => {\n    return Object.keys(toastInfo);\n  };\n\n  let hasToastOnOverlay = false;\n  getPositions().map((position) => {\n    if (toastInfo[position]?.length > 0) hasToastOnOverlay = true;\n  });\n\n  return getPositions().length > 0 ? (\n    <Overlay {..._overlay} isOpen={hasToastOnOverlay}>\n      {getPositions().map((position: string) => {\n        if (Object.keys(POSITIONS).includes(position))\n          return (\n            <VStack\n              {..._stack}\n              key={position}\n              // @ts-ignore\n              {...POSITIONS[position]}\n            >\n              {\n                // @ts-ignore\n                toastInfo[position].map((toast: IToast) => (\n                  <PresenceTransition\n                    {..._presenceTransition}\n                    key={toast.id}\n                    visible={visibleToasts[toast.id]}\n                    onTransitionComplete={(status: any) => {\n                      if (status === 'exited') {\n                        removeToast(toast.id);\n                        toast.config?.onCloseComplete &&\n                          toast.config?.onCloseComplete();\n                      }\n                    }}\n                    initial={{\n                      opacity: 0,\n                      translateY: transitionConfig[position],\n                    }}\n                  >\n                    <SafeAreaView>\n                      <Box\n                        bottom={\n                          ['bottom', 'bottom-left', 'bottom-right'].includes(\n                            position\n                          )\n                            ? bottomInset + 'px'\n                            : undefined\n                        }\n                      >\n                        {toast.component}\n                      </Box>\n                    </SafeAreaView>\n                  </PresenceTransition>\n                ))\n              }\n            </VStack>\n          );\n        else return null;\n      })}\n    </Overlay>\n  ) : null;\n};\n\nexport const ToastProvider = ({ children }: { children: any }) => {\n  const [toastInfo, setToastInfo] = useState<IToastInfo>({});\n  const [visibleToasts, setVisibleToasts] = useState<\n    {\n      [key in string]: boolean;\n    }\n  >({});\n\n  const [themeProps] = useState(usePropsResolution('Toast', {}));\n  const toastIndex = React.useRef(1);\n\n  const hideAll = React.useCallback(() => {\n    setVisibleToasts({});\n  }, [setVisibleToasts]);\n\n  const hideToast = React.useCallback(\n    (id: any) => {\n      setVisibleToasts((prevVisibleToasts) => ({\n        ...prevVisibleToasts,\n        [id]: false,\n      }));\n    },\n    [setVisibleToasts]\n  );\n\n  const isActive = React.useCallback(\n    (id: any) => {\n      for (const toastPosition of Object.keys(toastInfo)) {\n        const positionArray: Array<IToast> = toastInfo[toastPosition];\n        return positionArray.findIndex((toastData) => toastData.id === id) > -1;\n      }\n\n      return false;\n    },\n    [toastInfo]\n  );\n\n  const removeToast = React.useCallback(\n    (id: any) => {\n      setToastInfo((prev) => {\n        for (const toastPosition of Object.keys(prev)) {\n          const positionArray: Array<IToast> = prev[toastPosition];\n          const isToastPresent =\n            positionArray.findIndex((toastData) => toastData.id === id) > -1;\n\n          if (isToastPresent) {\n            const newPositionArray = positionArray.filter(\n              (item) => item.id !== id\n            );\n            const temp: any = {};\n            temp[toastPosition] = newPositionArray;\n\n            const newToastInfo = { ...prev, ...temp };\n            return newToastInfo;\n          }\n        }\n\n        return prev;\n      });\n    },\n    [setToastInfo]\n  );\n\n  const setToast = React.useCallback(\n    (props: IToastProps): number => {\n      const {\n        placement = 'bottom',\n        title,\n        render,\n        id = toastIndex.current++,\n        description,\n        duration = 5000,\n        _title,\n        _description,\n        accessibilityAnnouncement,\n        ...rest\n      } = props;\n\n      let positionToastArray = toastInfo[placement];\n      if (!positionToastArray) positionToastArray = [];\n\n      let component = null;\n\n      if (render) {\n        component = render({ id });\n      } else {\n        component = (\n          // Below VStack is the default component where all the direct props spread.\n          <VStack {...themeProps} {...rest}>\n            <Box _text={{ ...themeProps._title, ..._title }}>{title}</Box>\n            {description && (\n              <Box _text={{ ...themeProps._description, ..._description }}>\n                {description}\n              </Box>\n            )}\n          </VStack>\n        );\n      }\n\n      toastInfo[placement] = [\n        ...positionToastArray,\n        { component, id, config: props },\n      ];\n\n      setToastInfo({ ...toastInfo });\n\n      setVisibleToasts({ ...visibleToasts, [id]: true });\n      if (duration !== null) {\n        setTimeout(function () {\n          hideToast(id);\n        }, duration);\n      }\n\n      // iOS doesn't support accessibilityLiveRegion\n      if (accessibilityAnnouncement && Platform.OS === 'ios') {\n        AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n      }\n\n      return id;\n    },\n    [themeProps, toastInfo, visibleToasts, hideToast]\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      toastInfo,\n      setToastInfo,\n      setToast,\n      removeToast,\n      hideAll,\n      isActive,\n      visibleToasts,\n      setVisibleToasts,\n      hideToast,\n    };\n  }, [\n    toastInfo,\n    setToastInfo,\n    setToast,\n    removeToast,\n    hideAll,\n    isActive,\n    visibleToasts,\n    setVisibleToasts,\n    hideToast,\n  ]);\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      {children}\n      <CustomToast\n        _overlay={themeProps._overlay}\n        _stack={themeProps._stack}\n        _presenceTransition={themeProps._presenceTransition}\n      />\n    </ToastContext.Provider>\n  );\n};\n\nexport const useToast = () => {\n  const { setToast, hideAll, isActive, hideToast } = React.useContext(\n    ToastContext\n  );\n\n  const toast = useMemo(\n    () => ({\n      show: setToast,\n      close: hideToast,\n      closeAll: hideAll,\n      isActive,\n    }),\n    [setToast, hideAll, isActive, hideToast]\n  );\n\n  return toast;\n};\n\nexport type IToastService = ReturnType<typeof useToast>;\n\nexport const ToastRef = React.createRef<IToastService>() as MutableRefObject<IToastService>;\n\nexport const Toast: IToastService = {\n  show: (props: IToastProps) => ToastRef.current?.show(props),\n  close: (id: any) => ToastRef.current?.close(id),\n  closeAll: () => ToastRef.current?.closeAll(),\n  isActive: (id: any) => ToastRef.current?.isActive(id),\n};\n"]}