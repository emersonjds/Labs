{"version":3,"sources":["View.tsx"],"names":["StyledView","RNView","View","props","ref","resolvedProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;AAEA,MAAMA,UAAe,GAAG,iCAAoBC,iBAApB,CAAxB;AAEO,MAAMC,IAAI,gBAAG,uBAAW,CAACC,KAAD,EAAoBC,GAApB,KAAiC;AAC9D,QAAM,EAAE,GAAGC;AAAL,MAAuB,+BAAmB,MAAnB,EAA2BF,KAA3B,CAA7B,CAD8D,CAE9D;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,6BAAC,UAAD,eAAgBE,aAAhB;AAA+B,IAAA,GAAG,EAAED;AAApC,KAAP;AACD,CAPmB,CAAb","sourcesContent":["import React, { forwardRef } from 'react';\nimport { View as RNView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledView: any = makeStyledComponent(RNView);\n\nexport const View = forwardRef((props: IViewProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('View', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StyledView {...resolvedProps} ref={ref} />;\n});\n"]}