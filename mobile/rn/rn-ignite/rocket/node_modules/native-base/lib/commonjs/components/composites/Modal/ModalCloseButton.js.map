{"version":3,"sources":["ModalCloseButton.tsx"],"names":["ModalCloseButton","props","ref","hoverProps","isHovered","pressableProps","isPressed","focusProps","isFocused","isFocusVisible","focusRingProps","_icon","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","resolvedProps","handleClose","React","useContext","ModalContext"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAKA;;AACA;;;;;;;;AAEA,MAAMA,gBAAgB,GAAG,CAACC,KAAD,EAAsBC,GAAtB,KAAoC;AAC3D,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4B,2BAAlC;AACA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAgC,+BAAtC;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4B,2BAAlC;AACA,QAAM;AAAEC,IAAAA,cAAF;AAAkBF,IAAAA,UAAU,EAAEG;AAA9B,MAAsD,0BAA5D;AAEA,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,MAPI;AAQJ,OAAGC;AARC,MASF,+BAAmB,kBAAnB,EAAuCjB,KAAvC,EAA8C;AAChDG,IAAAA,SADgD;AAEhDE,IAAAA,SAFgD;AAGhDE,IAAAA,SAHgD;AAIhDC,IAAAA;AAJgD,GAA9C,CATJ;;AAeA,QAAM;AAAEU,IAAAA;AAAF,MAAkBC,eAAMC,UAAN,CAAiBC,qBAAjB,CAAxB,CArB2D,CAsB3D;;;AACA,MAAI,kDAAsBrB,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,oBAAD;AACE,IAAA,iBAAiB,EAAC,QADpB;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,SAAS,EAAE,iCAAqBU,SAArB,EAAgCP,cAAc,CAACO,SAA/C,CAHb;AAIE,IAAA,UAAU,EAAE,iCAAqBC,UAArB,EAAiCR,cAAc,CAACQ,UAAhD,CAJd,CAKE;AALF;AAME,IAAA,SAAS,EAAE,iCAAqBC,SAArB,EAAgCX,UAAU,CAACW,SAA3C,CANb,CAOE;AAPF;AAQE,IAAA,UAAU,EAAE,iCAAqBC,UAArB,EAAiCZ,UAAU,CAACY,UAA5C,CARd,CASE;AATF;AAUE,IAAA,OAAO,EAAE,iCACP,iCAAqBC,OAArB,EAA8BT,UAAU,CAACS,OAAzC,CADO,EAEPN,cAAc,CAACM,OAFR,CAVX,CAcE;AAdF;AAeE,IAAA,MAAM,EAAE,iCACN,iCAAqBC,MAArB,EAA6BV,UAAU,CAACU,MAAxC,CADM,EAENP,cAAc,CAACO,MAFT,CAfV;AAmBE,IAAA,OAAO,EAAEE;AAnBX,KAoBMD,aApBN,gBAsBE,6BAAC,gBAAD,EAAeP,KAAf,CAtBF,CADF;AA0BD,CApDD;;4BAsDe,+BAAK,uBAAWX,gBAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ModalContext } from './Context';\nimport { usePropsResolution } from '../../../hooks';\nimport { Pressable } from '../../primitives/Pressable';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport type { IButtonProps } from '../../primitives/Button';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { composeEventHandlers } from '../../../utils';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nconst ModalCloseButton = (props: IButtonProps, ref?: any) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    _icon,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('ModalCloseButton', props, {\n    isHovered,\n    isPressed,\n    isFocused,\n    isFocusVisible,\n  });\n  const { handleClose } = React.useContext(ModalContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Pressable\n      accessibilityRole=\"button\"\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      onPress={handleClose}\n      {...resolvedProps}\n    >\n      <CloseIcon {..._icon} />\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(ModalCloseButton));\n"]}