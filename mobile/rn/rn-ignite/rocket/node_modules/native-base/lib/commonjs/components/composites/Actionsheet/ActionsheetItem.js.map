{"version":3,"sources":["ActionsheetItem.tsx"],"names":["ActionsheetItem","children","startIcon","rightIcon","leftIcon","endIcon","spinner","isDisabled","isLoading","spinnerPlacement","props","ref","_text","_stack","_icon","_spinner","isLoadingText","resolvedProps","undefined","cascadePseudoProps","React","isValidElement","Children","map","child","index","cloneElement","key","spinnerElement","color","boxChildren"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Pressable } from '../../primitives/Pressable';\nimport Box from '../../primitives/Box';\nimport { HStack } from '../../primitives/Stack';\nimport Spinner from '../../primitives/Spinner';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { IActionsheetItemProps } from './types';\n\nconst ActionsheetItem = (\n  {\n    //@ts-ignore\n    children,\n    startIcon,\n    rightIcon,\n    leftIcon,\n    endIcon,\n    spinner,\n    isDisabled,\n    isLoading,\n    spinnerPlacement = 'start',\n    ...props\n  }: IActionsheetItemProps,\n  ref: any\n) => {\n  const {\n    _text,\n    _stack,\n    _icon,\n    _spinner,\n    isLoadingText,\n    ...resolvedProps\n  } = usePropsResolution('ActionsheetItem', props, undefined, {\n    cascadePseudoProps: true,\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n  const spinnerElement = spinner ? (\n    spinner\n  ) : (\n    <Spinner color={_text?.color} {..._spinner} />\n  );\n\n  const boxChildren = (child: any) => {\n    return child ? <Box _text={_text}>{child}</Box> : null;\n  };\n\n  return (\n    <Pressable disabled={isDisabled || isLoading} {...resolvedProps} ref={ref}>\n      <HStack {..._stack} test={true}>\n        {startIcon && !isLoading ? startIcon : null}\n        {isLoading && spinnerPlacement === 'start' ? spinnerElement : null}\n        {isLoading\n          ? isLoadingText\n            ? boxChildren(isLoadingText)\n            : null\n          : boxChildren(children)}\n\n        {endIcon && !isLoading ? endIcon : null}\n        {isLoading && spinnerPlacement === 'end' ? spinnerElement : null}\n      </HStack>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(ActionsheetItem));\n"]}