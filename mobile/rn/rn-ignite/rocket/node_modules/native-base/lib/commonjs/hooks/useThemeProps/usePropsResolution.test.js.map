{"version":3,"sources":["usePropsResolution.test.tsx"],"names":["inset","frame","x","y","width","height","insets","top","left","right","bottom","Provider","children","theme","defaultTheme","CheckBoxGroup","groupValue","setGroupValue","React","useState","values","describe","it","getByTestId","box","expect","props","style","paddingLeft","toBe","space","paddingRight","paddingTop","paddingBottom","base","sm","lg","box2","Platform","OS","p","newTheme","components","Box","baseStyle","py","bg","toEqual","backgroundColor","colors","cyan","variants","myBox","mt","marginTop","sizes","xs","uri","image","spinner","maxWidth","dataSet","undefined","defaultProps","size","opacity","marginRight","marginBottom","marginLeft","shadows","borderLeftWidth","px","pl","borderColor","formControl","gray","triggerProps","triggerElement","fireEvent","press","menuItem","disabledMenuItem","blue","pink","color","testID","buttonElement","buttonText","config","initialColorMode","_dark","source","imageElement","inputElement","inputElementStack","placeholderTextColor","blueGray","fontSize","fontSizes","borderBottomWidth","variant","disabled","required","getAllByRole","checkbox","length","accessibilityState","checked","sliderElement","minValue","maxValue","step","thumbSize","sliderSize","colorScheme","text","lineHeight","letterSpacing","hstackElement","flexDirection","pressableElement","red","direction","responsiveLineHeight","heading","Button","_important","button","green","_light","amber","solid","_text","emerald"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { theme as defaultTheme } from '../../theme';\nimport { NativeBaseProvider } from '../../core/NativeBaseProvider';\nimport {\n  Box,\n  Button,\n  Pressable,\n  // Select,\n  Image,\n  Spinner,\n  Text,\n  Input,\n  Checkbox,\n  Slider,\n  // Icon,\n  HStack,\n  Heading,\n} from '../../components/primitives';\n// import { Ionicons } from '@expo/vector-icons';\nimport { FormControl, Menu } from '../../components/composites';\nimport { Platform } from 'react-native';\nimport { extendTheme } from '../../core/extendTheme';\nimport { fireEvent } from '@testing-library/react-native';\n// import { InfoIcon } from '../../components/primitives/Icon/Icons';\n\nconst inset = {\n  frame: { x: 0, y: 0, width: 0, height: 0 },\n  insets: { top: 0, left: 0, right: 0, bottom: 0 },\n};\n\nconst Provider = ({ children, theme = defaultTheme }: any) => {\n  return (\n    <NativeBaseProvider initialWindowMetrics={inset} theme={theme}>\n      {children}\n    </NativeBaseProvider>\n  );\n};\n\nfunction CheckBoxGroup() {\n  const [groupValue, setGroupValue] = React.useState(['Item 1 ', 'Item 3 ']);\n  return (\n    <Checkbox.Group\n      colorScheme=\"green\"\n      defaultValue={groupValue}\n      onChange={(values) => {\n        setGroupValue(values || []);\n      }}\n    >\n      <Checkbox value=\"Item 1 \">\n        <Text mx={2}>Item 1</Text>\n      </Checkbox>\n      <Checkbox value=\"Item 2 \">\n        <Text mx={2}>Item 2</Text>\n      </Checkbox>\n      <Checkbox value=\"Item 3 \">\n        <Text mx={2}>Item 3</Text>\n      </Checkbox>\n      <Checkbox colorScheme=\"orange\" value=\"Indeterminate Item \">\n        <Text mx={2}>Indeterminate Item</Text>\n      </Checkbox>\n    </Checkbox.Group>\n  );\n}\n\ndescribe('props resolution', () => {\n  it('tests simple resolution', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={2} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style.paddingLeft).toBe(defaultTheme.space['2']);\n    expect(box.props.style.paddingRight).toBe(defaultTheme.space['2']);\n    expect(box.props.style.paddingTop).toBe(defaultTheme.space['2']);\n    expect(box.props.style.paddingBottom).toBe(defaultTheme.space['2']);\n  });\n\n  it('tests simple resolution with responsive props', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={[2, 4, 5]} testID=\"test\">\n          hello world\n        </Box>\n        <Box p={{ base: 1, sm: 5, lg: 10 }} testID=\"test2\">\n          hello world\n        </Box>\n      </Provider>\n    );\n\n    const box = getByTestId('test');\n    expect(box.props.style.paddingLeft).toBe(defaultTheme.space['4']);\n    expect(box.props.style.paddingRight).toBe(defaultTheme.space['4']);\n    expect(box.props.style.paddingTop).toBe(defaultTheme.space['4']);\n    expect(box.props.style.paddingBottom).toBe(defaultTheme.space['4']);\n    const box2 = getByTestId('test2');\n    expect(box2.props.style.paddingLeft).toBe(defaultTheme.space['5']);\n    expect(box2.props.style.paddingRight).toBe(defaultTheme.space['5']);\n    expect(box2.props.style.paddingTop).toBe(defaultTheme.space['5']);\n    expect(box2.props.style.paddingBottom).toBe(defaultTheme.space['5']);\n  });\n\n  it('resolves platform props', () => {\n    Platform.OS = 'android';\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={5} _android={{ p: 10 }} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style.paddingLeft).toBe(defaultTheme.space['10']);\n    expect(box.props.style.paddingRight).toBe(defaultTheme.space['10']);\n    expect(box.props.style.paddingTop).toBe(defaultTheme.space['10']);\n    expect(box.props.style.paddingBottom).toBe(defaultTheme.space['10']);\n  });\n\n  it('resolves base style with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box p={5} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('resolves base style and variants with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n          variants: {\n            myBox: () => ({\n              mt: 10,\n            }),\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box\n          p={5}\n          testID=\"test\"\n          //@ts-ignore\n          variant=\"myBox\"\n        >\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: newTheme.space['10'],\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('resolves base style, variants and sizes with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n          variants: {\n            myBox: () => ({\n              mt: 10,\n            }),\n          },\n          sizes: {\n            xs: {\n              height: 10,\n            },\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box\n          p={5}\n          testID=\"test\"\n          //@ts-ignore\n          variant=\"myBox\"\n          size=\"xs\"\n        >\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: newTheme.space['10'],\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      height: newTheme.sizes['10'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('tests component sizes resolution', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Image\n          source={{ uri: 'https://nativebase.io/img/nativebase-logo.svg' }}\n          alt=\"test-image\"\n          size=\"md\"\n          testID=\"image\"\n        />\n        <Spinner size=\"sm\" testID=\"spinner\" />\n      </Provider>\n    );\n    const image = getByTestId('image');\n    const spinner = getByTestId('spinner');\n    expect(image.props.style).toEqual({\n      height: defaultTheme.space['20'],\n      maxWidth: '100%',\n      width: defaultTheme.space['20'],\n    });\n\n    expect(spinner.props.style).toEqual([[{}, { dataSet: {} }], undefined]);\n  });\n\n  it('resolves base style and variants, sizes and default props with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n          variants: {\n            myBox: () => ({\n              mt: 10,\n            }),\n          },\n          sizes: {\n            xs: {\n              height: 10,\n            },\n          },\n          defaultProps: {\n            size: 'xs',\n          },\n        },\n      },\n    });\n\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box\n          p={5}\n          testID=\"test\"\n          //@ts-ignore\n          variant=\"myBox\"\n        >\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: newTheme.space['10'],\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      height: newTheme.sizes['10'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('tests alpha opacity resolution', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={2} bg=\"primary.400:alpha.50\" testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style.backgroundColor).toBe(\n      'rgba(34, 211, 238, ' + defaultTheme.opacity['50'] + ')'\n    );\n  });\n\n  it('resolves negative margins', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box m={-5} mt={'-10'} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: -defaultTheme.space['10'],\n      marginRight: -defaultTheme.space['5'],\n      marginBottom: -defaultTheme.space['5'],\n      marginLeft: -defaultTheme.space['5'],\n    });\n  });\n\n  it('resolves shadow from theme', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box shadow={9} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual(defaultTheme.shadows[9]);\n  });\n\n  it('FormControl: pseudo props test ', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <FormControl isDisabled>\n          <FormControl.HelperText\n            testID=\"test\"\n            _disabled={{\n              borderLeftWidth: 1,\n              mt: 1,\n              px: 1,\n              pl: 2,\n              borderColor: 'gray.400',\n            }}\n          />\n        </FormControl>\n      </Provider>\n    );\n    const formControl = getByTestId('test');\n    expect(formControl.props.style).toEqual({\n      borderLeftWidth: 1,\n      marginTop: defaultTheme.space['1'],\n      paddingLeft: defaultTheme.space['2'],\n      paddingRight: defaultTheme.space['1'],\n      borderColor: defaultTheme.colors.gray['400'],\n    });\n  });\n\n  it('Menu: style props test', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Menu\n          trigger={(triggerProps) => {\n            return (\n              <Pressable\n                testID=\"pressableTest\"\n                accessibilityLabel=\"More options menu\"\n                {...triggerProps}\n              >\n                Open menu\n              </Pressable>\n            );\n          }}\n        >\n          <Menu.Item>Arial</Menu.Item>\n          <Menu.Item bg=\"blue.300\" testID=\"test\">\n            Nunito Sans\n          </Menu.Item>\n          <Menu.Item testID=\"test1\" isDisabled _disabled={{ bg: 'pink.300' }}>\n            Tahoma\n          </Menu.Item>\n        </Menu>\n      </Provider>\n    );\n    const triggerElement = getByTestId('pressableTest');\n    fireEvent.press(triggerElement);\n    const menuItem = getByTestId('test');\n    const disabledMenuItem = getByTestId('test1');\n    expect(menuItem.props.style.backgroundColor).toBe(\n      defaultTheme.colors.blue['300']\n    );\n    expect(disabledMenuItem.props.style.backgroundColor).toBe(\n      defaultTheme.colors.pink['300']\n    );\n  });\n\n  it('Button: style props test', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Button\n          testID=\"test\"\n          bg=\"pink.900\"\n          _text={{ color: 'cyan.100', testID: 'test1' }}\n        >\n          PRIMARY\n        </Button>\n      </Provider>\n    );\n    const buttonElement = getByTestId('test');\n    const buttonText = getByTestId('test1');\n    expect(buttonText.props.style.color).toBe(defaultTheme.colors.cyan['100']);\n    expect(buttonElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.pink['900']\n    );\n  });\n  it('Button: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Button\n          testID=\"test\"\n          _ios={{ _dark: { bg: 'pink.900' } }}\n          _text={{ color: 'cyan.100', testID: 'test1' }}\n        >\n          PRIMARY\n        </Button>\n      </Provider>\n    );\n    const buttonElement = getByTestId('test');\n    const buttonText = getByTestId('test1');\n    expect(buttonText.props.style.color).toBe(defaultTheme.colors.cyan['100']);\n    expect(buttonElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.pink['900']\n    );\n  });\n  it('Button: style responsive props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Button\n          testID=\"test\"\n          _ios={{ _dark: { bg: ['pink.900', 'blue.900', 'cyan.900'] } }}\n          _text={{ color: 'cyan.100', testID: 'test1' }}\n        >\n          PRIMARY\n        </Button>\n      </Provider>\n    );\n    const buttonElement = getByTestId('test');\n    const buttonText = getByTestId('test1');\n    expect(buttonText.props.style.color).toBe(defaultTheme.colors.cyan['100']);\n    expect(buttonElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.blue['900']\n    );\n  });\n  it('Image: style responsive props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Image\n          testID=\"test\"\n          source={{\n            uri: 'https://wallpaperaccess.com/full/317501jpg',\n          }}\n          alt=\"Alternate Text\"\n          _ios={{\n            _dark: {\n              source: {\n                uri: 'https://www.w3schools.com/css/img_lightsjpg',\n              },\n              size: ['sm', 'md', 'xl'],\n            },\n          }}\n        />\n      </Provider>\n    );\n    const imageElement = getByTestId('test');\n    expect(imageElement.props.style).toEqual({\n      height: defaultTheme.space['20'],\n      maxWidth: '100%',\n      width: defaultTheme.space['20'],\n    });\n  });\n\n  it('Input: Basic check', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Input\n          _stack={{ testID: 'StackTest' }}\n          _input={{ testID: 'test' }}\n          w=\"100%\"\n          mx={3}\n          placeholder=\"Default Input\"\n          placeholderTextColor=\"blueGray.400\"\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    const inputElementStack = getByTestId('StackTest');\n    expect(inputElement.props.style.width).toBe('100%');\n    expect(inputElement.props.placeholderTextColor).toBe(\n      defaultTheme.colors.blueGray['400']\n    );\n    expect(inputElementStack.props.style.marginLeft).toBe(\n      defaultTheme.space['3']\n    );\n    expect(inputElementStack.props.style.marginRight).toBe(\n      defaultTheme.space['3']\n    );\n  });\n\n  it('Input: color mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Input\n          _input={{ testID: 'test' }}\n          _light={{\n            placeholderTextColor: 'blueGray.400',\n          }}\n          _dark={{\n            placeholderTextColor: 'blueGray.50',\n          }}\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.placeholderTextColor).toBe(\n      defaultTheme.colors.blueGray['50']\n    );\n  });\n\n  it('Input: size', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Input\n          _input={{ testID: 'test' }}\n          size=\"sm\"\n          variant=\"outline\"\n          _dark={{\n            size: 'md',\n          }}\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.style.fontSize).toBe(defaultTheme.fontSizes.sm);\n  });\n\n  it('Input: variant', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Input _stack={{ testID: 'test' }} variant=\"underlined\" />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.style.borderBottomWidth).toBe(1);\n  });\n\n  // it('Input: inputElements', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Input\n  //         testID=\"test1\"\n  //         InputLeftElement={<Button testID=\"test2\">leftIcon</Button>}\n  //         placeholder=\"Input\"\n  //       />\n  //     </Provider>\n  //   );\n  //   const inputElement = getByTestId('test1');\n  //   const iconElement = getByTestId('test2');\n  //   console.log(inputElement, '!!!!!');\n  //   console.log('===========');\n  //   console.log(inputElement.props, '!!!!!');\n  //   expect(inputElement.props.InputLeftElement).toBe(iconElement);\n  // });\n  it('Input: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Input\n          _stack={{ testID: 'stackTest' }}\n          _input={{ testID: 'test' }}\n          _ios={{ _dark: { variant: 'underlined', size: 'sm' } }}\n          variant=\"outline\"\n          size=\"lg\"\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    const inputElementStack = getByTestId('stackTest');\n    expect(inputElementStack.props.style.borderBottomWidth).toBe(1);\n    // as input of 'sm' size is mapped to 'xs' fontsize\n    expect(inputElement.props.style.fontSize).toBe(defaultTheme.fontSizes.xs);\n  });\n\n  // it('Input: inputElemets', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Input\n  //         testID=\"test1\"\n  //         InputLeftElement={<Button testID=\"test2\">leftIcon</Button>}\n  //         placeholder=\"Input\"\n  //       />\n  //     </Provider>\n  //   );\n  //   const inputElement = getByTestId('test1');\n  //   const iconElement = getByTestId('test2');\n  //   console.log(inputElement, '!!!!!');\n  //   console.log('===========');\n  //   console.log(inputElement.props, '!!!!!');\n  //   expect(inputElement.props.InputLeftElement).toBe(iconElement);\n  // });\n\n  it('Input: disabled', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Input\n          _input={{ testID: 'test' }}\n          type=\"password\"\n          isDisabled={true}\n          isRequired={true}\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.disabled).toBe(true);\n    expect(inputElement.props.required).toBe(true);\n  });\n\n  // ==========================================\n\n  it('handles defaults and onChange on checkBoxGroup', () => {\n    const { getAllByRole } = render(\n      <Provider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <CheckBoxGroup />\n      </Provider>\n    );\n    const checkbox = getAllByRole('checkbox');\n    expect(checkbox.length).toBe(4);\n    expect(checkbox[0].props.accessibilityState.checked).toBe(true);\n    expect(checkbox[1].props.accessibilityState.checked).toBe(false);\n    expect(checkbox[2].props.accessibilityState.checked).toBe(true);\n    expect(checkbox[3].props.accessibilityState.checked).toBe(false);\n    fireEvent.press(checkbox[1]);\n    expect(checkbox[1].props.accessibilityState.checked).toBe(true);\n  });\n\n  it('checkBox: disabled, checked', () => {\n    const { getAllByRole } = render(\n      <Provider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <Checkbox value=\"Item 1 \">\n          <Text mx={2}>Item 1</Text>\n        </Checkbox>\n        <Checkbox value=\"Item 2 \" isDisabled>\n          <Text mx={2}>Item 2</Text>\n        </Checkbox>\n        <Checkbox value=\"Item 3\" isChecked>\n          <Text mx={2}>Item 3</Text>\n        </Checkbox>\n        <Checkbox colorScheme=\"orange\" value=\"Indeterminate Item\" isInvalid>\n          <Text mx={2}>Indeterminate Item</Text>\n        </Checkbox>\n      </Provider>\n    );\n    const checkbox = getAllByRole('checkbox');\n    expect(checkbox.length).toBe(4);\n    expect(checkbox[1].props.accessibilityState.disabled).toBe(true);\n    expect(checkbox[2].props.accessibilityState.checked).toBe(true);\n    // expect(checkbox[3].props.accessibilityState.invalid).toBe(true);\n  });\n\n  // it('Checkbox: style props test with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n  //   const { getAllByRole } = render(\n  //     <Provider theme={newTheme}>\n  //       <Checkbox\n  //         value=\"Item 1\"\n  //         isChecked={true}\n  //         isDisabled={false}\n  //         _dark={{\n  //           isChecked: false,\n  //           isDisabled: true,\n  //         }}\n  //       >\n  //         <Text mx={2}>Item 1</Text>\n  //       </Checkbox>\n  //     </Provider>\n  //   );\n\n  //   let checkbox = getAllByRole('checkbox');\n  //   console.log(checkbox[0].props.accessibilityState, '@@@@');\n  //   expect(checkbox[0].props.accessibilityState.checked).toBe(false);\n  //   expect(checkbox[0].props.accessibilityState.disabled).toBe(true);\n  // });\n\n  // it('Checkbox: style props test on ios with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n  //   Platform.OS = 'ios';\n  //   const { getAllByRole } = render(\n  //     <Provider theme={newTheme}>\n  //       <Checkbox\n  //         value=\"Item 1\"\n  //         isChecked={true}\n  //         isDisabled={false}\n  //         _ios={{\n  //           _dark: {\n  //             isChecked: false,\n  //             isDisabled: true,\n  //           },\n  //         }}\n  //       >\n  //         <Text mx={2}>Item 1</Text>\n  //       </Checkbox>\n  //     </Provider>\n  //   );\n\n  //   let checkbox = getAllByRole('checkbox');\n  //   console.log(checkbox[0].props.accessibilityState, '@@@@');\n  //   expect(checkbox[0].props.accessibilityState.checked).toBe(false);\n  //   expect(checkbox[0].props.accessibilityState.disabled).toBe(true);\n  // });\n\n  it('onChange on checkBox', () => {\n    const { getAllByRole } = render(\n      <Provider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <Checkbox value=\"item 1\" />\n      </Provider>\n    );\n    const checkbox = getAllByRole('checkbox');\n    expect(checkbox.length).toBe(1);\n    fireEvent.press(checkbox[0]);\n    expect(checkbox[0].props.accessibilityState.checked).toBe(true);\n  });\n\n  // it('CustomIcon checkBox', () => {\n  //   let { getAllByRole, getByTestId } = render(\n  //     <Provider>\n  //       <Checkbox\n  //         value=\"orange\"\n  //         colorScheme=\"orange\"\n  //         size=\"md\"\n  //         icon={<Icon testID=\"icon\" as={<InfoIcon />} />}\n  //         defaultIsChecked\n  //       >\n  //         Info\n  //       </Checkbox>\n  //     </Provider>\n  //   );\n  //   let checkbox = getAllByRole('checkbox');\n  //   let nestedIcon = getByTestId('icon');\n\n  //   expect(checkbox[0].props.icon).toBe(nestedIcon);\n  // });\n\n  //  ==========================================\n  it('Slider: basic', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Slider\n          testID=\"slider\"\n          // Need to test\n          // defaultValue={70}\n          minValue={0}\n          maxValue={100}\n          accessibilityLabel=\"hello world\"\n          step={10}\n          colorScheme=\"red\"\n          size=\"sm\"\n        >\n          <Slider.Track>\n            <Slider.FilledTrack />\n          </Slider.Track>\n          <Slider.Thumb />\n        </Slider>\n      </Provider>\n    );\n    const sliderElement = getByTestId('slider');\n    expect(sliderElement.props.minValue).toBe(0);\n    expect(sliderElement.props.maxValue).toBe(100);\n    expect(sliderElement.props.step).toBe(10);\n    expect(sliderElement.props.thumbSize).toBe(4);\n    expect(sliderElement.props.sliderSize).toBe(4);\n    expect(sliderElement.props.colorScheme).toBe('red');\n  });\n\n  //  ==========================================\n  // it('Modal: size', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Modal isOpen={true} size=\"sm\">\n  //         <Modal.Content testID=\"size\">\n  //           <Modal.Header>Modal Title</Modal.Header>\n  //           <Modal.Body>\n  //             Sit nulla est ex deserunt exercitation anim occaecat. Nostrud\n  //             ullamco deserunt aute id consequat veniam incididunt duis in sint\n  //             irure nisi. Mollit officia cillum Lorem ullamco minim nostrud elit\n  //             officia tempor esse quis. Sunt ad dolore quis aute consequat.\n  //             Magna exercitation reprehenderit magna aute tempor cupidatat\n  //             consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex\n  //             incididunt cillum quis. Velit duis sit officia eiusmod Lorem\n  //             aliqua enim laboris do dolor eiusmod. Et mollit incididunt nisi\n  //             consectetur esse laborum eiusmod pariatur\n  //           </Modal.Body>\n  //         </Modal.Content>\n  //       </Modal>\n  //     </Provider>\n  //   );\n  //   const modalElement = getByTestId('size');\n  //   // console.log(modalElement, 'jdj');\n  //   expect(modalElement.props.style.width).toBe('60%');\n  // });\n  it('Slider: style props test with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Slider\n          testID=\"test\"\n          _dark={{\n            minValue: 20,\n            maxValue: 120,\n            step: 25,\n            colorScheme: 'blue',\n            size: 'md',\n          }}\n          minValue={0}\n          maxValue={100}\n          accessibilityLabel=\"hello world\"\n          step={10}\n          colorScheme=\"red\"\n          size=\"sm\"\n        >\n          <Slider.Track>\n            <Slider.FilledTrack />\n          </Slider.Track>\n          <Slider.Thumb />\n        </Slider>\n      </Provider>\n    );\n\n    const sliderElement = getByTestId('test');\n    expect(sliderElement.props.minValue).toBe(20);\n    expect(sliderElement.props.maxValue).toBe(120);\n    expect(sliderElement.props.step).toBe(25);\n    expect(sliderElement.props.thumbSize).toBe(5);\n    expect(sliderElement.props.sliderSize).toBe(5);\n    expect(sliderElement.props.colorScheme).toBe('blue');\n  });\n  it('tests lineHeight & letterspacing in text ', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Text\n          /* @ts-ignore */\n          fontSize=\"20px\"\n          lineHeight=\"5xl\"\n          letterSpacing=\"xl\"\n          testID=\"test\"\n        >\n          This is a text\n        </Text>\n      </Provider>\n    );\n\n    const text = getByTestId('test');\n    expect(text.props.style.lineHeight).toBe(80);\n    expect(text.props.style.letterSpacing).toBe(1);\n  });\n\n  it('Slider: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Slider\n          testID=\"test\"\n          _ios={{\n            _dark: {\n              minValue: 10,\n              maxValue: 110,\n              step: 15,\n              colorScheme: 'green',\n              size: 'md',\n            },\n          }}\n          minValue={0}\n          maxValue={100}\n          accessibilityLabel=\"hello world\"\n          step={10}\n          colorScheme=\"red\"\n          size=\"sm\"\n        >\n          <Slider.Track>\n            <Slider.FilledTrack />\n          </Slider.Track>\n          <Slider.Thumb />\n        </Slider>\n      </Provider>\n    );\n\n    const sliderElement = getByTestId('test');\n    expect(sliderElement.props.minValue).toBe(10);\n    expect(sliderElement.props.maxValue).toBe(110);\n    expect(sliderElement.props.step).toBe(15);\n    expect(sliderElement.props.thumbSize).toBe(5);\n    expect(sliderElement.props.sliderSize).toBe(5);\n    expect(sliderElement.props.colorScheme).toBe('green');\n  });\n\n  it('HStack: basic', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <HStack testID=\"hstack\">\n          <Box>1</Box>\n          <Box>2</Box>\n          <Box>3</Box>\n        </HStack>\n      </Provider>\n    );\n    const hstackElement = getByTestId('hstack');\n    expect(hstackElement.props.style.flexDirection).toBe('row');\n  });\n\n  it('HStack: direction', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <HStack testID=\"test\" direction=\"column\">\n          <Box>1</Box>\n          <Box>2</Box>\n          <Box>3</Box>\n        </HStack>\n      </Provider>\n    );\n    const hstackElement = getByTestId('test');\n    expect(hstackElement.props.style.flexDirection).toBe('column');\n  });\n\n  // it('Icon: basic', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Icon as={<Ionicons name=\"md-checkmark-circle\" />} />\n  //     </Provider>\n  //   );\n  //   const iconElement = getByTestId('test123');\n  //   expect(iconElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.red['200']\n  //   );\n  // });\n\n  // it('Icon: Nativebase icons', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <MoonIcon testId=\"test\" />\n  //     </Provider>\n  //   );\n  //   const iconElement = getByTestId('test');\n  //   expect(pressableElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.red['200']\n  //   );\n  // });\n\n  it('Pressable: style props test', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Pressable testID=\"test\" bg=\"red.200\" _hover={{ bg: 'teal.300' }}>\n          <Text>hello world</Text>\n        </Pressable>\n      </Provider>\n    );\n    const pressableElement = getByTestId('test');\n    expect(pressableElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.red['200']\n    );\n  });\n\n  // it('Pressable: style props test on ios with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n\n  //   Platform.OS = 'ios';\n  //   const { getByTestId } = render(\n  //     <Provider theme={newTheme}>\n  //       <Pressable testID=\"test\" _ios={{ _dark: { bg: 'pink.900' } }}>\n  //         PRIMARY\n  //       </Pressable>\n  //     </Provider>\n  //   );\n  //   const buttonElement = getByTestId('test');\n  //   expect(buttonElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.pink['900']\n  //   );\n  // });\n\n  // it('Pressable: style responsive props test on ios with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n  //   Platform.OS = 'ios';\n  //   const { getByTestId } = render(\n  //     <Provider theme={newTheme}>\n  //       <Pressable\n  //         testID=\"test\"\n  //         _ios={{ _dark: { bg: ['pink.900', 'blue.900', 'cyan.900'] } }}\n  //       >\n  //         PRIMARY\n  //       </Pressable>\n  //     </Provider>\n  //   );\n  //   const buttonElement = getByTestId('test');\n  //   expect(buttonElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.blue['900']\n  //   );\n  // });\n  // });\n  it('HStack: style props test with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <HStack\n          testID=\"test\"\n          direction=\"column\"\n          _dark={{\n            direction: 'row',\n          }}\n        >\n          <Box>1</Box>\n          <Box>2</Box>\n          <Box>3</Box>\n        </HStack>\n      </Provider>\n    );\n\n    const hstackElement = getByTestId('test');\n    expect(hstackElement.props.style.flexDirection).toBe('row');\n  });\n\n  it('HStack: style props test on ios & dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box>\n          <Text\n            // @ts-ignore\n            fontSize=\"12px\"\n            testID=\"test\"\n            lineHeight=\"4xl\"\n            letterSpacing=\"xl\"\n            _ios={{\n              _dark: {\n                fontSize: '15px',\n                letterSpacing: 'lg',\n                lineHeight: '3xl',\n              },\n            }}\n          >\n            This is a text\n          </Text>\n          <Text\n            testID=\"responsiveLineHeight\"\n            lineHeight=\"3xl\"\n            fontSize={['12px', '13px']}\n          >\n            hello world\n          </Text>\n        </Box>\n      </Provider>\n    );\n    const text = getByTestId('test');\n    const responsiveLineHeight = getByTestId('responsiveLineHeight');\n    expect(text.props.style.lineHeight).toBe(37.5);\n    expect(text.props.style.letterSpacing).toBe(0.375);\n    expect(responsiveLineHeight.props.style.lineHeight).toBe(32.5);\n  });\n\n  it('Heading: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box>\n          <Heading\n            // @ts-ignore\n            fontSize=\"12px\"\n            testID=\"test\"\n            lineHeight=\"4xl\"\n            letterSpacing=\"xl\"\n            _ios={{\n              _dark: {\n                fontSize: '15px',\n                letterSpacing: 'lg',\n                lineHeight: '3xl',\n              },\n            }}\n          >\n            This is a Heading\n          </Heading>\n        </Box>\n      </Provider>\n    );\n    const heading = getByTestId('test');\n    expect(heading.props.style.lineHeight).toBe(37.5);\n    expect(heading.props.style.letterSpacing).toBe(0.375);\n  });\n\n  it('Pseudo props test: importatnt on Button', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n      components: {\n        Button: {\n          baseStyle: {\n            _important: {\n              bg: 'green.400',\n            },\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Button bg=\"amber.500\" testID=\"test\">\n          Button\n        </Button>\n      </Provider>\n    );\n    const button = getByTestId('test');\n    expect(button.props.style.backgroundColor).toBe(\n      defaultTheme.colors.green['400']\n    );\n  });\n\n  it('Pseudo props test: normal prop on light and dark', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n      components: {\n        Button: {\n          baseStyle: {\n            _light: {\n              bg: 'green.700',\n            },\n            _dark: {\n              bg: 'green.100',\n            },\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Button bg=\"amber.500\" testID=\"test\">\n          Button\n        </Button>\n      </Provider>\n    );\n    const button = getByTestId('test');\n    expect(button.props.style.backgroundColor).toBe(\n      defaultTheme.colors.amber['500']\n    );\n  });\n\n  it('Pseudo props test: _important overrided', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n      components: {\n        Button: {\n          baseStyle: {\n            _important: {\n              bg: 'green.400',\n            },\n          },\n          variants: {\n            solid: {\n              _important: {\n                bg: 'emerald.800',\n                _text: {\n                  color: 'white',\n                },\n              },\n            },\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Button bg=\"amber.500\" testID=\"test\">\n          Button\n        </Button>\n      </Provider>\n    );\n    const button = getByTestId('test');\n    expect(button.props.style.backgroundColor).toBe(\n      defaultTheme.colors.emerald['800']\n    );\n  });\n});\n\n// =========================================================\n// it('Modal: size', () => {\n//   const { getByTestId } = render(\n//     <Provider>\n//       <Modal isOpen={true} size=\"sm\">\n//         <Modal.Content testID=\"size\">\n//           <Modal.Header>Modal Title</Modal.Header>\n//           <Modal.Body>\n//             Sit nulla est ex deserunt exercitation anim occaecat. Nostrud\n//             ullamco deserunt aute id consequat veniam incididunt duis in sint\n//             irure nisi. Mollit officia cillum Lorem ullamco minim nostrud elit\n//             officia tempor esse quis. Sunt ad dolore quis aute consequat.\n//             Magna exercitation reprehenderit magna aute tempor cupidatat\n//             consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex\n//             incididunt cillum quis. Velit duis sit officia eiusmod Lorem\n//             aliqua enim laboris do dolor eiusmod. Et mollit incididunt nisi\n//             consectetur esse laborum eiusmod pariatur\n//           </Modal.Body>\n//         </Modal.Content>\n//       </Modal>\n//     </Provider>\n//   );\n//   const modalElement = getByTestId('size');\n\n//   expect(modalElement.props.style.width).toBe('60%');\n// });\n"]}