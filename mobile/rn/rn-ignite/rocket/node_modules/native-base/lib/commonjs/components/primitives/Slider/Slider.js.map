{"version":3,"sources":["Slider.tsx"],"names":["Slider","isDisabled","isReadOnly","props","ref","newProps","accessibilityLabel","value","defaultValue","onLayout","layout","trackLayout","updatedProps","Object","assign","state","numberFormatter","format","e","minValue","maxValue","onChange","val","onChangeEnd","resolvedProps","trackProps","contextValue","React","useMemo","orientation","isReversed","colorScheme","onTrackLayout","thumbSize","sliderSize","sliderTrackHeight","_interactionBox","Children","map","children","child","index","displayName","cloneElement"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,SAASA,MAAT,CAAgB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0B,KAAGC;AAA7B,CAAhB,EAAoEC,GAApE,EAA+E;AAAA;;AAC7E,QAAMC,QAAQ,GAAG,EACf,GAAGF,KADY;AAEf,2CAAcA,KAAK,CAACG,kBAApB,yEAA0C;AAF3B,GAAjB;;AAKA,MAAI,OAAOH,KAAK,CAACI,KAAb,KAAuB,QAA3B,EAAqC;AACnC;AACAF,IAAAA,QAAQ,CAACE,KAAT,GAAiB,CAACJ,KAAK,CAACI,KAAP,CAAjB;AACD;;AAED,MAAI,OAAOJ,KAAK,CAACK,YAAb,KAA8B,QAAlC,EAA4C;AAC1C;AACAH,IAAAA,QAAQ,CAACG,YAAT,GAAwB,CAACL,KAAK,CAACK,YAAP,CAAxB;AACD;;AAEDL,EAAAA,KAAK,GAAGE,QAAR;AAEA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,MAAM,EAAEC;AAApB,MAAoC,uBAA1C;AACA,QAAMC,YAA0B,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,CAAnC;;AAEA,MAAID,UAAU,IAAID,UAAlB,EAA8B;AAC5BW,IAAAA,YAAY,CAACX,UAAb,GAA0B,IAA1B;AACD;;AAED,QAAMc,KAAK,GAAG,4BAAe,EAC3B,GAAGH,YADwB;AAE3B;AACAI,IAAAA,eAAe,EAAE;AAAEC,MAAAA,MAAM,EAAGC,CAAD,IAAOA;AAAjB,KAHU;AAI3BC,IAAAA,QAAQ,EAAEhB,KAAK,CAACgB,QAJW;AAK3BC,IAAAA,QAAQ,EAAEjB,KAAK,CAACiB,QALW;AAM3BC,IAAAA,QAAQ,EAAGC,GAAD,IAAc;AACtBnB,MAAAA,KAAK,CAACkB,QAAN,IAAkBlB,KAAK,CAACkB,QAAN,CAAeC,GAAG,CAAC,CAAD,CAAlB,CAAlB;AACD,KAR0B;AAS3BC,IAAAA,WAAW,EAAGD,GAAD,IAAc;AACzBnB,MAAAA,KAAK,CAACoB,WAAN,IAAqBpB,KAAK,CAACoB,WAAN,CAAkBD,GAAG,CAAC,CAAD,CAArB,CAArB;AACD;AAX0B,GAAf,CAAd;AAcA,QAAME,aAAa,GAAG,+BAAmB,QAAnB,EAA6BrB,KAA7B,EAAoC;AACxDF,IAAAA,UADwD;AAExDC,IAAAA;AAFwD,GAApC,CAAtB;AAKA,QAAM;AAAEuB,IAAAA;AAAF,MAAiB,wBACpBtB,KADoB,EAErBY,KAFqB,EAGrBJ,WAHqB,CAAvB;;AAMA,QAAMe,YAAY,GAAGC,eAAMC,OAAN,CAAc,MAAM;AACvC,WAAO;AACLjB,MAAAA,WADK;AAELI,MAAAA,KAFK;AAGLc,MAAAA,WAAW,EAAE1B,KAAK,CAAC0B,WAHd;AAIL5B,MAAAA,UAAU,EAAEA,UAJP;AAKL6B,MAAAA,UAAU,EAAE3B,KAAK,CAAC2B,UALb;AAMLC,MAAAA,WAAW,EAAE5B,KAAK,CAAC4B,WANd;AAOLN,MAAAA,UAPK;AAQLvB,MAAAA,UAAU,EAAEA,UARP;AASL8B,MAAAA,aAAa,EAAEvB,QATV;AAULwB,MAAAA,SAAS,EAAET,aAAa,CAACS,SAVpB;AAWLC,MAAAA,UAAU,EAAEV,aAAa,CAACW,iBAXrB;AAYLC,MAAAA,eAAe,EAAEZ,aAAa,CAACY;AAZ1B,KAAP,CADuC,CAevC;AACD,GAhBoB,EAgBlB,CACDzB,WADC,EAEDI,KAFC,EAGDZ,KAAK,CAAC0B,WAHL,EAID5B,UAJC,EAKDE,KAAK,CAAC2B,UALL,EAMD3B,KAAK,CAAC4B,WANL,EAOD7B,UAPC,EAQDO,QARC,EASDe,aAAa,CAACS,SATb,EAUDT,aAAa,CAACW,iBAVb,CAhBkB,CAArB,CAlD6E,CA+E7E;;;AACA,MAAI,kDAAsBhC,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBACE,6BAAC,sBAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEuB;AAA/B,kBACE,6BAAC,YAAD,eAASF,aAAT;AAAwB,IAAA,GAAG,EAAEpB;AAA7B,MACGuB,eAAMU,QAAN,CAAeC,GAAf,CAAmBnC,KAAK,CAACoC,QAAzB,EAAmC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpD,QAAID,KAAK,CAACE,WAAN,KAAsB,aAA1B,EAAyC;AACvC,0BAAOf,eAAMgB,YAAN,CAAmBH,KAAnB,EAAgD;AACrDC,QAAAA;AADqD,OAAhD,CAAP;AAGD;;AAED,WAAOD,KAAP;AACD,GARA,CADH,CADF,CADF;AAeD;;4BAEc,uBAAWxC,MAAX,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks';\nimport type { ISliderProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useSlider } from '@react-native-aria/slider';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction Slider({ isDisabled, isReadOnly, ...props }: ISliderProps, ref?: any) {\n  const newProps = {\n    ...props,\n    'aria-label': props.accessibilityLabel ?? 'Slider',\n  };\n\n  if (typeof props.value === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  const { onLayout, layout: trackLayout } = useLayout();\n  const updatedProps: ISliderProps = Object.assign({}, props);\n\n  if (isReadOnly || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  const state = useSliderState({\n    ...updatedProps,\n    //@ts-ignore\n    numberFormatter: { format: (e) => e },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: (val: any) => {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: (val: any) => {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    },\n  });\n\n  const resolvedProps = usePropsResolution('Slider', props, {\n    isDisabled,\n    isReadOnly,\n  });\n\n  const { trackProps } = useSlider(\n    (props as unknown) as any,\n    state,\n    trackLayout\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      trackLayout,\n      state,\n      orientation: props.orientation,\n      isDisabled: isDisabled,\n      isReversed: props.isReversed,\n      colorScheme: props.colorScheme,\n      trackProps,\n      isReadOnly: isReadOnly,\n      onTrackLayout: onLayout,\n      thumbSize: resolvedProps.thumbSize,\n      sliderSize: resolvedProps.sliderTrackHeight,\n      _interactionBox: resolvedProps._interactionBox,\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    trackLayout,\n    state,\n    props.orientation,\n    isDisabled,\n    props.isReversed,\n    props.colorScheme,\n    isReadOnly,\n    onLayout,\n    resolvedProps.thumbSize,\n    resolvedProps.sliderTrackHeight,\n  ]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <Box {...resolvedProps} ref={ref}>\n        {React.Children.map(props.children, (child, index) => {\n          if (child.displayName === 'SliderThumb') {\n            return React.cloneElement(child as React.ReactElement, {\n              index,\n            });\n          }\n\n          return child;\n        })}\n      </Box>\n    </SliderContext.Provider>\n  );\n}\n\nexport default forwardRef(Slider);\n"]}