{"version":3,"sources":["StrictMode.ts"],"names":["tokenNotString","tokenNotFound","strictModeLogger","token","scale","mode","type","log","console"],"mappings":";;;;;;AAEA,MAAMA,cAAc,GAAG,gBAAvB;AACA,MAAMC,aAAa,GAAG,eAAtB;;AAEO,MAAMC,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,KAD+B;AAE/BC,EAAAA,KAF+B;AAG/BC,EAAAA,IAH+B;AAI/BC,EAAAA;AAJ+B,CAAD,KAU1B;AACJ,MAAI,CAACD,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAP;AACD;;AAED,MAAIA,IAAI,KAAK,KAAb,EAAoB,OALhB,CAOJ;;AACA,QAAME,GAAG,GAAGC,OAAO,CAACH,IAAD,CAAnB;;AAEA,UAAQC,IAAR;AACE,SAAKL,aAAL;AACEM,MAAAA,GAAG,iBACQJ,KADR,0CAC6CC,KAD7C,uEAAH;AAGA;;AACF,SAAKJ,cAAL;AACEO,MAAAA,GAAG,iBAAUJ,KAAV,oCAAH;AACA;;AACF;AACE;AAVJ;AAYD,CAhCM","sourcesContent":["export type IModeType = 'off' | 'warn' | 'error';\n\nconst tokenNotString = 'tokenNotString';\nconst tokenNotFound = 'tokenNotFound';\n\nexport const strictModeLogger = ({\n  token,\n  scale,\n  mode,\n  type,\n}: {\n  token: string;\n  scale: string;\n  mode: IModeType;\n  type: typeof tokenNotString | typeof tokenNotFound;\n}) => {\n  if (!mode) {\n    mode = 'off';\n  }\n\n  if (mode === 'off') return;\n\n  // eslint-disable-next-line no-console\n  const log = console[mode];\n\n  switch (type) {\n    case tokenNotFound:\n      log(\n        `Token ${token} not found in theme scale of ${scale}. Please use extendTheme function to add this token in your theme`\n      );\n      return;\n    case tokenNotString:\n      log(`Token ${token} should be passed as a string.`);\n      return;\n    default:\n      return;\n  }\n};\n"]}