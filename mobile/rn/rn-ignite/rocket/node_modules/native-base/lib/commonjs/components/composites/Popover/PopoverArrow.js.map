{"version":3,"sources":["PopoverArrow.tsx"],"names":["PopoverArrow","React","forwardRef","props","ref","resolvedProps","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAEA,MAAMA,YAAY,gBAAGC,eAAMC,UAAN,CAAiB,CAACC,KAAD,EAAmBC,GAAnB,KAAgC;AACpE,QAAMC,aAAa,GAAG,+BAAmB,cAAnB,EAAmCF,KAAnC,CAAtB,CADoE,CAEpE;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,6BAAC,cAAD,CAAQ,KAAR,eAAkBE,aAAlB;AAAiC,IAAA,GAAG,EAAED;AAAtC,KAAP;AACD,CAPoB,CAArB;;AASAJ,YAAY,CAACM,WAAb,GAA2B,aAA3B;eAEeN,Y","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { Popper } from '../Popper';\nimport type { IBoxProps } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverArrow = React.forwardRef((props: IBoxProps, ref: any) => {\n  const resolvedProps = usePropsResolution('PopoverArrow', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Popper.Arrow {...resolvedProps} ref={ref} />;\n});\n\nPopoverArrow.displayName = 'PopperArrow';\n\nexport default PopoverArrow;\n"]}