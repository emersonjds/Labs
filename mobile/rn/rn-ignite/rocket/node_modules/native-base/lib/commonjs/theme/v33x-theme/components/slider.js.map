{"version":3,"sources":["slider.ts"],"names":["SliderTrack","baseStyle","isVertical","size","props","simplifiedColorScheme","bg","borderRadius","overflow","style","height","width","_pressable","alignItems","justifyContent","py","undefined","px","SliderThumb","zIndex","scaleOnPressed","SliderFilledTrack","orientation","isReversed","sliderTrackPosition","left","bottom","right","top","sizes","lg","thumbSize","sliderSize","md","sm","Slider","defaultProps"],"mappings":"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","sourcesContent":["import { getColorScheme, mode } from '../tools';\nexport const SliderTrack = {\n  baseStyle: ({ isVertical, size, ...props }: any) => {\n    const simplifiedColorScheme = getColorScheme(props);\n    return {\n      bg: `${simplifiedColorScheme}.100`,\n      borderRadius: 'lg',\n      overflow: 'hidden',\n      style: {\n        height: isVertical ? '100%' : size,\n        width: !isVertical ? '100%' : size,\n      },\n      _pressable: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: isVertical ? '100%' : size,\n        width: !isVertical ? '100%' : size,\n        py: !isVertical ? '3' : undefined,\n        px: isVertical ? '3' : undefined,\n      },\n    };\n  },\n};\n\nexport const SliderThumb = {\n  baseStyle: (props: any) => {\n    const simplifiedColorScheme = getColorScheme(props);\n    return {\n      borderRadius: 99999,\n      zIndex: 999,\n      alignItems: 'center',\n      justifyContent: 'center',\n      bg: mode(\n        `${simplifiedColorScheme}.600`,\n        `${simplifiedColorScheme}.300`\n      )(props),\n      scaleOnPressed: 1.2,\n    };\n  },\n};\n\nexport const SliderFilledTrack = {\n  baseStyle: ({\n    orientation,\n    isReversed,\n    sliderTrackPosition,\n    size,\n    ...props\n  }: any) => {\n    const simplifiedColorScheme = getColorScheme(props);\n    return {\n      bg: mode(\n        `${simplifiedColorScheme}.600`,\n        `${simplifiedColorScheme}.300`\n      )(props),\n      left: orientation !== 'vertical' && !isReversed ? 0 : undefined,\n      bottom: orientation === 'vertical' && !isReversed ? 0 : undefined,\n      right: orientation !== 'vertical' && isReversed ? 0 : undefined,\n      top: orientation === 'vertical' && isReversed ? 0 : undefined,\n      style:\n        orientation === 'vertical'\n          ? { height: sliderTrackPosition, width: size }\n          : { width: sliderTrackPosition, height: size },\n    };\n  },\n};\n\nconst sizes = {\n  lg: { thumbSize: 6, sliderSize: 6 },\n  md: { thumbSize: 5, sliderSize: 5 },\n  sm: { thumbSize: 4, sliderSize: 4 },\n};\n\nexport const Slider = {\n  baseStyle: (props: any) => {\n    return {\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: props.orientation === 'vertical' ? '100%' : undefined,\n      width: props.orientation !== 'vertical' ? '100%' : undefined,\n    };\n  },\n  defaultProps: {\n    size: 'sm',\n  },\n  sizes,\n};\n"]}