{"version":3,"sources":["Unordered.tsx"],"names":["UnorderedList","children","props","ref","_text","_hover","resolvedProps","React","Children","map","child","ind","cloneElement","index","ul","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;AAEA,MAAMA,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAAqCC,GAArC,KAAmD;AACvE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiB,OAAGC;AAApB,MAAsC,+BAAmB,MAAnB,EAA2BJ,KAA3B,CAA5C,CADuE,CAEvE;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD,GALsE,CAMvE;;;AACAD,EAAAA,QAAQ,GAAGM,eAAMC,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,EAA6B,CAACS,KAAD,EAAaC,GAAb,KAA6B;AACnE,wBAAOJ,eAAMK,YAAN,CACLF,KADK,EAEL;AACEG,MAAAA,KAAK,EAAEF,GADT;AAEEG,MAAAA,EAAE,EAAE,IAFN;AAGEV,MAAAA,KAAK,EAAEA,KAHT;AAIEC,MAAAA,MAJF;AAKE,SAAGK,KAAK,CAACR;AALX,KAFK,EASLQ,KAAK,CAACR,KAAN,CAAYD,QATP,CAAP;AAWD,GAZU,CAAX;AAcA,sBACE,6BAAC,aAAD,eAAYK,aAAZ;AAA2B,IAAA,GAAG,EAAEH;AAAhC,MACGF,QADH,CADF;AAKD,CA1BD;;4BA4BeM,eAAMQ,IAAN,eAAWR,eAAMS,UAAN,CAAiBhB,aAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { VStack } from '../Stack';\nimport type { IListProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst UnorderedList = ({ children, ...props }: IListProps, ref?: any) => {\n  const { _text, _hover, ...resolvedProps } = usePropsResolution('List', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  // add props to children\n  children = React.Children.map(children, (child: any, ind: number) => {\n    return React.cloneElement(\n      child,\n      {\n        index: ind,\n        ul: true,\n        _text: _text,\n        _hover,\n        ...child.props,\n      },\n      child.props.children\n    );\n  });\n\n  return (\n    <VStack {...resolvedProps} ref={ref}>\n      {children}\n    </VStack>\n  );\n};\n\nexport default React.memo(React.forwardRef(UnorderedList));\n"]}