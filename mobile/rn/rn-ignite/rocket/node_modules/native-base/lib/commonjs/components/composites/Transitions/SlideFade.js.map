{"version":3,"sources":["SlideFade.tsx"],"names":["SlideFade","children","props","ref","isDomUsable","in","animationState","duration","offsetX","offsetY","fadeAnim","React","useRef","Animated","Value","current","slideAnimX","slideAnimY","animIn","timing","toValue","useNativeDriver","Platform","OS","start","animOut","opacity","transform","translateX","translateY","memo","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { Animated, Platform } from 'react-native';\nimport type { ISlideFadeProps } from './types';\nimport { canUseDom } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SlideFade = ({ children, ...props }: ISlideFadeProps, ref?: any) => {\n  const isDomUsable = canUseDom();\n\n  const { in: animationState, duration, offsetX, offsetY } = useThemeProps(\n    'SlideFade',\n    props\n  );\n  const fadeAnim = React.useRef(new Animated.Value(0)).current;\n  const slideAnimX = React.useRef(new Animated.Value(0)).current;\n  const slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  const animIn = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n    }\n  };\n  const animOut = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      offsetX &&\n        Animated.timing(slideAnimX, {\n          toValue: offsetX,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n      offsetY &&\n        Animated.timing(slideAnimY, {\n          toValue: offsetY,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n    }\n  };\n  animationState ? animIn() : animOut();\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      style={[\n        {\n          opacity: fadeAnim,\n          transform: [{ translateX: slideAnimX, translateY: slideAnimY }],\n        },\n      ]}\n      ref={ref}\n    >\n      <Box {...props}>{children}</Box>\n    </Animated.View>\n  );\n};\n\nexport default React.memo(React.forwardRef(SlideFade));\n"]}