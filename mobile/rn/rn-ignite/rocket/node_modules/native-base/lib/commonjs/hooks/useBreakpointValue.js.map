{"version":3,"sources":["useBreakpointValue.ts"],"names":["useBreakpointValue","values","windowWidth","width","theme","breakpoints","currentBreakpoint"],"mappings":";;;;;;;AAAA;;AACA;;AAKA;;AAOO,SAASA,kBAAT,CAA4BC,MAA5B,EAA6D;AAAA;;AAClE,MAAIC,WAAW,2BAAG,uCAAH,yDAAG,qBAAuBC,KAAzC;AACA,QAAMC,KAAK,GAAG,yBAAd;;AAEA,MAAI,qCAAyBH,MAAzB,EAAiCG,KAAK,CAACC,WAAvC,CAAJ,EAAyD;AACvD,QAAIC,iBAAiB,GAAG,iCACtBF,KAAK,CAACC,WADgB,EAEtBH,WAFsB,CAAxB;AAIA,WAAO,oCACLD,MADK,EAELG,KAAK,CAACC,WAFD,EAGLC,iBAHK,CAAP;AAKD,GAVD,MAUO;AACL,WAAOL,MAAP;AACD;AACF","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport {\n  getClosestBreakpoint,\n  hasValidBreakpointFormat,\n  findLastValidBreakpoint,\n} from '../theme/tools';\nimport { useTheme } from './../hooks/useTheme';\nimport type { ITheme } from '../theme/index';\n\ntype UseBreakpointValueParam =\n  | { [key in keyof ITheme['breakpoints']]?: any }\n  | Array<any>;\n\nexport function useBreakpointValue(values: UseBreakpointValueParam) {\n  let windowWidth = useWindowDimensions()?.width;\n  const theme = useTheme();\n\n  if (hasValidBreakpointFormat(values, theme.breakpoints)) {\n    let currentBreakpoint = getClosestBreakpoint(\n      theme.breakpoints,\n      windowWidth\n    );\n    return findLastValidBreakpoint(\n      values,\n      theme.breakpoints,\n      currentBreakpoint\n    );\n  } else {\n    return values;\n  }\n}\n"]}