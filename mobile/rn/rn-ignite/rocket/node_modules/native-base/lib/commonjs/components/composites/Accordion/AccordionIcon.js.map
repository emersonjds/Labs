{"version":3,"sources":["AccordionIcon.tsx"],"names":["AccordionIcon","props","ref","isOpen","React","useContext","AccordionItemContext","newProps","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA,MAAMA,aAAa,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,EAAoCC,GAApC,KAAkD;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAyCC,eAAMC,UAAN,CAC7CC,6BAD6C,CAA/C;;AAGA,QAAM,EAAE,GAAGC;AAAL,MAAkB,0BAAc,eAAd,EAA+BN,KAA/B,CAAxB,CAJsE,CAKtE;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,SAAOE,MAAM,gBACX,6BAAC,oBAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KAAiCI,QAAjC;AAA2C,IAAA,GAAG,EAAEL;AAAhD,KADW,gBAGX,6BAAC,sBAAD,eAAqBK,QAArB;AAA+B,IAAA,GAAG,EAAEL;AAApC,KAHF;AAKD,CAdD;;4BAgBeE,eAAMI,IAAN,eAAWJ,eAAMK,UAAN,CAAiBT,aAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '../../primitives/Icon/Icons';\nimport type { IAccordionIconProps, IAccordionItemContextProps } from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionIcon = ({ ...props }: IAccordionIconProps, ref?: any) => {\n  const { isOpen }: IAccordionItemContextProps = React.useContext(\n    AccordionItemContext\n  );\n  const { ...newProps } = useThemeProps('AccordionIcon', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return isOpen ? (\n    <ChevronUpIcon color=\"white\" {...newProps} ref={ref} />\n  ) : (\n    <ChevronDownIcon {...newProps} ref={ref} />\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionIcon));\n"]}