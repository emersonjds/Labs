{"version":3,"sources":["index.tsx"],"names":["StyledView","RNView","View","props","ref","viewProps","safeAreaProps","React","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,UAAe,GAAG,iCAAoBC,iBAApB,CAAxB;;AAEA,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAoBC,GAApB,KAAiC;AAC5C,QAAMC,SAAS,GAAG,kCAAc,MAAd,EAAsBF,KAAtB,CAAlB;AACA,QAAMG,aAAa,GAAG,8BAAYD,SAAZ,CAAtB,CAF4C,CAG5C;;AACA,MAAI,kDAAsBF,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,6BAAC,UAAD,eAAgBG,aAAhB;AAA+B,IAAA,GAAG,EAAEF;AAApC,KAAP;AACD,CARD;;4BASeG,eAAMC,IAAN,eAAWD,eAAME,UAAN,CAAiBP,IAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { View as RNView } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { useSafeArea } from '../../../hooks/useSafeArea';\nimport type { IViewProps } from './types';\nconst StyledView: any = makeStyledComponent(RNView);\n\nconst View = (props: IViewProps, ref: any) => {\n  const viewProps = useThemeProps('View', props);\n  const safeAreaProps = useSafeArea(viewProps);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StyledView {...safeAreaProps} ref={ref} />;\n};\nexport default React.memo(React.forwardRef(View));\nexport type { IViewProps };\n"]}