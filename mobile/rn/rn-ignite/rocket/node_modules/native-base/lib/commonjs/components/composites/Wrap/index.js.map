{"version":3,"sources":["index.tsx"],"names":["Wrap","children","props","ref","space","newProps","React","Children","map","child","cloneElement","style","margin","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAEA,MAAMA,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAAqCC,GAArC,KAAmD;AAC9D,QAAM;AAAEC,IAAAA,KAAF;AAAS,OAAGC;AAAZ,MAAyB,0BAAc,MAAd,EAAsBH,KAAtB,CAA/B,CAD8D,CAG9D;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBACE,6BAAC,aAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAsBG,QAAtB;AAAgC,IAAA,GAAG,EAAEF;AAArC,MACG,qBAAMC,KAAN,IACGH,QADH,GAEGK,eAAMC,QAAN,CAAeC,GAAf,CAAmBP,QAAnB,EAA8BQ,KAAD,IAAgB;AAC3C,wBAAOH,eAAMI,YAAN,CACLD,KADK,EAEL,EAAE,GAAGP,KAAL;AAAYS,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAER;AAAV;AAAnB,KAFK,EAGLK,KAAK,CAACP,KAAN,CAAYD,QAHP,CAAP;AAKD,GAND,CAHN,CADF;AAaD,CArBD;;4BAuBeK,eAAMO,IAAN,eAAWP,eAAMQ,UAAN,CAAiBd,IAAjB,CAAX,C","sourcesContent":["import isNil from 'lodash.isnil';\nimport React from 'react';\nimport Flex from '../../primitives/Flex';\nimport type { IWrapProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Wrap = ({ children, ...props }: IWrapProps, ref?: any) => {\n  const { space, ...newProps } = useThemeProps('Wrap', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Flex wrap=\"wrap\" {...newProps} ref={ref}>\n      {isNil(space)\n        ? children\n        : React.Children.map(children, (child: any) => {\n            return React.cloneElement(\n              child,\n              { ...props, style: { margin: space } },\n              child.props.children\n            );\n          })}\n    </Flex>\n  );\n};\n\nexport default React.memo(React.forwardRef(Wrap));\nexport type { IWrapProps };\n"]}