{"version":3,"sources":["addTextAndPropsToStrings.tsx"],"names":["addTextAndPropsToStrings","children","props","childArray","React","Children","map","child","cloneElement"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,MAAMA,wBAAwB,GAAG,CAACC,QAAD,EAAgBC,KAAhB,KAA+B;AACrE,QAAMC,UAAU,GAAGC,eAAMC,QAAN,CAAeC,GAAf,CAAmBL,QAAnB,EAA8BM,KAAD,IAAW;AACzD,QAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;AAC1D,0BAAO,6BAAC,aAAD,EAAUL,KAAV,EAAkBK,KAAlB,CAAP;AACD,KAFD,MAEO;AACL,UAAI,CAACA,KAAL,EAAY;AACV,eAAO,IAAP;AACD;;AACD,0BAAOH,eAAMI,YAAN,CAAmBD,KAAnB,EAA0B,EAC/B,GAAGL,KAD4B;AAE/B,WAAGK,KAAK,CAACL;AAFsB,OAA1B,CAAP;AAID;AACF,GAZkB,CAAnB;;AAaA,SAAOC,UAAP;AACD,CAfM","sourcesContent":["import React from 'react';\nimport Text from '../components/primitives/Text';\n\nexport const addTextAndPropsToStrings = (children: any, props: any) => {\n  const childArray = React.Children.map(children, (child) => {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return <Text {...props}>{child}</Text>;\n    } else {\n      if (!child) {\n        return null;\n      }\n      return React.cloneElement(child, {\n        ...props,\n        ...child.props,\n      });\n    }\n  });\n  return childArray;\n};\n"]}