{"version":3,"sources":["AccordionSummary.tsx"],"names":["AccordionSummary","children","props","ref","index","isOpen","isDisabled","onOpen","onClose","React","useContext","AccordionItemContext","_hover","_expanded","_disabled","themedProps","pressHandler","_ref","useRef","isHovered","borderTopColor","Platform","OS","disabled","cursor","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,gBAAgB,GAAG,CACvB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CADuB,EAEvBC,GAFuB,KAGpB;AACH,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA;AALI,MAM0BC,eAAMC,UAAN,CAAiBC,6BAAjB,CANhC;;AAQA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,SAArB;AAAgC,OAAGC;AAAnC,MAAmD,0BACvD,kBADuD,EAEvDb,KAFuD,CAAzD;;AAIA,QAAMc,YAAY,GAAG,MAAM;AACzBX,IAAAA,MAAM,GAAGG,OAAO,IAAIA,OAAO,EAArB,GAA0BD,MAAM,IAAIA,MAAM,EAAhD;AACD,GAFD;;AAIA,QAAMU,IAAI,GAAGR,eAAMS,MAAN,CAAa,IAAb,CAAb;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgB,4BAAS,EAAT,EAAaF,IAAb,CAAtB,CAlBG,CAmBH;;AACA,MAAI,kDAAsBf,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,6BAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,QAAQ,EAAEI,UAFZ;AAGE,IAAA,OAAO,EAAEU,YAHX;AAIE,IAAA,UAAU,MAJZ;AAKE,IAAA,iBAAiB,EAAC,UALpB;AAME,IAAA,GAAG,EAAE,sBAAU,CAACb,GAAD,EAAMc,IAAN,CAAV;AANP,kBAQE,6BAAC,YAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,aAAa,EAAC,KAFhB;AAGE,IAAA,cAAc,EAAC,eAHjB;AAIE,IAAA,UAAU,EAAC;AAJb,KAKMF,WALN,EAMOI,SAAS,IAAIP,MANpB,EAOOP,MAAM,IAAIQ,SAPjB,EAQOP,UAAU,IAAIQ,SARrB,EASO,CAACV,KAAD,IAAU;AAAEgB,IAAAA,cAAc,EAAE;AAAlB,GATjB,EAUOC,sBAASC,EAAT,KAAgB,KAAhB,GACD;AACEC,IAAAA,QAAQ,EAAEjB,UADZ;AAEEkB,IAAAA,MAAM,EAAElB,UAAU,GAAG,aAAH,GAAmB;AAFvC,GADC,GAKD,EAfN,GAiBGL,QAjBH,CARF,CADF;AA8BD,CAxDD;;4BA0DeQ,eAAMgB,IAAN,eAAWhB,eAAMiB,UAAN,CAAiB1B,gBAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport Box from '../../primitives/Box';\nimport type {\n  IAccordionSummaryProps,\n  IAccordionItemContextProps,\n} from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionSummary = (\n  { children, ...props }: IAccordionSummaryProps,\n  ref: any\n) => {\n  const {\n    index,\n    isOpen,\n    isDisabled,\n    onOpen,\n    onClose,\n  }: IAccordionItemContextProps = React.useContext(AccordionItemContext);\n\n  const { _hover, _expanded, _disabled, ...themedProps } = useThemeProps(\n    'AccordionSummary',\n    props\n  );\n  const pressHandler = () => {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <TouchableOpacity\n      activeOpacity={0.2}\n      disabled={isDisabled}\n      onPress={pressHandler}\n      accessible\n      accessibilityRole=\"checkbox\"\n      ref={mergeRefs([ref, _ref])}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        {...themedProps}\n        {...(isHovered && _hover)}\n        {...(isOpen && _expanded)}\n        {...(isDisabled && _disabled)}\n        {...(!index && { borderTopColor: 'transparent' })}\n        {...(Platform.OS === 'web'\n          ? {\n              disabled: isDisabled,\n              cursor: isDisabled ? 'not-allowed' : 'auto',\n            }\n          : {})}\n      >\n        {children}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionSummary));\n"]}