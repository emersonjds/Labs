{"version":3,"sources":["index.tsx"],"names":["Kbd","children","props","ref","newProps","React","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAEA,MAAMA,GAAG,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAAoCC,GAApC,KAAkD;AAC5D,QAAMC,QAAQ,GAAG,0BAAc,KAAd,EAAqBF,KAArB,CAAjB,CAD4D,CAE5D;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,6BAAC,eAAD,eAASE,QAAT;AAAmB,IAAA,GAAG,EAAED;AAAxB,MACGF,QADH,CADF;AAKD,CAXD;;4BAaeI,eAAMC,IAAN,eAAWD,eAAME,UAAN,CAAiBP,GAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { IKbdProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Kbd = ({ children, ...props }: IKbdProps, ref?: any) => {\n  const newProps = useThemeProps('Kbd', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...newProps} ref={ref}>\n      {children}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Kbd));\nexport type { IKbdProps };\n"]}