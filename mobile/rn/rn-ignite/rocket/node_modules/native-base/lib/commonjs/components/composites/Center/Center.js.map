{"version":3,"sources":["Center.tsx"],"names":["Center","props","ref","resolvedProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,MAAM,GAAG,CAACC,KAAD,EAAsBC,GAAtB,KAAmC;AAChD,QAAMC,aAAa,GAAG,uCAAmB,QAAnB,EAA6BF,KAA7B,CAAtB,CADgD,CAEhD;;AACA,MAAI,kDAAsBA,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,6BAAC,YAAD;AAAK,IAAA,GAAG,EAAEC;AAAV,KAAmBC,aAAnB,EAAP;AACD,CAPD;;4BASe,+BAAK,uBAAWH,MAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from '../../primitives/Box';\nimport type { ICenterProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Center = (props: ICenterProps, ref: any) => {\n  const resolvedProps = usePropsResolution('Center', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box ref={ref} {...resolvedProps} />;\n};\n\nexport default memo(forwardRef(Center));\n"]}