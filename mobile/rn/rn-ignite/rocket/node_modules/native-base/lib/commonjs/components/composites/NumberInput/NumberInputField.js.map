{"version":3,"sources":["NumberInputField.tsx"],"names":["NumberInputFiled","isDisabled","props","ref","handleChange","handleChangeWithoutCheck","numberInputStepper","numberInputValue","isControlled","context","React","useContext","NumberInputContext","changeHandler","inputValue","minusIndex","indexOf","replace","value","parseInt","blurHandler","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;AAEA,MAAMA,gBAAgB,GAAG,CACvB;AAAEC,EAAAA,UAAF;AAAc,KAAGC;AAAjB,CADuB,EAEvBC,GAFuB,KAGpB;AACH,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,wBAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA,gBAJI;AAKJC,IAAAA,YALI;AAMJ,OAAGC;AANC,MAUFC,eAAMC,UAAN,CAAiBC,2BAAjB,CAVJ;;AAWA,QAAMC,aAAa,GAAIC,UAAD,IAAqB;AACzC,QAAIC,UAAU,GAAGD,UAAU,CAACE,OAAX,CAAmB,GAAnB,CAAjB;;AACA,QAAID,UAAU,KAAK,CAAC,CAAhB,IAAqBA,UAAU,KAAK,CAAxC,EAA2C;AACzCD,MAAAA,UAAU,GAAGA,UAAU,CAACG,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAb;AACAH,MAAAA,UAAU,GAAG,MAAMA,UAAnB;AACD;;AACD,UAAMI,KAAK,GAAGC,QAAQ,CAACL,UAAD,EAAa,EAAb,CAAtB;AACA,QAAIN,YAAJ,EAAkBJ,YAAY,IAAIA,YAAY,CAACc,KAAD,CAA5B,CAAlB,KACK,IAAIA,KAAJ,EAAWb,wBAAwB,IAAIA,wBAAwB,CAACa,KAAD,CAApD,CAAX,KACAb,wBAAwB,IAAIA,wBAAwB,CAAC,CAAD,CAApD;AACN,GAVD;;AAWA,QAAMe,WAAW,GAAG,MAAM;AACxB,QAAIb,gBAAJ,EAAsBH,YAAY,IAAIA,YAAY,CAACG,gBAAD,CAA5B;AACvB,GAFD,CAvBG,CA0BH;;;AACA,MAAI,kDAAsBL,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,yEACE,6BAAC,YAAD;AACE,IAAA,CAAC,EAAE,CADL;AAEE,IAAA,EAAE,EAAE;AAFN,KAGMO,OAHN,EAIMP,KAJN;AAKE,IAAA,MAAM,EAAE,MAAMkB,WAAW,EAL3B;AAME,IAAA,UAAU,EAAEnB,UAAU,IAAIQ,OAAO,CAACR,UANpC;AAOE,IAAA,YAAY,EAAGa,UAAD,IAAqBD,aAAa,CAACC,UAAD,CAPlD;AAQE,IAAA,YAAY,EAAC,SARf;AASE,IAAA,KAAK,YAAKP,gBAAL,CATP;AAUE,IAAA,iBAAiB,EAAED,kBAVrB;AAWE,IAAA,GAAG,EAAEH;AAXP,KADF,CADF;AAiBD,CAlDD;;4BAoDeO,eAAMW,IAAN,eAAWX,eAAMY,UAAN,CAAiBtB,gBAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { Input } from '../../primitives/Input';\nimport type { INumberInputContext, INumberInputFieldProps } from './types';\nimport { NumberInputContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberInputFiled = (\n  { isDisabled, ...props }: INumberInputFieldProps,\n  ref: any\n) => {\n  const {\n    handleChange,\n    handleChangeWithoutCheck,\n    numberInputStepper,\n    numberInputValue,\n    isControlled,\n    ...context\n  }: INumberInputContext & {\n    handleChange?: (value: string | number) => void;\n    numberInputStepper?: any;\n  } = React.useContext(NumberInputContext);\n  const changeHandler = (inputValue: any) => {\n    let minusIndex = inputValue.indexOf('-');\n    if (minusIndex !== -1 && minusIndex !== 0) {\n      inputValue = inputValue.replace('-', '');\n      inputValue = '-' + inputValue;\n    }\n    const value = parseInt(inputValue, 10);\n    if (isControlled) handleChange && handleChange(value);\n    else if (value) handleChangeWithoutCheck && handleChangeWithoutCheck(value);\n    else handleChangeWithoutCheck && handleChangeWithoutCheck(0);\n  };\n  const blurHandler = () => {\n    if (numberInputValue) handleChange && handleChange(numberInputValue);\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      <Input\n        p={0}\n        pl={2}\n        {...context}\n        {...props}\n        onBlur={() => blurHandler()}\n        isDisabled={isDisabled || context.isDisabled}\n        onChangeText={(inputValue: any) => changeHandler(inputValue)}\n        keyboardType=\"numeric\"\n        value={`${numberInputValue}`}\n        InputRightElement={numberInputStepper}\n        ref={ref}\n      />\n    </>\n  );\n};\n\nexport default React.memo(React.forwardRef(NumberInputFiled));\n"]}