{"version":3,"sources":["TabIcon.tsx"],"names":["TabIcon","props","ref","activeIconProps","inactiveIconProps","React","useContext","TabsContext","isSelected","TabContext","iconProps","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAoBC,GAApB,KAAkC;AAChD,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA;AAFI,MAGiBC,eAAMC,UAAN,CAAiBC,oBAAjB,CAHvB;;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAmCH,eAAMC,UAAN,CAAiBG,eAAjB,CAAzC;;AACA,QAAMC,SAAS,GAAGF,UAAU,GAAGL,eAAH,GAAqBC,iBAAjD,CANgD,CAOhD;;AACA,MAAI,kDAAsBH,KAAtB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,6BAAC,UAAD,eAAUS,SAAV,EAAyBT,KAAzB;AAAgC,IAAA,GAAG,EAAEC;AAArC,KAAP;AACD,CAZD;;4BAceG,eAAMM,IAAN,eAAWN,eAAMO,UAAN,CAAiBZ,OAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { Icon, IIconProps } from '../../primitives/Icon';\nimport type { ITabsContextProps, ITabContextProps } from './types';\nimport { TabsContext } from './Context';\nimport { TabContext } from './Tab';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst TabIcon = (props: IIconProps, ref?: any) => {\n  const {\n    activeIconProps,\n    inactiveIconProps,\n  }: ITabsContextProps = React.useContext(TabsContext);\n  const { isSelected }: ITabContextProps = React.useContext(TabContext);\n  const iconProps = isSelected ? activeIconProps : inactiveIconProps;\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Icon {...iconProps} {...props} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(TabIcon));\n"]}