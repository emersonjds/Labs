{"version":3,"sources":["propsFlattenerTest.tsx"],"names":["SPECIFICITY_100","SPECIFICITY_70","SPECIFICITY_60","SPECIFICITY_55","SPECIFICITY_50","SPECIFICITY_40","SPECIFICITY_30","SPECIFICITY_10","SPECIFICITY_1","specificityPrecedence","INITIAL_PROP_SPECIFICITY","pseudoPropsMap","_web","dependentOn","priority","_ios","_android","_light","_dark","_indeterminate","respondTo","_checked","_readOnly","_invalid","_focus","_focusVisible","_hover","_pressed","_disabled","compareSpecificity","exisiting","upcoming","ignorebaseTheme","condition","length","index","shouldResolvePseudoProp","property","state","platform","colormode","simplifyProps","props","currentSpecificity","previouslyFlattenProps","flattenProps","specificityMap","propertySpecity","includes","undefined","startsWith","propsFlattener","currentSpecificityMap"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge';\n\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30;\nconst SPECIFICITY_10 = 10;\nconst SPECIFICITY_1 = 1;\nconst specificityPrecedence = [\n  SPECIFICITY_100,\n  SPECIFICITY_70,\n  SPECIFICITY_60,\n  SPECIFICITY_55,\n  SPECIFICITY_50,\n  SPECIFICITY_40,\n  SPECIFICITY_30,\n  SPECIFICITY_10,\n  SPECIFICITY_1,\n];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_10]: 0,\n  [SPECIFICITY_1]: 0,\n};\n\nconst pseudoPropsMap: any = {\n  _web: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _ios: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _android: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n\n  _light: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n  _dark: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30,\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40,\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50,\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55,\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60,\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70,\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100,\n  },\n};\n\nexport const compareSpecificity = (\n  exisiting: any,\n  upcoming: any,\n  ignorebaseTheme?: boolean\n  // property?: any\n) => {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme\n    ? specificityPrecedence.length - 1\n    : specificityPrecedence.length;\n  for (let index = 0; index < condition; index++) {\n    if (\n      exisiting[specificityPrecedence[index]] >\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return false;\n    } else if (\n      exisiting[specificityPrecedence[index]] <\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return true;\n    }\n  }\n  return true;\n};\n\nconst shouldResolvePseudoProp = ({\n  property,\n  state,\n  platform,\n  colormode,\n}: any) => {\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === `_${platform}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === `_${colormode}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    return state[pseudoPropsMap[property].respondTo];\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificity,\n    previouslyFlattenProps,\n  }: any,\n  flattenProps: any = {},\n  specificityMap: any = {},\n  priority: number\n) => {\n  for (const property in props) {\n    // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n    const propertySpecity = currentSpecificity\n      ? { ...currentSpecificity }\n      : {\n          ...INITIAL_PROP_SPECIFICITY,\n          [SPECIFICITY_1]: priority,\n        };\n\n    if (\n      state[pseudoPropsMap[property]?.respondTo] ||\n      ['_dark', '_light', '_web', '_ios', '_android'].includes(property)\n    ) {\n      if (shouldResolvePseudoProp({ property, state, platform, colormode })) {\n        propertySpecity[pseudoPropsMap[property].priority]++;\n\n        simplifyProps(\n          {\n            props: props[property],\n            colormode,\n            platform,\n            state,\n            currentSpecificity: propertySpecity,\n            previouslyFlattenProps: previouslyFlattenProps,\n          },\n          flattenProps,\n          specificityMap,\n          priority\n        );\n      }\n    } else if (state[pseudoPropsMap[property]?.respondTo] === undefined) {\n      if (property.startsWith('_')) {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          specificityMap[property] = propertySpecity;\n          // merging internal props (like, _text, _checked, ...)\n          flattenProps[property] = merge(\n            {},\n            flattenProps[property],\n            props[property]\n          );\n        } else {\n          flattenProps[property] = merge(\n            {},\n            props[property],\n            flattenProps[property]\n          );\n        }\n      } else {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          specificityMap[property] = propertySpecity;\n          // replacing simple props (like, p, m, bg, color, ...)\n          flattenProps[property] = props[property];\n        }\n      }\n    }\n  }\n};\n\nexport const propsFlattener = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n  }: any,\n  priority: number\n) => {\n  const flattenProps: any = {};\n\n  for (const property in props) {\n    if (\n      state[pseudoPropsMap[property]?.respondTo] === undefined &&\n      property.startsWith('_')\n    ) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {};\n\n  // STEP 1.a (if): Check weather it should be recursively resolved\n  // NOTE: (when true) recursively resolved it\n  // STEP 1.b (else if): Check specificty\n  // STEP 1.b.i: Check for pseudo props\n  // NOTE: (when true) Merge it.\n  // NOTE: (when false) Replace it.\n\n  simplifyProps(\n    {\n      props,\n      colormode,\n      platform,\n      state,\n      currentSpecificityMap,\n      previouslyFlattenProps,\n    },\n    flattenProps,\n    specificityMap,\n    priority\n  );\n\n  return [flattenProps, specificityMap];\n};\n"]}