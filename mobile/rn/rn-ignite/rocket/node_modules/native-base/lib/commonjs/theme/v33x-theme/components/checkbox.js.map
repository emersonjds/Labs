{"version":3,"sources":["checkbox.ts"],"names":["baseStyle","props","colorScheme","theme","justifyContent","flexDirection","borderWidth","borderRadius","borderColor","bg","opacity","_web","cursor","_stack","direction","alignItems","space","isDisabled","_text","ml","color","_interactionBox","position","p","w","h","zIndex","transition","pointerEvents","_hover","_focus","_focusVisible","_disabled","_pressed","_checked","_invalid","_icon","sizes","lg","size","fontSize","md","sm","defaultProps","defaultIsChecked"],"mappings":"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","sourcesContent":["import { mode, transparentize } from '../tools';\n\nconst baseStyle = (props: Record<string, any>) => {\n  const { colorScheme, theme } = props;\n\n  return {\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    borderWidth: 2,\n    borderRadius: 'sm',\n    borderColor: mode('muted.300', 'muted.600')(props),\n    bg: mode('muted.50', 'muted.700')(props), // matching background color\n    opacity: 1,\n    _web: {\n      cursor: 'pointer',\n    },\n    _stack: {\n      direction: 'row',\n      alignItems: 'center',\n      space: 2,\n      _web: {\n        cursor: props.isDisabled ? 'not-allowed' : 'pointer',\n      },\n    },\n    _text: {\n      ml: 2,\n      color: mode('darkText', 'lightText')(props),\n    },\n    _interactionBox: {\n      position: 'absolute',\n      borderRadius: 'full',\n      p: 5,\n      w: '100%',\n      h: '100%',\n      zIndex: -1,\n      _web: {\n        transition: 'height 200ms, width 200ms',\n        pointerEvents: 'none',\n      },\n    },\n    _hover: {\n      _interactionBox: {\n        bg: transparentize('muted.200', 0.3)(theme),\n      },\n    },\n    _focus: {\n      _interactionBox: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n    },\n    _focusVisible: {\n      _interactionBox: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n    },\n    _disabled: {\n      _interactionBox: {\n        bg: 'transparent',\n      },\n      _web: {\n        cursor: 'not-allowed',\n      },\n      opacity: 0.4,\n    },\n    _pressed: {\n      _interactionBox: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n    },\n    _checked: {\n      borderColor: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props),\n      bg: mode(`${colorScheme}.600`, `${colorScheme}.300`)(props),\n    },\n    _invalid: {\n      borderColor: mode('error.600', 'error.400')(props),\n    },\n    _icon: {\n      color: mode(`muted.50`, `muted.800`)(props), // matching background color\n    },\n  };\n};\n\nconst sizes = {\n  lg: { _icon: { size: 6 }, _text: { fontSize: 'xl' } },\n  md: { _icon: { size: 5 }, _text: { fontSize: 'lg' } },\n  sm: { _icon: { size: 4 }, _text: { fontSize: 'md' } },\n};\n\nconst defaultProps = {\n  defaultIsChecked: false,\n  size: 'sm',\n  colorScheme: 'primary',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]}