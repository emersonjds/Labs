{"version":3,"sources":["filterShadowProps.ts"],"names":["filterShadowProps","props","ignoredProps","OS","style","shadowProps","remainingProps"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,MAAMA,iBAAiB,GAAG,CAC/BC,KAD+B,EAE/BC,YAF+B,EAG/BC,EAH+B,KAI5B;AAAA;;AACH,MAAIA,EAAE,KAAK,KAAX,EAAkB;AAChB,WAAO,EAAE,GAAGD,YAAL;AAAmB,SAAGD;AAAtB,KAAP;AACD;;AACD,MAAIG,KAAK,0BAAGF,YAAY,CAACE,KAAhB,qEAAyB,EAAlC;AACA,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgC,4BAAgBL,KAAhB,EAAuB,CACzD,aADyD,EAEzD,cAFyD,EAGzD,eAHyD,EAIzD,cAJyD,CAAvB,CAApC;;AAMA,MAAI,CAAC,qBAAQI,WAAR,CAAL,EAA2B;AACzBD,IAAAA,KAAK,GAAG,EAAE,GAAGA,KAAL;AAAY,SAAGC;AAAf,KAAR;AACD;;AACD,SAAO,EAAE,GAAGC,cAAL;AAAqB,OAAGJ,YAAxB;AAAsCE,IAAAA;AAAtC,GAAP;AACD,CAnBM","sourcesContent":["import { extractInObject } from './../theme/tools/';\nimport isEmpty from 'lodash.isempty';\n\nexport const filterShadowProps = (\n  props: any,\n  ignoredProps: any,\n  OS: string\n) => {\n  if (OS !== 'web') {\n    return { ...ignoredProps, ...props };\n  }\n  let style = ignoredProps.style ?? {};\n  let [shadowProps, remainingProps] = extractInObject(props, [\n    'shadowColor',\n    'shadowOffset',\n    'shadowOpacity',\n    'shadowRadius',\n  ]);\n  if (!isEmpty(shadowProps)) {\n    style = { ...style, ...shadowProps };\n  }\n  return { ...remainingProps, ...ignoredProps, style };\n};\n"]}