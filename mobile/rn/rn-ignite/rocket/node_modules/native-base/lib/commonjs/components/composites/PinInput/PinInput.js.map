{"version":3,"sources":["PinInput.tsx"],"names":["PinInput","children","props","ref","padding","remProps","themeTools","extractInObject","manageFocus","defaultValue","value","space","onChange","newProps","formControlContext","RefList","setRefList","index","pinInputValue","setPinInputValue","React","useState","handleChange","newValue","fieldIndex","temp","undefined","join","current","focus","length","handleMultiValueChange","pinFieldLength","newValueLength","splicedValue","splice","Platform","OS","filter","_n","i","JSON","stringify","parseInt","indexSetter","allChildren","pinInputFiledCounter","Children","map","child","cloneElement","useEffect","memo","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { HStack } from '../../primitives/Stack';\nimport { useThemeProps } from '../../../hooks';\nimport type { IPinInputProps } from './types';\nimport { useFormControlContext } from '../FormControl';\nimport { Platform } from 'react-native';\nimport { PinInputContext } from './Context';\nimport { themeTools } from '../../../theme';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PinInput = ({ children, ...props }: IPinInputProps, ref?: any) => {\n  let [padding, remProps] = themeTools.extractInObject(props, [\n    'p',\n    'px',\n    'py',\n    'pt',\n    'pb',\n    'pl',\n    'pr',\n  ]);\n  const {\n    manageFocus,\n    defaultValue,\n    value,\n    space,\n    onChange,\n    ...newProps\n  } = useThemeProps('PinInput', remProps);\n  const formControlContext = useFormControlContext();\n\n  const RefList: Array<any> = [];\n  const setRefList = (ref: any, index: number) => {\n    RefList[index] = ref;\n  };\n  const [pinInputValue, setPinInputValue] = React.useState(\n    value || defaultValue\n  );\n\n  const handleChange = (newValue: string, fieldIndex: number) => {\n    let temp = (pinInputValue && [...pinInputValue]) || [];\n    temp[fieldIndex] = newValue;\n    value === undefined && setPinInputValue(temp.join(''));\n    onChange && onChange(temp.join(''));\n    if (newValue === '' && manageFocus && fieldIndex - 1 > -1)\n      RefList[fieldIndex - 1].current.focus();\n    else if (newValue && manageFocus && fieldIndex + 1 < RefList.length)\n      RefList[fieldIndex + 1].current.focus();\n    return temp.join('');\n  };\n  const handleMultiValueChange = (newValue: string, fieldIndex: number) => {\n    const pinFieldLength = RefList.length;\n    const newValueLength = newValue.length;\n    if (newValueLength >= pinFieldLength && newValueLength > 2) {\n      let splicedValue = newValue ? [...newValue] : [];\n      splicedValue.splice(pinFieldLength);\n      RefList[pinFieldLength - 1].current.focus();\n      setPinInputValue(splicedValue.join(''));\n      onChange && onChange(splicedValue.join(''));\n    }\n\n    if (Platform.OS !== 'ios') {\n      let temp = pinInputValue ? [...pinInputValue] : [];\n      if (newValue === '') {\n        // Handling Backward focus.\n        temp = temp.filter((_n, i) => i !== fieldIndex);\n        if (manageFocus && fieldIndex - 1 > -1)\n          RefList[fieldIndex - 1].current.focus();\n      } else {\n        temp[fieldIndex] = JSON.stringify(parseInt(newValue, 10) % 10);\n        if (manageFocus && fieldIndex + 1 < RefList.length)\n          RefList[fieldIndex + 1].current.focus();\n      }\n      value === undefined && setPinInputValue(temp.join(''));\n      onChange && onChange(temp.join(''));\n    }\n  };\n\n  const indexSetter = (allChildren: JSX.Element | JSX.Element[]) => {\n    let pinInputFiledCounter = -1;\n    return React.Children.map(allChildren, (child: JSX.Element) => {\n      pinInputFiledCounter++;\n      return React.cloneElement(\n        child,\n        {\n          fieldIndex: pinInputFiledCounter,\n        },\n        child.props.children\n      );\n    });\n  };\n\n  React.useEffect(() => {\n    if (value !== undefined && value != pinInputValue) setPinInputValue(value);\n  }, [value, pinInputValue, setPinInputValue]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <PinInputContext.Provider\n      value={{\n        ...formControlContext,\n        ...newProps,\n        setRefList,\n        handleChange,\n        handleMultiValueChange,\n        value: pinInputValue,\n      }}\n    >\n      {children && (\n        <HStack flexDirection=\"row\" space={space} {...padding} ref={ref}>\n          {indexSetter(children)}\n        </HStack>\n      )}\n    </PinInputContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(PinInput));\n"]}