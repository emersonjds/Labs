{"version":3,"sources":["RadioGroup.tsx"],"names":["React","memo","forwardRef","Stack","useFormControlContext","useRadioGroupState","useRadioGroup","useHasResponsiveProps","usePropsResolution","RadioContext","createContext","RadioWrapper","props","resolvedProps","radioGroupProps","RadioGroup","size","colorScheme","_radio","children","ref","formControlContext","state","radioGroupState","accessibilityLabel","propsState","useState","contextValue","useMemo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AAEA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AAEA,OAAO,MAAMC,YAAY,gBAAGT,KAAK,CAACU,aAAN,CAC1B,EAD0B,CAArB;AAGP,MAAMC,YAAY,gBAAGV,IAAI,CAAEW,KAAD,IAAgB;AACxC,QAAMC,aAAa,GAAGL,kBAAkB,CAAC,YAAD,EAAeI,KAAf,CAAxC;AACA,sBAAO,oBAAC,KAAD,eAAWC,aAAX,EAA8BD,KAAK,CAACE,eAApC,EAAyDF,KAAzD,EAAP;AACD,CAHwB,CAAzB;;AAKA,MAAMG,UAAU,GAAG,CACjB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,MAArB;AAA6BC,EAAAA,QAA7B;AAAuC,KAAGP;AAA1C,CADiB,EAEjBQ,GAFiB,KAGd;AACH,QAAMC,kBAAkB,GAAGjB,qBAAqB,EAAhD;AAEA,QAAMkB,KAAK,GAAGjB,kBAAkB,CAACO,KAAD,CAAhC;AACA,QAAMW,eAAe,GAAGjB,aAAa,CACnC,EAAE,GAAGe,kBAAL;AAAyB,OAAGT,KAA5B;AAAmC,kBAAcA,KAAK,CAACY;AAAvD,GADmC,EAEnCF,KAFmC,CAArC;AAIA,QAAM,CAACG,UAAD,IAAezB,KAAK,CAAC0B,QAAN,CAAed,KAAf,CAArB;AACA,QAAMe,YAAiB,GAAG3B,KAAK,CAAC4B,OAAN,CAAc,MAAM;AAC5C,WAAO;AACLP,MAAAA,kBADK;AAELL,MAAAA,IAFK;AAGLC,MAAAA,WAHK;AAIL,SAAGC,MAJE;AAKLI,MAAAA;AALK,KAAP;AAOD,GARyB,EAQvB,CAACN,IAAD,EAAOC,WAAP,EAAoBI,kBAApB,EAAwCC,KAAxC,EAA+CJ,MAA/C,CARuB,CAA1B;AAUA,QAAMJ,eAAe,GAAGd,KAAK,CAAC4B,OAAN,CACtB,MAAML,eAAe,CAACT,eADA,EAEtB;AACA,IAHsB,CAAxB,CAnBG,CAyBH;;AACA,MAAIP,qBAAqB,CAAC,EAAE,GAAGK,KAAL;AAAYI,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,GAAD,CAAzB,EAA4D;AAC1D,WAAO,IAAP;AACD;;AAED,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEU;AAA9B,kBACE,oBAAC,YAAD,eAAkBb,eAAlB,EAAuCW,UAAvC;AAAmD,IAAA,GAAG,EAAEL;AAAxD,MACGD,QADH,CADF,CADF;AAOD,CAxCD;;AA0CA,4BAAelB,IAAI,eAACC,UAAU,CAACa,UAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Stack } from '../Stack';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport type { IRadioContext, IRadioGroupProps } from './types';\nimport { useRadioGroupState } from '@react-stately/radio';\nimport { useRadioGroup } from '@react-native-aria/radio';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\n\nexport const RadioContext = React.createContext<IRadioContext>(\n  {} as IRadioContext\n);\nconst RadioWrapper = memo((props: any) => {\n  const resolvedProps = usePropsResolution('RadioGroup', props);\n  return <Stack {...resolvedProps} {...props.radioGroupProps} {...props} />;\n});\n\nconst RadioGroup = (\n  { size, colorScheme, _radio, children, ...props }: IRadioGroupProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n\n  const state = useRadioGroupState(props);\n  const radioGroupState = useRadioGroup(\n    { ...formControlContext, ...props, 'aria-label': props.accessibilityLabel },\n    state\n  );\n  const [propsState] = React.useState(props);\n  const contextValue: any = React.useMemo(() => {\n    return {\n      formControlContext,\n      size,\n      colorScheme,\n      ..._radio,\n      state,\n    };\n  }, [size, colorScheme, formControlContext, state, _radio]);\n\n  const radioGroupProps = React.useMemo(\n    () => radioGroupState.radioGroupProps,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps({ ...props, size, colorScheme })) {\n    return null;\n  }\n\n  return (\n    <RadioContext.Provider value={contextValue}>\n      <RadioWrapper {...radioGroupProps} {...propsState} ref={ref}>\n        {children}\n      </RadioWrapper>\n    </RadioContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(RadioGroup));\n"]}