{"version":3,"sources":["useBreakpointResolvedProps.ts"],"names":["React","useNativeBaseConfig","resolveValueWithBreakpoint","useTheme","useBreakpointResolvedProps","props","currentBreakpoint","theme","newProps","useMemo","key","rawValue","value","breakpoints"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,0BAAT,QAA2C,uBAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAUA,OAAO,MAAMC,0BAA0B,GAAIC,KAAD,IAAmB;AAC3D,QAAMC,iBAAiB,GAAGL,mBAAmB,CAAC,4BAAD,CAAnB,CACvBK,iBADH;AAEA,QAAMC,KAAK,GAAGJ,QAAQ,EAAtB;AACA,QAAMK,QAAmB,GAAGR,KAAK,CAACS,OAAN,CAAc,MAAM;AAC9C,QAAID,QAAmB,GAAG,EAA1B;;AACA,SAAK,IAAIE,GAAT,IAAgBL,KAAhB,EAAuB;AACrB,YAAMM,QAAQ,GAAGN,KAAK,CAACK,GAAD,CAAtB;AACA,YAAME,KAAK,GAAGV,0BAA0B,CACtCS,QADsC,EAEtCJ,KAAK,CAACM,WAFgC,EAGtCP,iBAHsC,EAItCI,GAJsC,CAAxC;AAMAF,MAAAA,QAAQ,CAACE,GAAD,CAAR,GAAgBE,KAAhB;AACD;;AACD,WAAOJ,QAAP;AACD,GAb2B,EAazB,CAACH,KAAD,EAAQC,iBAAR,EAA2BC,KAAK,CAACM,WAAjC,CAbyB,CAA5B;AAeA,SAAOL,QAAP;AACD,CApBM","sourcesContent":["import React from 'react';\nimport type { ResponsiveValue } from '../components/types';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { resolveValueWithBreakpoint } from './useThemeProps/utils';\nimport { useTheme } from './../hooks/useTheme';\n\ntype IProps = {\n  [key: string]: ResponsiveValue<number | string>;\n};\n\ntype INewProps = {\n  [key: string]: number | string;\n};\n\nexport const useBreakpointResolvedProps = (props: IProps) => {\n  const currentBreakpoint = useNativeBaseConfig('useBreakpointResolvedProps')\n    .currentBreakpoint;\n  const theme = useTheme();\n  const newProps: INewProps = React.useMemo(() => {\n    let newProps: INewProps = {};\n    for (let key in props) {\n      const rawValue = props[key];\n      const value = resolveValueWithBreakpoint(\n        rawValue,\n        theme.breakpoints,\n        currentBreakpoint,\n        key\n      );\n      newProps[key] = value;\n    }\n    return newProps;\n  }, [props, currentBreakpoint, theme.breakpoints]);\n\n  return newProps;\n};\n"]}