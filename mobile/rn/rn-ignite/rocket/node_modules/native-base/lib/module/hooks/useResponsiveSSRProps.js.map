{"version":3,"sources":["useResponsiveSSRProps.ts"],"names":["useEffect","useState","useTheme","useNativeBaseConfig","isResponsiveAnyProp","useResponsiveSSRProps","incomingProps","modified","setModified","theme","responsivePropsExists","isSSR","modifiedProps","key","Math","random"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,mBAAT,QAAoC,gBAApC;AAEA,OAAO,SAASC,qBAAT,CAA+BC,aAA/B,EAAmD;AACxD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMQ,KAAK,GAAGP,QAAQ,EAAtB;AAEA,QAAMQ,qBAAqB,GAAGN,mBAAmB,CAACE,aAAD,EAAgBG,KAAhB,CAAjD;AACA,QAAME,KAAK,GAAGR,mBAAmB,CAAC,4BAAD,CAAnB,CAAkDQ,KAAhE;AAEA,MAAIC,aAAa,GAAGN,aAApB;;AACA,MAAII,qBAAqB,IAAIC,KAAzB,IAAkC,CAACJ,QAAvC,EAAiD;AAC/CK,IAAAA,aAAa,GAAG,EAAE,GAAGA,aAAL;AAAoBC,MAAAA,GAAG,EAAEC,IAAI,CAACC,MAAL;AAAzB,KAAhB;AACD;;AACDf,EAAAA,SAAS,CAAC,MAAW;AACnB,QAAIU,qBAAqB,IAAIC,KAA7B,EAAoC;AAClCH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAJQ,EAIN,CAACE,qBAAD,EAAwBC,KAAxB,CAJM,CAAT;AAMA,SAAOC,aAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTheme } from '../hooks/useTheme';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../theme/tools';\n\nexport function useResponsiveSSRProps(incomingProps: any) {\n  const [modified, setModified] = useState(false);\n  const theme = useTheme();\n\n  const responsivePropsExists = isResponsiveAnyProp(incomingProps, theme);\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n\n  let modifiedProps = incomingProps;\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = { ...modifiedProps, key: Math.random() };\n  }\n  useEffect((): any => {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n\n  return modifiedProps;\n}\n"]}