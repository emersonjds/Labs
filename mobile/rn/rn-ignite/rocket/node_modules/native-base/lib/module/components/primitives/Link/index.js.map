{"version":3,"sources":["index.tsx"],"names":["React","memo","forwardRef","Platform","Box","Text","usePropsResolution","useLink","mergeRefs","Pressable","useHover","useHasResponsiveProps","Link","isHovered","isHoveredProp","props","ref","_ref","useRef","isUnderlined","children","_text","href","onPress","isExternal","resolvedProps","linkProps","linkTextProps","textDecorationLine","OS","Children","map","child"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,aAAb;AAA4B,KAAGC;AAA/B,CAAD,EAAqDC,GAArD,KAAkE;AAC7E,QAAMC,IAAI,GAAGjB,KAAK,CAACkB,MAAN,CAAa,IAAb,CAAb;;AACA,QAAM;AAAEL,IAAAA;AAAF,MAAgBH,QAAQ,CAAC,EAAD,EAAKO,IAAL,CAA9B;AACA,QAAM;AACJE,IAAAA,YADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,UANI;AAOJ,OAAGC;AAPC,MAQFnB,kBAAkB,CAAC,MAAD,EAASS,KAAT,EAAgB;AACpCF,IAAAA,SAAS,EAAEC,aAAa,IAAID;AADQ,GAAhB,CARtB;AAWA,QAAM;AAAEa,IAAAA;AAAF,MAAgBnB,OAAO,CAAC;AAAEe,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,UAAjB;AAA6BP,IAAAA;AAA7B,GAAD,CAA7B;AAEA,QAAMU,aAAa,GAAG;AACpBC,IAAAA,kBAAkB,EAAET,YAAY,GAAG,WAAH,GAAiB,MAD7B;AAEpB,OAAGE;AAFiB,GAAtB,CAhB6E,CAoB7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIV,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,0CAEGZ,QAAQ,CAAC0B,EAAT,KAAgB,KAAhB,gBACC,oBAAC,GAAD,eACMH,SADN,EAEMD,aAFN;AAGE,IAAA,KAAK,EAAEE,aAHT;AAIE,IAAA,GAAG,EAAEnB,SAAS,CAAC,CAACQ,GAAD,EAAMC,IAAN,CAAD,CAJhB;AAKE,IAAA,aAAa,EAAC;AALhB,MAOGG,QAPH,CADD,gBAWC,oBAAC,SAAD,eACMM,SADN,EAEMD,aAFN;AAGE,IAAA,GAAG,EAAET,GAHP;AAIE,IAAA,aAAa,EAAC;AAJhB,MAMGhB,KAAK,CAAC8B,QAAN,CAAeC,GAAf,CAAmBX,QAAnB,EAA8BY,KAAD,IAC5B,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAA9C,gBACE,oBAAC,IAAD,eAAUP,aAAa,CAACJ,KAAxB,EAAmCM,aAAnC,GACGK,KADH,CADF,GAKEA,KANH,CANH,CAbJ,CADF;AAiCD,CAlED;;AAoEA,4BAAe/B,IAAI,eAACC,UAAU,CAACU,IAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport type { ILinkProps } from './types';\nimport Box from '../Box';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks';\nimport { useLink } from './useLink';\nimport { mergeRefs } from '../../../utils';\nimport { Pressable } from '../Pressable';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Link = ({ isHovered: isHoveredProp, ...props }: ILinkProps, ref: any) => {\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  const {\n    isUnderlined,\n    children,\n    _text,\n    href,\n    onPress,\n    isExternal,\n    ...resolvedProps\n  } = usePropsResolution('Link', props, {\n    isHovered: isHoveredProp || isHovered,\n  });\n  const { linkProps } = useLink({ href, onPress, isExternal, _ref });\n\n  const linkTextProps = {\n    textDecorationLine: isUnderlined ? 'underline' : 'none',\n    ..._text,\n  };\n  // function getHoverProps() {\n  //   let hoverTextProps = {\n  //     ...linkTextProps,\n  //     ..._hover?._text,\n  //   };\n  //   return {\n  //     ...hoverTextProps,\n  //   };\n  // }\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      {/* On web we render Link in anchor tag */}\n      {Platform.OS === 'web' ? (\n        <Box\n          {...linkProps}\n          {...resolvedProps}\n          _text={linkTextProps}\n          ref={mergeRefs([ref, _ref])}\n          flexDirection=\"row\"\n        >\n          {children}\n        </Box>\n      ) : (\n        <Pressable\n          {...linkProps}\n          {...resolvedProps}\n          ref={ref}\n          flexDirection=\"row\"\n        >\n          {React.Children.map(children, (child) =>\n            typeof child === 'string' || typeof child === 'number' ? (\n              <Text {...resolvedProps._text} {...linkTextProps}>\n                {child}\n              </Text>\n            ) : (\n              child\n            )\n          )}\n        </Pressable>\n      )}\n    </>\n  );\n};\n\nexport default memo(forwardRef(Link));\nexport type { ILinkProps };\n"]}