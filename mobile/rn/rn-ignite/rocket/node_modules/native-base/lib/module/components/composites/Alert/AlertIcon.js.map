{"version":3,"sources":["AlertIcon.tsx"],"names":["React","memo","forwardRef","Box","WarningIcon","WarningTwoIcon","InfoIcon","CheckCircleIcon","usePropsResolution","AlertContext","omitUndefined","useHasResponsiveProps","AlertIcon","children","props","ref","newProps","status","_icon","useContext","getIcon"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,eAJF,QAKO,6BALP;AAOA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAA0CC,GAA1C,KAAwD;AACxE,MAAIC,QAAQ,GAAGR,kBAAkB,CAAC,WAAD,EAAcM,KAAd,CAAjC;AACAE,EAAAA,QAAQ,GAAGN,aAAa,CAACM,QAAD,CAAxB;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmClB,KAAK,CAACmB,UAAN,CAAiBV,YAAjB,CAAzC;;AACA,QAAMW,OAAO,GAAG,MAAM;AACpB,YAAQH,MAAR;AACE,WAAK,OAAL;AACE,4BAAO,oBAAC,cAAD,eAAoBC,KAApB,EAA+BF,QAA/B;AAAyC,UAAA,GAAG,EAAED;AAA9C,WAAP;;AACF,WAAK,SAAL;AACE,4BAAO,oBAAC,WAAD,eAAiBG,KAAjB,EAA4BF,QAA5B;AAAsC,UAAA,GAAG,EAAED;AAA3C,WAAP;;AACF,WAAK,SAAL;AACE,4BAAO,oBAAC,eAAD,eAAqBG,KAArB,EAAgCF,QAAhC;AAA0C,UAAA,GAAG,EAAED;AAA/C,WAAP;;AACF;AACE,4BAAO,oBAAC,QAAD,eAAcG,KAAd,EAAyBF,QAAzB;AAAmC,UAAA,GAAG,EAAED;AAAxC,WAAP;AARJ;AAUD,GAXD,CAJwE,CAgBxE;;;AACA,MAAIJ,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,oBAAC,GAAD,QAAMD,QAAQ,IAAIO,OAAO,EAAzB,CAAP;AACD,CArBD;;AAsBA,4BAAenB,IAAI,eAACC,UAAU,CAACU,SAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box } from '../../primitives';\nimport {\n  WarningIcon,\n  WarningTwoIcon,\n  InfoIcon,\n  CheckCircleIcon,\n} from '../../primitives/Icon/Icons';\nimport type { IAlertContext, IAlertIconProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { AlertContext } from './Context';\nimport { omitUndefined } from '../../../theme/tools/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AlertIcon = ({ children, ...props }: IAlertIconProps, ref?: any) => {\n  let newProps = usePropsResolution('AlertIcon', props);\n  newProps = omitUndefined(newProps);\n  const { status, _icon }: IAlertContext = React.useContext(AlertContext);\n  const getIcon = () => {\n    switch (status) {\n      case 'error':\n        return <WarningTwoIcon {..._icon} {...newProps} ref={ref} />;\n      case 'warning':\n        return <WarningIcon {..._icon} {...newProps} ref={ref} />;\n      case 'success':\n        return <CheckCircleIcon {..._icon} {...newProps} ref={ref} />;\n      default:\n        return <InfoIcon {..._icon} {...newProps} ref={ref} />;\n    }\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box>{children || getIcon()}</Box>;\n};\nexport default memo(forwardRef(AlertIcon));\n"]}