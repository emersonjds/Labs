{"version":3,"sources":["useStyledSystemPropsResolver.ts"],"names":["getStyleAndFilteredProps","propConfig","useTheme","React","useNativeBaseConfig","useResponsiveQuery","stableHash","getStyledSystemPropsAndRestProps","props","styledSystemProps","restProps","key","useStyledSystemPropsResolver","style","propStyle","debug","theme","currentBreakpoint","config","strictMode","getResponsiveStyles","dataSet","useMemo","styleSheet","box","process","env","NODE_ENV","console","log"],"mappings":"AAAA,SAASA,wBAAT,EAAmCC,UAAnC,QAAqD,wBAArD;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,kBAAT,QAAmC,6BAAnC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAEA,MAAMC,gCAAgC,GAAIC,KAAD,IAAgB;AACvD,QAAMC,iBAAsB,GAAG,EAA/B;AACA,QAAMC,SAAc,GAAG,EAAvB;;AAEA,OAAK,IAAIC,GAAT,IAAgBH,KAAhB,EAAuB;AACrB,QAAIG,GAAG,IAAIV,UAAX,EAAuB;AACrBQ,MAAAA,iBAAiB,CAACE,GAAD,CAAjB,GAAyBH,KAAK,CAACG,GAAD,CAA9B;AACD,KAFD,MAEO;AACLD,MAAAA,SAAS,CAACC,GAAD,CAAT,GAAiBH,KAAK,CAACG,GAAD,CAAtB;AACD;AACF;;AAED,SAAO;AAAEF,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,GAAP;AACD,CAbD;;AAeA,OAAO,MAAME,4BAA4B,GAAG,CAAC;AAC3CC,EAAAA,KAAK,EAAEC,SADoC;AAE3CC,EAAAA,KAF2C;AAG3C,KAAGP;AAHwC,CAAD,KAIjC;AACT,QAAMQ,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAM;AAAEe,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAgCd,mBAAmB,CACvD,qBADuD,CAAzD;AAGA,QAAMe,UAAU,GAAGD,MAAM,CAACC,UAA1B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAA0Bf,kBAAkB,EAAlD;AAEA,QAAM;AAAEI,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAmCH,gCAAgC,CACvEC,KADuE,CAAzE;AAIA,QAAM;AAAEK,IAAAA,KAAF;AAASQ,IAAAA;AAAT,MAAqBlB,KAAK,CAACmB,OAAN,CAAc,MAAM;AAC7C,UAAM;AAAEC,MAAAA,UAAF;AAAcF,MAAAA;AAAd,QAA0BrB,wBAAwB,CAAC;AACvDS,MAAAA,iBADuD;AAEvDO,MAAAA,KAFuD;AAGvDD,MAAAA,KAHuD;AAIvDE,MAAAA,iBAJuD;AAKvDE,MAAAA,UALuD;AAMvDC,MAAAA;AANuD,KAAD,CAAxD;;AAQA,QAAIN,SAAJ,EAAe;AACb,aAAO;AAAED,QAAAA,KAAK,EAAE,CAACU,UAAU,CAACC,GAAZ,EAAiBV,SAAjB,CAAT;AAAsCO,QAAAA;AAAtC,OAAP;AACD,KAFD,MAEO;AACL,aAAO;AAAER,QAAAA,KAAK,EAAEU,UAAU,CAACC,GAApB;AAAyBH,QAAAA;AAAzB,OAAP;AACD,KAb4C,CAc7C;;AACD,GAf0B,EAexB,CACD;AACAf,EAAAA,UAAU,CAACG,iBAAD,CAFT,EAGDO,KAHC,EAIDD,KAJC,EAKDE,iBALC,EAMDE,UANC,EAODL,SAPC,EAQDM,mBARC,EASDZ,KATC,CAfwB,CAA3B;;AA0BA,MAAIiB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CZ,KAA9C,EAAqD;AACnD;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BZ,iBAA9B;AACD;;AAEDP,EAAAA,SAAS,CAACW,OAAV,GAAoBA,OAApB;AAEA,SAAO,CAACR,KAAD,EAAQH,SAAR,CAAP;AACD,CAnDM","sourcesContent":["import { getStyleAndFilteredProps, propConfig } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\n//@ts-ignore\nimport stableHash from 'stable-hash';\n\nconst getStyledSystemPropsAndRestProps = (props: any) => {\n  const styledSystemProps: any = {};\n  const restProps: any = {};\n\n  for (let key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return { styledSystemProps, restProps };\n};\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { getResponsiveStyles } = useResponsiveQuery();\n\n  const { styledSystemProps, restProps } = getStyledSystemPropsAndRestProps(\n    props\n  );\n\n  const { style, dataSet } = React.useMemo(() => {\n    const { styleSheet, dataSet } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], dataSet };\n    } else {\n      return { style: styleSheet.box, dataSet };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stableHash(styledSystemProps),\n    theme,\n    debug,\n    currentBreakpoint,\n    strictMode,\n    propStyle,\n    getResponsiveStyles,\n    props,\n  ]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n\n  return [style, restProps];\n};\n"]}