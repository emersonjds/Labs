{"version":3,"sources":["TabViews.tsx"],"names":["React","Box","useHasResponsiveProps","TabViewsImpl","forwardRef","children","props","ref","TabViews","memo","displayName"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,MAAMC,YAAY,gBAAGH,KAAK,CAACI,UAAN,CACnB,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAAyCC,GAAzC,KAAuD;AACrD;AACA,MAAIL,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,GAAD,eAASA,KAAT;AAAgB,IAAA,GAAG,EAAEC;AAArB,MACGF,QADH,CADF;AAKD,CAXkB,CAArB;AAcA,MAAMG,QAAQ,gBAAGR,KAAK,CAACS,IAAN,CAAWN,YAAX,CAAjB;AACAK,QAAQ,CAACE,WAAT,GAAuB,UAAvB;AAEA,eAAeF,QAAf","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { ITabViewsProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst TabViewsImpl = React.forwardRef(\n  ({ children, ...props }: ITabViewsProps, ref?: any) => {\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <Box {...props} ref={ref}>\n        {children}\n      </Box>\n    );\n  }\n);\n\nconst TabViews = React.memo(TabViewsImpl);\nTabViews.displayName = 'TabViews';\n\nexport default TabViews;\n"]}