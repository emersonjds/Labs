{"version":3,"sources":["Ordered.tsx"],"names":["React","VStack","usePropsResolution","useHasResponsiveProps","OrderedList","style","children","props","ref","_text","start","_hover","resolvedProps","Children","map","child","ind","cloneElement","ol","index","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmB,KAAGC;AAAtB,CAAD,EAA4CC,GAA5C,KAA0D;AAC5E,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwB,OAAGC;AAA3B,MAA6CV,kBAAkB,CACnE,MADmE,EAEnEK,KAFmE,CAArE,CAD4E,CAK5E;;AACA,MAAIJ,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD,GAR2E,CAS5E;;;AACAD,EAAAA,QAAQ,GAAGN,KAAK,CAACa,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,EAA6B,CAACS,KAAD,EAAaC,GAAb,KAA6B;AACnE,wBAAOhB,KAAK,CAACiB,YAAN,CACLF,KADK,EAEL;AACEG,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,KAAK,EAAEH,GAFT;AAGEP,MAAAA,KAHF;AAIEE,MAAAA,MAJF;AAKED,MAAAA,KALF;AAME,SAAGK,KAAK,CAACR;AANX,KAFK,EAULQ,KAAK,CAACR,KAAN,CAAYD,QAVP,CAAP;AAYD,GAbU,CAAX;AAcA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAED;AAAf,KAA0BO,aAA1B;AAAyC,IAAA,GAAG,EAAEJ;AAA9C,MACGF,QADH,CADF;AAKD,CA7BD;;AA+BA,4BAAeN,KAAK,CAACoB,IAAN,eAAWpB,KAAK,CAACqB,UAAN,CAAiBjB,WAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport { VStack } from '../Stack';\nimport type { IListProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst OrderedList = ({ style, children, ...props }: IListProps, ref?: any) => {\n  const { _text, start, _hover, ...resolvedProps } = usePropsResolution(\n    'List',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  // add props to children\n  children = React.Children.map(children, (child: any, ind: number) => {\n    return React.cloneElement(\n      child,\n      {\n        ol: true,\n        index: ind,\n        _text,\n        _hover,\n        start,\n        ...child.props,\n      },\n      child.props.children\n    );\n  });\n  return (\n    <VStack style={style} {...resolvedProps} ref={ref}>\n      {children}\n    </VStack>\n  );\n};\n\nexport default React.memo(React.forwardRef(OrderedList));\n"]}