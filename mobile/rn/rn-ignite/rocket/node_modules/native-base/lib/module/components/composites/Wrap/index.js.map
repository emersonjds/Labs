{"version":3,"sources":["index.tsx"],"names":["isNil","React","Flex","useThemeProps","useHasResponsiveProps","Wrap","children","props","ref","space","newProps","Children","map","child","cloneElement","style","margin","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAAqCC,GAArC,KAAmD;AAC9D,QAAM;AAAEC,IAAAA,KAAF;AAAS,OAAGC;AAAZ,MAAyBP,aAAa,CAAC,MAAD,EAASI,KAAT,CAA5C,CAD8D,CAG9D;;AACA,MAAIH,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAsBG,QAAtB;AAAgC,IAAA,GAAG,EAAEF;AAArC,MACGR,KAAK,CAACS,KAAD,CAAL,GACGH,QADH,GAEGL,KAAK,CAACU,QAAN,CAAeC,GAAf,CAAmBN,QAAnB,EAA8BO,KAAD,IAAgB;AAC3C,wBAAOZ,KAAK,CAACa,YAAN,CACLD,KADK,EAEL,EAAE,GAAGN,KAAL;AAAYQ,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAEP;AAAV;AAAnB,KAFK,EAGLI,KAAK,CAACN,KAAN,CAAYD,QAHP,CAAP;AAKD,GAND,CAHN,CADF;AAaD,CArBD;;AAuBA,4BAAeL,KAAK,CAACgB,IAAN,eAAWhB,KAAK,CAACiB,UAAN,CAAiBb,IAAjB,CAAX,CAAf","sourcesContent":["import isNil from 'lodash.isnil';\nimport React from 'react';\nimport Flex from '../../primitives/Flex';\nimport type { IWrapProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Wrap = ({ children, ...props }: IWrapProps, ref?: any) => {\n  const { space, ...newProps } = useThemeProps('Wrap', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Flex wrap=\"wrap\" {...newProps} ref={ref}>\n      {isNil(space)\n        ? children\n        : React.Children.map(children, (child: any) => {\n            return React.cloneElement(\n              child,\n              { ...props, style: { margin: space } },\n              child.props.children\n            );\n          })}\n    </Flex>\n  );\n};\n\nexport default React.memo(React.forwardRef(Wrap));\nexport type { IWrapProps };\n"]}