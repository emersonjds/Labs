{"version":3,"sources":["Center.tsx"],"names":["React","memo","forwardRef","usePropsResolution","Box","useHasResponsiveProps","Center","props","ref","resolvedProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAsBC,GAAtB,KAAmC;AAChD,QAAMC,aAAa,GAAGN,kBAAkB,CAAC,QAAD,EAAWI,KAAX,CAAxC,CADgD,CAEhD;;AACA,MAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEC;AAAV,KAAmBC,aAAnB,EAAP;AACD,CAPD;;AASA,4BAAeR,IAAI,eAACC,UAAU,CAACI,MAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from '../../primitives/Box';\nimport type { ICenterProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Center = (props: ICenterProps, ref: any) => {\n  const resolvedProps = usePropsResolution('Center', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box ref={ref} {...resolvedProps} />;\n};\n\nexport default memo(forwardRef(Center));\n"]}