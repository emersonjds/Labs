{"version":3,"sources":["Tab.tsx"],"names":["React","createContext","Pressable","Box","TabsContext","omitUndefined","useTab","useHover","mergeRefs","merge","themeTools","useHasResponsiveProps","TabContext","Tab","children","isDisabled","style","_active","_disabled","item","props","ref","newProps","inactiveTabStyle","activeTabStyle","state","isFitted","useContext","tabRef","useRef","_ref","isHovered","isSelected","selectedKey","key","tabProps","useEffect","disabledKeys","add","delete","tabStyle","_hover","remainingTabStyle","mergedProps","marginalProps","remainingProps","extractInObject","undefined","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { createContext } from 'react';\nimport { Pressable } from '../../primitives/Pressable';\nimport Box from '../../primitives/Box';\nimport { TabsContext } from './Context';\nimport type { ITabProps, ITabsContextProps } from './types';\nimport { omitUndefined } from '../../../theme/tools/utils';\nimport { useTab } from '@react-native-aria/tabs';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport merge from 'lodash.merge';\nimport { themeTools } from '../../../theme';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const TabContext = createContext({});\n\nconst Tab = (\n  {\n    children,\n    isDisabled,\n    style,\n    _active,\n    _disabled,\n    item,\n    ...props\n  }: ITabProps,\n  ref?: any\n) => {\n  const newProps = omitUndefined(props);\n\n  const {\n    inactiveTabStyle,\n    activeTabStyle,\n    state,\n    isFitted,\n  }: ITabsContextProps = React.useContext(TabsContext);\n  let tabRef = React.useRef<any>(null);\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  let isSelected = state.selectedKey === item.key;\n\n  let { tabProps } = useTab({ item, isDisabled }, state, tabRef);\n\n  React.useEffect(() => {\n    if (isDisabled) {\n      state.disabledKeys.add(item.key);\n    } else {\n      state.disabledKeys.delete(item.key);\n    }\n  }, [isDisabled, item.key, state.disabledKeys]);\n\n  const tabStyle = isSelected ? activeTabStyle : inactiveTabStyle;\n  const { _hover, ...remainingTabStyle } = tabStyle;\n  const mergedProps = merge(remainingTabStyle, newProps);\n  const [\n    marginalProps,\n    remainingProps,\n  ] = themeTools.extractInObject(mergedProps, [\n    'margin',\n    'm',\n    'marginTop',\n    'mt',\n    'marginRight',\n    'mr',\n    'marginBottom',\n    'mb',\n    'marginLeft',\n    'ml',\n    'marginX',\n    'mx',\n    'marginY',\n    'my',\n  ]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <TabContext.Provider\n      value={{\n        isSelected,\n      }}\n    >\n      <Pressable\n        disabled={isDisabled}\n        ref={mergeRefs([tabRef, _ref, ref])}\n        flex={isFitted ? 1 : undefined}\n        {...tabProps}\n        {...marginalProps}\n      >\n        <Box\n          {...remainingProps}\n          {...(isHovered && _hover)}\n          style={[style, isSelected && _active, isDisabled && _disabled]}\n        >\n          {children}\n        </Box>\n      </Pressable>\n    </TabContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(Tab));\n"]}