{"version":3,"sources":["Fade.tsx"],"names":["React","PresenceTransition","useHasResponsiveProps","usePropsResolution","Fade","children","props","ref","in","animationState","entryDuration","exitDuration","resolvedProps","animate","transition","duration","exit","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAAqCC,GAArC,KAAmD;AAC9D,QAAM;AACJC,IAAAA,EAAE,EAAEC,cADA;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,YAHI;AAIJ,OAAGC;AAJC,MAKFT,kBAAkB,CAAC,MAAD,EAASG,KAAT,CALtB,CAD8D,CAO9D;;AACA,MAAIJ,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,MAAII,aAAJ,EAAmB;AACjBE,IAAAA,aAAa,CAACC,OAAd,CAAsBC,UAAtB,CAAiCC,QAAjC,GAA4CL,aAA5C;AACD;;AACD,MAAIC,YAAJ,EAAkB;AAChBC,IAAAA,aAAa,CAACI,IAAd,CAAmBF,UAAnB,CAA8BC,QAA9B,GAAyCJ,YAAzC;AACD;;AAED,sBACE,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAEF,cAA7B;AAA6C,IAAA,GAAG,EAAEF;AAAlD,KAA2DK,aAA3D,GACGP,QADH,CADF;AAKD,CAxBD;;AA0BA,4BAAeL,KAAK,CAACiB,IAAN,eAAWjB,KAAK,CAACkB,UAAN,CAAiBd,IAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport PresenceTransition from '../Transitions/PresenceTransition';\nimport type { IFadeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst Fade = ({ children, ...props }: IFadeProps, ref?: any) => {\n  const {\n    in: animationState,\n    entryDuration,\n    exitDuration,\n    ...resolvedProps\n  } = usePropsResolution('Fade', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (entryDuration) {\n    resolvedProps.animate.transition.duration = entryDuration;\n  }\n  if (exitDuration) {\n    resolvedProps.exit.transition.duration = exitDuration;\n  }\n\n  return (\n    <PresenceTransition visible={animationState} ref={ref} {...resolvedProps}>\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(Fade));\n"]}