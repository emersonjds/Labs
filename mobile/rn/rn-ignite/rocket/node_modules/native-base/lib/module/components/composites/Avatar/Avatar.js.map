{"version":3,"sources":["Avatar.tsx"],"names":["React","memo","forwardRef","Box","Image","usePropsResolution","useHasResponsiveProps","isNil","has","Avatar","children","props","ref","error","setError","useState","_image","_badgeSize","source","resolvedProps","Badge","remainingChildren","Children","map","child","type","displayName","cloneElement","size","undefined","push","getSource","uri","imageSource","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAAuCC,GAAvC,KAAoD;AACjE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACe,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,MAAtB;AAA8B,OAAGC;AAAjC,MAAmDd,kBAAkB,CACzE,QADyE,EAEzEM,KAFyE,CAA3E;AAKA,MAAIS,KAAK,gBAAG,yCAAZ;AACA,QAAMC,iBAAgC,GAAG,EAAzC,CARiE,CASjE;;AACArB,EAAAA,KAAK,CAACsB,QAAN,CAAeC,GAAf,CAAmBb,QAAnB,EAA8Bc,KAAD,IAAW;AACtC,QACE,QAAOA,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEC,IAAd,MAAuB,QAAvB,IACA,CAAAD,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,CAAYC,WAAZ,MAA4B,aAF9B,EAGE;AAAA;;AACAN,MAAAA,KAAK,gBAAGpB,KAAK,CAAC2B,YAAN,CAAmBH,KAAnB,EAA0B;AAChCI,QAAAA,IAAI,EAAEJ,KAAK,SAAL,IAAAA,KAAK,WAAL,oBAAAA,KAAK,CAAEb,KAAP,sDAAciB,IAAd,GACFJ,KADE,aACFA,KADE,wCACFA,KAAK,CAAEb,KADL,kDACF,cAAciB,IADZ,GAEFX,UAAU,GACVA,UAAU,CAAC,CAAD,CADA,GAEVY;AAL4B,OAA1B,CAAR;AAOD,KAXD,MAWO;AACLR,MAAAA,iBAAiB,CAACS,IAAlB,CAAuBN,KAAvB;AACD;AACF,GAfD,EAViE,CA2BjE;;AACA,MAAIlB,qBAAqB,CAACK,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,QAAMoB,SAAS,GAAG,MAAM;AACtB,QAAIb,MAAJ,EAAY;AACV,UAAIV,GAAG,CAACU,MAAD,EAAS,KAAT,CAAH,IAAsB,CAACX,KAAK,CAACW,MAAM,CAACc,GAAR,CAAhC,EAA8C;AAC5C,eAAOd,MAAP;AACD,OAFD,MAEO,IAAI,CAACV,GAAG,CAACU,MAAD,EAAS,KAAT,CAAR,EAAyB;AAC9B,eAAOA,MAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD,GATD;;AAUA,QAAMe,WAAW,GAAGF,SAAS,EAA7B;AAEA,sBACE,oBAAC,GAAD,EAASZ,aAAT,EACGc,WAAW,IAAI,CAACpB,KAAhB,gBACC,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEK,MADV;AAEE,IAAA,OAAO,EAAE,MAAM;AACbJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AAJH,KAKME,MALN;AAME,IAAA,GAAG,EAAEJ;AANP,KADD,GAUCS,iBAAiB,CAACa,MAAlB,KAA6B,CAA7B,IAAkCb,iBAXtC,EAaGD,KAbH,CADF;AAiBD,CA7DD;;AA+DA,4BAAenB,IAAI,eAACC,UAAU,CAACO,MAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box, Image } from '../../primitives';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport isNil from 'lodash.isnil';\nimport has from 'lodash.has';\n\nconst Avatar = ({ children, ...props }: IAvatarProps, ref: any) => {\n  const [error, setError] = React.useState(false);\n  const { _image, _badgeSize, source, ...resolvedProps } = usePropsResolution(\n    'Avatar',\n    props\n  );\n\n  let Badge = <></>;\n  const remainingChildren: JSX.Element[] = [];\n  //  Pop Badge from children\n  React.Children.map(children, (child) => {\n    if (\n      typeof child?.type === 'object' &&\n      child?.type.displayName === 'AvatarBadge'\n    ) {\n      Badge = React.cloneElement(child, {\n        size: child?.props?.size\n          ? child?.props?.size\n          : _badgeSize\n          ? _badgeSize[0]\n          : undefined,\n      });\n    } else {\n      remainingChildren.push(child);\n    }\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const getSource = () => {\n    if (source) {\n      if (has(source, 'uri') && !isNil(source.uri)) {\n        return source;\n      } else if (!has(source, 'uri')) {\n        return source;\n      }\n    }\n    return null;\n  };\n  const imageSource = getSource();\n\n  return (\n    <Box {...resolvedProps}>\n      {imageSource && !error ? (\n        <Image\n          source={source}\n          onError={() => {\n            setError(true);\n          }}\n          {..._image}\n          ref={ref}\n        />\n      ) : (\n        remainingChildren.length !== 0 && remainingChildren\n      )}\n      {Badge}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Avatar));\n"]}