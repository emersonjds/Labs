{"version":3,"sources":["FlatList.tsx"],"names":["React","forwardRef","FlatList","RNFlatList","usePropsResolution","useStyledSystemPropsResolver","makeStyledComponent","useHasResponsiveProps","StyledFlatList","FlatListComponent","props","ref","_contentContainerStyle","contentContainerStyle","resolvedProps","resolved_ContentContainerStyle"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,cAAvC;AACA,SACEC,kBADF,EAEEC,4BAFF,QAGO,gBAHP;AAIA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,MAAMC,cAAmB,GAAGF,mBAAmB,CAACH,UAAD,CAA/C;;AAEA,MAAMM,iBAAiB,GAAG,CACxBC,KADwB,EAExBC,GAFwB,KAGrB;AACH,QAAM;AACJC,IAAAA,sBADI;AAEJC,IAAAA,qBAFI;AAGJ,OAAGC;AAHC,MAIFV,kBAAkB,CAAC,UAAD,EAAaM,KAAb,CAJtB;AAKA,QAAMK,8BAA8B,GAAGV,4BAA4B,CACjEO,sBAAsB,IAAI,EADuC,CAAnE,CANG,CASH;;AACA,MAAIL,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,cAAD,eACMI,aADN;AAEE,IAAA,qBAAqB,EACnBD,qBAAqB,IAAIE,8BAH7B;AAKE,IAAA,GAAG,EAAEJ;AALP,KADF;AASD,CAzBD;;AA2BA,OAAO,MAAMT,QAAQ,gBAAGD,UAAU,CAACQ,iBAAD,CAA3B","sourcesContent":["import React, { forwardRef } from 'react';\nimport { FlatList as RNFlatList } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IFlatListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledFlatList: any = makeStyledComponent(RNFlatList);\n\nconst FlatListComponent = <ItemT extends any>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('FlatList', props);\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledFlatList\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n};\n\nexport const FlatList = forwardRef(FlatListComponent) as <ItemT>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => any;\n"]}