{"version":3,"sources":["index.tsx"],"names":["React","memo","forwardRef","View","usePropsResolution","getColor","useTheme","makeStyledComponent","wrapStringChild","useSafeArea","useNativeBaseConfig","useHasResponsiveProps","StyledBox","MemoizedGradient","Box","children","props","ref","theme","_text","resolvedProps","Gradient","config","dependencies","safeAreaProps","bg","linearGradient","background","bgColor","backgroundColor","lgrad","colors","map","color","startObj","x","y","endObj","start","length","end","backgroundColorProps","forEach","backgroundColorProp","locations"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { View } from 'react-native';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { getColor } from '../../../theme';\nimport { useTheme } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { wrapStringChild } from '../../../utils/wrapStringChild';\nimport type { IBoxProps, InterfaceBoxProps } from './types';\nimport { useSafeArea } from '../../../hooks/useSafeArea';\nimport { useNativeBaseConfig } from '../../../core/NativeBaseContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledBox = makeStyledComponent(View);\n\nlet MemoizedGradient: any;\n\nconst Box = ({ children, ...props }: IBoxProps, ref: any) => {\n  // const { _text, ...resolvedProps } = useThemeProps('Box', props);\n  const theme = useTheme();\n  const { _text, ...resolvedProps } = usePropsResolution('Box', props);\n  let Gradient = useNativeBaseConfig('NativeBaseConfigProvider').config\n    .dependencies?.['linear-gradient'];\n\n  const safeAreaProps = useSafeArea(resolvedProps);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (\n    resolvedProps.bg?.linearGradient ||\n    resolvedProps.background?.linearGradient ||\n    resolvedProps.bgColor?.linearGradient ||\n    resolvedProps.backgroundColor?.linearGradient\n  ) {\n    const lgrad =\n      resolvedProps.bg?.linearGradient ||\n      resolvedProps.background?.linearGradient ||\n      resolvedProps.bgColor?.linearGradient ||\n      resolvedProps.backgroundColor?.linearGradient;\n\n    if (Gradient) {\n      if (!MemoizedGradient) {\n        MemoizedGradient = makeStyledComponent(Gradient);\n      }\n\n      Gradient = MemoizedGradient;\n\n      lgrad.colors = lgrad.colors?.map((color: string) => {\n        return getColor(color, theme.colors, theme);\n      });\n      let startObj = { x: 0, y: 0 };\n      let endObj = { x: 0, y: 1 };\n      if (lgrad.start && lgrad.start.length === 2) {\n        startObj = {\n          x: lgrad.start[0],\n          y: lgrad.start[1],\n        };\n      }\n      if (lgrad.end && lgrad.end.length === 2) {\n        endObj = {\n          x: lgrad.end[0],\n          y: lgrad.end[1],\n        };\n      }\n      const backgroundColorProps = [\n        'bg',\n        'bgColor',\n        'background',\n        'backgroundColor',\n      ];\n      backgroundColorProps.forEach((backgroundColorProp) => {\n        if (backgroundColorProp in safeAreaProps)\n          delete safeAreaProps[backgroundColorProp];\n      });\n\n      return (\n        <Gradient\n          ref={ref}\n          {...safeAreaProps}\n          colors={lgrad.colors}\n          start={startObj}\n          end={endObj}\n          locations={lgrad.locations}\n        >\n          {/* {React.Children.map(children, (child) =>\n            typeof child === 'string' || typeof child === 'number' ? (\n              <Text {..._text}>{child}</Text>\n            ) : (\n              child\n            )\n          )} */}\n          {wrapStringChild(children, _text)}\n        </Gradient>\n      );\n    }\n  }\n  return (\n    <StyledBox ref={ref} {...safeAreaProps}>\n      {/* {React.Children.map(children, (child) => {\n        return typeof child === 'string' ||\n          typeof child === 'number' ||\n          (child?.type === React.Fragment &&\n            (typeof child.props?.children === 'string' ||\n              typeof child.props?.children === 'number')) ? (\n          <Text {..._text}>{child}</Text>\n        ) : (\n          child\n        );\n      })} */}\n      {wrapStringChild(children, _text)}\n    </StyledBox>\n  );\n};\n\nexport type { IBoxProps, InterfaceBoxProps };\nexport default memo(forwardRef(Box));\n"]}