{"version":3,"sources":["ListIcon.tsx"],"names":["React","Icon","usePropsResolution","useHasResponsiveProps","ListIcon","props","ref","resolvedProps","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAqBC,IAArB,QAAiC,SAAjC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAoBC,GAApB,KAAkC;AACjD,QAAMC,aAAa,GAAGL,kBAAkB,CAAC,UAAD,EAAaG,KAAb,CAAxC,CADiD,CAEjD;;AACA,MAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,oBAAC,IAAD,eAAUE,aAAV;AAAyB,IAAA,GAAG,EAAED;AAA9B,KAAP;AACD,CAPD;;AASA,4BAAeN,KAAK,CAACQ,IAAN,eAAWR,KAAK,CAACS,UAAN,CAAiBL,QAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport { IIconProps, Icon } from '../Icon';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ListIcon = (props: IIconProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ListIcon', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Icon {...resolvedProps} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(ListIcon));\n"]}