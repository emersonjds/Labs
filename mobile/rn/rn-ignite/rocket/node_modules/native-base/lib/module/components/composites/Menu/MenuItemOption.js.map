{"version":3,"sources":["MenuItemOption.tsx"],"names":["React","forwardRef","memo","useContext","CheckIcon","Box","usePropsResolution","MenuItem","MenuOptionContext","useMenuOptionItem","HStack","useHasResponsiveProps","MenuItemOption","value","props","ref","values","onChange","type","isChecked","includes","menuOptionProps","children","onPress","_icon","_stack","_text","resolvedProps","modifiedOnPress","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,UAAlC,QAAoD,OAApD;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CADqB,EAErBC,GAFqB,KAGlB;AACH,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAAsDf,UAAU,CACpEK,iBADoE,CAAtE;AAGA,QAAMW,SAAS,GAAGH,MAAM,CAACI,QAAP,CAAgBP,KAAhB,CAAlB;AACA,QAAMQ,eAAe,GAAGZ,iBAAiB,CAAC;AAAEU,IAAAA,SAAF;AAAaD,IAAAA;AAAb,GAAD,CAAzC;AACA,QAAM;AACJI,IAAAA,QADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,KALI;AAMJ,OAAGC;AANC,MAOFrB,kBAAkB,CAAC,UAAD,EAAaQ,KAAb,EAAoB;AAAEK,IAAAA;AAAF,GAApB,CAPtB;;AASA,QAAMS,eAAe,GAAIC,CAAD,IAAY;AAClCZ,IAAAA,QAAQ,CAACJ,KAAD,CAAR;AACAU,IAAAA,OAAO,IAAIA,OAAO,CAACM,CAAD,CAAlB;AACD,GAHD,CAfG,CAoBH;;;AACA,MAAIlB,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,QAAD,eACMa,aADN,EAEMN,eAFN;AAGE,IAAA,iBAAiB,EAAC,QAHpB;AAIE,IAAA,OAAO,EAAEO,eAJX;AAKE,IAAA,GAAG,EAAEb;AALP,mBAOE,oBAAC,MAAD,EAAYU,MAAZ,eACE,oBAAC,SAAD,EAAeD,KAAf,CADF,eAEE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEE;AAAZ,KAAoBJ,QAApB,CAFF,CAPF,CADF;AAcD,CAzCD;;AA2CA,4BAAepB,IAAI,eAACD,UAAU,CAACW,cAAD,CAAX,CAAnB","sourcesContent":["import React, { forwardRef, memo, useContext } from 'react';\nimport { CheckIcon } from '../../primitives/Icon/Icons';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport MenuItem from './MenuItem';\nimport type { IMenuItemOptionProps, IMenuOptionContextProps } from './types';\nimport { MenuOptionContext } from './MenuOptionGroup';\nimport { useMenuOptionItem } from './useMenu';\nimport { HStack } from '../../primitives/Stack';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst MenuItemOption = (\n  { value, ...props }: IMenuItemOptionProps,\n  ref: any\n) => {\n  const { values, onChange, type }: IMenuOptionContextProps = useContext(\n    MenuOptionContext\n  );\n  const isChecked = values.includes(value);\n  const menuOptionProps = useMenuOptionItem({ isChecked, type });\n  const {\n    children,\n    onPress,\n    _icon,\n    _stack,\n    _text,\n    ...resolvedProps\n  } = usePropsResolution('MenuItem', props, { isChecked });\n\n  const modifiedOnPress = (e: any) => {\n    onChange(value);\n    onPress && onPress(e);\n  };\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <MenuItem\n      {...resolvedProps}\n      {...menuOptionProps}\n      accessibilityRole=\"button\"\n      onPress={modifiedOnPress}\n      ref={ref}\n    >\n      <HStack {..._stack}>\n        <CheckIcon {..._icon} />\n        <Box _text={_text}>{children}</Box>\n      </HStack>\n    </MenuItem>\n  );\n};\n\nexport default memo(forwardRef(MenuItemOption));\n"]}