{"version":3,"sources":["useBreakpointValue.ts"],"names":["useWindowDimensions","getClosestBreakpoint","hasValidBreakpointFormat","findLastValidBreakpoint","useTheme","useBreakpointValue","values","windowWidth","width","theme","breakpoints","currentBreakpoint"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,cAApC;AACA,SACEC,oBADF,EAEEC,wBAFF,EAGEC,uBAHF,QAIO,gBAJP;AAKA,SAASC,QAAT,QAAyB,qBAAzB;AAOA,OAAO,SAASC,kBAAT,CAA4BC,MAA5B,EAA6D;AAAA;;AAClE,MAAIC,WAAW,2BAAGP,mBAAmB,EAAtB,yDAAG,qBAAuBQ,KAAzC;AACA,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;;AAEA,MAAIF,wBAAwB,CAACI,MAAD,EAASG,KAAK,CAACC,WAAf,CAA5B,EAAyD;AACvD,QAAIC,iBAAiB,GAAGV,oBAAoB,CAC1CQ,KAAK,CAACC,WADoC,EAE1CH,WAF0C,CAA5C;AAIA,WAAOJ,uBAAuB,CAC5BG,MAD4B,EAE5BG,KAAK,CAACC,WAFsB,EAG5BC,iBAH4B,CAA9B;AAKD,GAVD,MAUO;AACL,WAAOL,MAAP;AACD;AACF","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport {\n  getClosestBreakpoint,\n  hasValidBreakpointFormat,\n  findLastValidBreakpoint,\n} from '../theme/tools';\nimport { useTheme } from './../hooks/useTheme';\nimport type { ITheme } from '../theme/index';\n\ntype UseBreakpointValueParam =\n  | { [key in keyof ITheme['breakpoints']]?: any }\n  | Array<any>;\n\nexport function useBreakpointValue(values: UseBreakpointValueParam) {\n  let windowWidth = useWindowDimensions()?.width;\n  const theme = useTheme();\n\n  if (hasValidBreakpointFormat(values, theme.breakpoints)) {\n    let currentBreakpoint = getClosestBreakpoint(\n      theme.breakpoints,\n      windowWidth\n    );\n    return findLastValidBreakpoint(\n      values,\n      theme.breakpoints,\n      currentBreakpoint\n    );\n  } else {\n    return values;\n  }\n}\n"]}