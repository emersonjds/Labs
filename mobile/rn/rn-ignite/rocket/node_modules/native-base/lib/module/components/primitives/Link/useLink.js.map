{"version":3,"sources":["useLink.ts"],"names":["Linking","Platform","linkToHREF","URL","openURL","catch","err","console","error","addOnPressFunctionality","href","callback","useLink","props","isExternal","onPress","_ref","platformLinkProps","OS","onClick","current","target","linkProps","accessibilityRole","accessible"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,cAAlC;;AAIA,MAAMC,UAAU,GAAIC,GAAD,IAAiB;AAClCH,EAAAA,OAAO,CAACI,OAAR,CAAgBD,GAAhB,EAAqBE,KAArB,CAA4BC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAc,mBAAd,EAAmCF,GAAnC,CAApC;AACD,CAFD;;AAIA,MAAMG,uBAAuB,GAAG,CAACC,IAAD,EAAqBC,QAArB,KAAuC;AACrED,EAAAA,IAAI,GAAGR,UAAU,CAACQ,IAAD,CAAb,GAAsB,EAA1B;AACAC,EAAAA,QAAQ,GAAGA,QAAQ,EAAX,GAAgB,MAAM,CAAE,CAAhC;AACD,CAHD;;AAKA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAsC;AAC3C,QAAM;AAAEH,IAAAA,IAAF;AAAQI,IAAAA,UAAR;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAAsCH,KAA5C;AAEA,MAAII,iBAAiB,GAAG,EAAxB;;AAEA,MAAIhB,QAAQ,CAACiB,EAAT,KAAgB,KAApB,EAA2B;AACzBD,IAAAA,iBAAiB,GAAG;AAClBP,MAAAA,IADkB;AAElBS,MAAAA,OAAO,EAAEJ;AAFS,KAApB,CADyB,CAKzB;;AACA,QAAID,UAAU,IAAIE,IAAI,CAACI,OAAvB,EAAgC;AAC9BJ,MAAAA,IAAI,CAACI,OAAL,CAAaC,MAAb,GAAsB,QAAtB;AACD;AACF,GATD,MASO;AACLJ,IAAAA,iBAAiB,GAAG;AAClBF,MAAAA,OAAO,EAAE,MAAM;AACbN,QAAAA,uBAAuB,CAACC,IAAD,EAAOK,OAAP,CAAvB;AACD;AAHiB,KAApB;AAKD;;AAED,SAAO;AACLO,IAAAA,SAAS,EAAE,EACT,GAAGL,iBADM;AAETM,MAAAA,iBAAiB,EAAE,MAFV;AAGTC,MAAAA,UAAU,EAAE;AAHH;AADN,GAAP;AAOD","sourcesContent":["import { Linking, Platform } from 'react-native';\nimport type { IUseLinkProp } from './types';\nimport type { AccessibilityRole } from 'react-native';\n\nconst linkToHREF = (URL: string) => {\n  Linking.openURL(URL).catch((err) => console.error('An error occurred', err));\n};\n\nconst addOnPressFunctionality = (href: string | any, callback: any) => {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : () => {};\n};\n\nexport function useLink(props: IUseLinkProp) {\n  const { href, isExternal, onPress, _ref } = props;\n\n  let platformLinkProps = {};\n\n  if (Platform.OS === 'web') {\n    platformLinkProps = {\n      href,\n      onClick: onPress,\n    };\n    // Adding target to a tag created by RN-Web\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: () => {\n        addOnPressFunctionality(href, onPress);\n      },\n    };\n  }\n\n  return {\n    linkProps: {\n      ...platformLinkProps,\n      accessibilityRole: 'link' as AccessibilityRole,\n      accessible: true,\n    },\n  };\n}\n"]}