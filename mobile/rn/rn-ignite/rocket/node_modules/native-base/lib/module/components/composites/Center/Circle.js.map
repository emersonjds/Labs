{"version":3,"sources":["Circle.tsx"],"names":["React","Box","usePropsResolution","useHasResponsiveProps","Circle","props","ref","resolvedProps","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAsBC,GAAtB,KAAmC;AAChD,QAAMC,aAAa,GAAGL,kBAAkB,CAAC,QAAD,EAAWG,KAAX,CAAxC,CADgD,CAGhD;;AACA,MAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,oBAAC,GAAD,eAASE,aAAT;AAAwB,IAAA,GAAG,EAAED;AAA7B,KAAP;AACD,CARD;;AAUA,4BAAeN,KAAK,CAACQ,IAAN,eAAWR,KAAK,CAACS,UAAN,CAAiBL,MAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { ICircleProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Circle = (props: ICircleProps, ref: any) => {\n  const resolvedProps = usePropsResolution('Circle', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...resolvedProps} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(Circle));\n"]}