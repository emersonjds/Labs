{"version":3,"sources":["CircularProgress.tsx"],"names":["get","React","Animated","Easing","StyleSheet","makeStyledComponent","useTheme","useThemeProps","canUseDom","default","Box","themeTools","useHasResponsiveProps","StyleAnimatedView","View","CircularProgress","value","isIndeterminate","max","min","props","ref","theme","isDomUsable","sizeProps","newProps","remainingProps","extractInObject","size","height","width","themeHeight","themeWidth","styleSize","parseInt","slice","Length","defaultThickness","thickness","degree","Value","loop","timing","toValue","duration","easing","linear","useNativeDriver","start","viewHeight","setViewHeight","useState","layout","e","nativeEvent","defaultStyling","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","borderLeftWidth","borderBottomWidth","position","borderLeftColor","borderBottomColor","styles","create","firstProgressLayer","borderTopWidth","borderRightWidth","transform","rotateZ","secondProgressLayer","offsetLayer","borderRadius","animateStyle","interpolate","inputRange","outputRange","halfSide","propStyle","percent","base_degrees","rotateBy","renderThirdLayer","color","trackColor","firstProgressLayerStyle","now","_text","children","memo","forwardRef"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport React from 'react';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useTheme, useThemeProps } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport { default as Box } from '../../primitives/Box';\nimport type { ICircularProgressProps } from './types';\nimport { themeTools } from '../../../theme';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyleAnimatedView = makeStyledComponent(Animated.View);\n\nconst CircularProgress = (\n  { value, isIndeterminate, max, min, ...props }: ICircularProgressProps,\n  ref: any\n) => {\n  const theme = useTheme();\n\n  const isDomUsable = canUseDom();\n  if (min) {\n    value = value - min;\n  }\n\n  let sizeProps;\n  let newProps = useThemeProps('CircularProgress', props);\n  let [, remainingProps] = themeTools.extractInObject(props, ['size']); // removing size from props so that Box don't accept size passed for CircularProgress\n\n  if (!newProps.size) {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width,\n    };\n  } else {\n    sizeProps = { height: newProps.size, width: newProps.size };\n  }\n  // fetching size from theme for passing into style prop\n  const themeHeight = get(theme, 'space.' + sizeProps.height);\n  const themeWidth = get(theme, 'space.' + sizeProps.width);\n\n  const styleSize = {\n    height: themeHeight\n      ? parseInt(themeHeight.slice(themeHeight.Length, -2), 10)\n      : sizeProps.height,\n    width: themeWidth\n      ? parseInt(themeWidth.slice(themeWidth.Length, -2), 10)\n      : sizeProps.width,\n  };\n\n  const defaultThickness = newProps.thickness;\n  const degree: any = new Animated.Value(0);\n  if (isIndeterminate) {\n    if (isDomUsable) {\n      Animated.loop(\n        Animated.timing(degree, {\n          toValue: 1,\n          duration: 600,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        })\n      ).start();\n    }\n  }\n  const [viewHeight, setViewHeight] = React.useState(0);\n  const layout = (e: any) => {\n    let height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n\n  const defaultStyling: any = {\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent',\n    ...styleSize,\n  };\n  const styles = StyleSheet.create({\n    firstProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    secondProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '45deg' }],\n    },\n    offsetLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      borderRadius: viewHeight / 2,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    animateStyle: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [\n        {\n          rotateZ: degree.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        },\n      ],\n    },\n  });\n  let halfSide = (max ? (min ? max - min : max) : 100) / 2; // calculating the halfvalue of the progress according to min and max\n\n  const propStyle = (percent: number, base_degrees: number) => {\n    const rotateBy = base_degrees + (percent * 180) / halfSide;\n    return {\n      transform: [{ rotateZ: rotateBy + 'deg' }],\n    };\n  };\n\n  const renderThirdLayer = (percent: number) => {\n    if (percent > halfSide) {\n      return (\n        <Box\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={[\n            styles.secondProgressLayer,\n            propStyle(percent - halfSide, 45),\n          ]}\n        />\n      );\n    } else {\n      return (\n        <Box\n          borderTopColor={newProps.trackColor}\n          borderRightColor={newProps.trackColor}\n          style={styles.offsetLayer}\n        />\n      );\n    }\n  };\n  let firstProgressLayerStyle;\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      {...sizeProps}\n      rounded={viewHeight / 2}\n      borderWidth={defaultThickness}\n      borderColor={newProps.trackColor}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      {...remainingProps}\n      ref={ref}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityValue={{\n        min,\n        max,\n        now: value,\n      }}\n    >\n      {!isIndeterminate ? (\n        <>\n          <Box\n            onLayout={layout}\n            borderTopColor={newProps.color}\n            borderRightColor={newProps.color}\n            style={[styles.firstProgressLayer, firstProgressLayerStyle]}\n          />\n          {renderThirdLayer(value)}\n          <Box _text={newProps._text}>{remainingProps.children}</Box>\n        </>\n      ) : (\n        <StyleAnimatedView\n          onLayout={layout}\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={styles.animateStyle}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(CircularProgress));\n"]}