{"version":3,"sources":["PopoverArrow.tsx"],"names":["React","usePropsResolution","Popper","useHasResponsiveProps","PopoverArrow","forwardRef","props","ref","resolvedProps","displayName"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,MAAMC,YAAY,gBAAGJ,KAAK,CAACK,UAAN,CAAiB,CAACC,KAAD,EAAmBC,GAAnB,KAAgC;AACpE,QAAMC,aAAa,GAAGP,kBAAkB,CAAC,cAAD,EAAiBK,KAAjB,CAAxC,CADoE,CAEpE;;AACA,MAAIH,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,oBAAC,MAAD,CAAQ,KAAR,eAAkBE,aAAlB;AAAiC,IAAA,GAAG,EAAED;AAAtC,KAAP;AACD,CAPoB,CAArB;AASAH,YAAY,CAACK,WAAb,GAA2B,aAA3B;AAEA,eAAeL,YAAf","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { Popper } from '../Popper';\nimport type { IBoxProps } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverArrow = React.forwardRef((props: IBoxProps, ref: any) => {\n  const resolvedProps = usePropsResolution('PopoverArrow', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Popper.Arrow {...resolvedProps} ref={ref} />;\n});\n\nPopoverArrow.displayName = 'PopperArrow';\n\nexport default PopoverArrow;\n"]}