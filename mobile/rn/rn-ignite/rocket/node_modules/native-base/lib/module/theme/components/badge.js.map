{"version":3,"sources":["badge.ts"],"names":["getColorScheme","baseStyle","flexDirection","justifyContent","space","px","py","alignItems","_text","fontSize","fontWeight","variantSolid","props","colorScheme","color","_icon","bg","borderWidth","borderColor","borderRadius","variantSubtle","_light","_dark","variantOutline","variants","solid","subtle","outline","defaultProps","variant","size"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,aAAa,EAAE,KADC;AAEhBC,EAAAA,cAAc,EAAE,QAFA;AAGhBC,EAAAA,KAAK,EAAE,CAHS;AAIhBC,EAAAA,EAAE,EAAE,GAJY;AAKhBC,EAAAA,EAAE,EAAE,KALY;AAMhBC,EAAAA,UAAU,EAAE,QANI;AAOhBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,UAAU,EAAE;AAA9B;AAPS,CAAlB;;AAUA,SAASC,YAAT,CAAsBC,KAAtB,EAAyE;AACvE,QAAMC,WAAW,GAAGb,cAAc,CAACY,KAAD,CAAlC;AACA,SAAO;AACLJ,IAAAA,KAAK,EAAE;AACLM,MAAAA,KAAK,EAAE;AADF,KADF;AAILC,IAAAA,KAAK,EAAE;AACLD,MAAAA,KAAK,EAAE;AADF,KAJF;AAOLE,IAAAA,EAAE,YAAKH,WAAL,SAPG;AAQLI,IAAAA,WAAW,EAAE,GARR;AASLC,IAAAA,WAAW,EAAE,aATR;AAULC,IAAAA,YAAY,EAAE;AAVT,GAAP;AAYD;;AAED,SAASC,aAAT,CAAuBR,KAAvB,EAA0E;AACxE,QAAMC,WAAW,GAAGb,cAAc,CAACY,KAAD,CAAlC;AACA,SAAO;AACLJ,IAAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,YAAKD,WAAL;AAAP,KADF;AAELE,IAAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,YAAKD,WAAL;AAAP,KAFF;AAGLQ,IAAAA,MAAM,EAAE;AAAEL,MAAAA,EAAE,YAAKH,WAAL;AAAJ,KAHH;AAILS,IAAAA,KAAK,EAAE;AAAEN,MAAAA,EAAE,YAAKH,WAAL;AAAJ,KAJF;AAKLI,IAAAA,WAAW,EAAE,GALR;AAMLE,IAAAA,YAAY,EAAE,GANT;AAOLD,IAAAA,WAAW,EAAE;AAPR,GAAP;AASD;;AAED,SAASK,cAAT,CAAwBX,KAAxB,EAA2E;AACzE,QAAMC,WAAW,GAAGb,cAAc,CAACY,KAAD,CAAlC;AACA,SAAO;AACLS,IAAAA,MAAM,EAAE;AACNb,MAAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,YAAKD,WAAL;AAAP,OADD;AAENE,MAAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,YAAKD,WAAL;AAAP,OAFD;AAGNK,MAAAA,WAAW,YAAKL,WAAL;AAHL,KADH;AAMLS,IAAAA,KAAK,EAAE;AACLd,MAAAA,KAAK,EAAE;AACLM,QAAAA,KAAK,YAAKD,WAAL;AADA,OADF;AAILE,MAAAA,KAAK,EAAE;AACLD,QAAAA,KAAK,YAAKD,WAAL;AADA,OAJF;AAOLK,MAAAA,WAAW,YAAKL,WAAL;AAPN,KANF;AAeLM,IAAAA,YAAY,EAAE,GAfT;AAgBLF,IAAAA,WAAW,EAAE;AAhBR,GAAP;AAkBD;;AAED,MAAMO,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAEd,YADQ;AAEfe,EAAAA,MAAM,EAAEN,aAFO;AAGfO,EAAAA,OAAO,EAAEJ;AAHM,CAAjB;AAMA,MAAMK,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,QADU;AAEnBhB,EAAAA,WAAW,EAAE,OAFM;AAGnBiB,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,eAAe;AACb7B,EAAAA,SADa;AAEbuB,EAAAA,QAFa;AAGbI,EAAAA;AAHa,CAAf","sourcesContent":["import { getColorScheme } from '../tools';\nimport type { InterfaceBadgeProps } from '../../components/composites/Badge/types';\nconst baseStyle = {\n  flexDirection: 'row',\n  justifyContent: 'center',\n  space: 1,\n  px: '2',\n  py: '0.5',\n  alignItems: 'center',\n  _text: { fontSize: 'xs', fontWeight: 'medium' },\n};\n\nfunction variantSolid(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _text: {\n      color: 'text.50',\n    },\n    _icon: {\n      color: 'text.50',\n    },\n    bg: `${colorScheme}.600`,\n    borderWidth: '1',\n    borderColor: 'transparent',\n    borderRadius: '2',\n  };\n}\n\nfunction variantSubtle(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _text: { color: `${colorScheme}.900` },\n    _icon: { color: `${colorScheme}.900` },\n    _light: { bg: `${colorScheme}.100` },\n    _dark: { bg: `${colorScheme}.300` },\n    borderWidth: '1',\n    borderRadius: '2',\n    borderColor: 'transparent',\n  };\n}\n\nfunction variantOutline(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _light: {\n      _text: { color: `${colorScheme}.600` },\n      _icon: { color: `${colorScheme}.600` },\n      borderColor: `${colorScheme}.600`,\n    },\n    _dark: {\n      _text: {\n        color: `${colorScheme}.300`,\n      },\n      _icon: {\n        color: `${colorScheme}.300`,\n      },\n      borderColor: `${colorScheme}.300`,\n    },\n    borderRadius: '2',\n    borderWidth: '1',\n  };\n}\n\nconst variants = {\n  solid: variantSolid as any,\n  subtle: variantSubtle as any,\n  outline: variantOutline as any,\n};\n\nconst defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'muted',\n  size: 'md',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n};\n"]}