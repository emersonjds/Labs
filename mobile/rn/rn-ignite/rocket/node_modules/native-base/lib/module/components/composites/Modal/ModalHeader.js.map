{"version":3,"sources":["ModalHeader.tsx"],"names":["React","memo","forwardRef","Box","usePropsResolution","useHasResponsiveProps","ModalHeader","props","ref","resolvedProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAA+B,sBAA/B;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAmBC,GAAnB,KAAiC;AACnD,QAAMC,aAAa,GAAGL,kBAAkB,CAAC,aAAD,EAAgBG,KAAhB,CAAxC,CADmD,CAEnD;;AACA,MAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,oBAAC,GAAD,eAASE,aAAT;AAAwB,IAAA,GAAG,EAAED;AAA7B,KAAP;AACD,CAPD;;AASA,4BAAeP,IAAI,eAACC,UAAU,CAACI,WAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ModalHeader', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ModalHeader));\n"]}