{"version":3,"sources":["avatar.ts"],"names":["randomColor","getRandomString","baseStyle","props","name","bg","string","position","justifyContent","alignItems","borderRadius","_text","fontWeight","color","_image","alt","_alt","style","height","width","_light","borderColor","_dark","getSize","size","fontSize","badgeSize","_badgeSize","sizes","defaultProps"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,YAA7C;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAoD;AACpE,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAME,EAAE,GAAGD,IAAI,GACXJ,WAAW,CAAC;AAAEM,IAAAA,MAAM,EAAEL,eAAe,CAAC,CAAD,CAAf,GAAqBG;AAA/B,GAAD,CADA,GAEX,UAFJ;AAGA,SAAO;AACLC,IAAAA,EADK;AAELE,IAAAA,QAAQ,EAAE,UAFL;AAGLC,IAAAA,cAAc,EAAE,QAHX;AAILC,IAAAA,UAAU,EAAE,QAJP;AAKLC,IAAAA,YAAY,EAAE,MALT;AAMLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,GADP;AAELC,MAAAA,KAAK,EAAE;AAFF,KANF;AAULC,IAAAA,MAAM,EAAE;AACNJ,MAAAA,YAAY,EAAE,MADR;AAENK,MAAAA,GAAG,EAAE,IAFC;AAGNC,MAAAA,IAAI,EAAE;AACJJ,QAAAA,UAAU,EAAE;AADR,OAHA;AAMNK,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,MADH;AAELC,QAAAA,KAAK,EAAE;AAFF;AAND,KAVH;AAqBLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,WAAW,EAAE;AADP,KArBH;AAwBLC,IAAAA,KAAK,EAAE;AACLD,MAAAA,WAAW,EAAE;AADR;AAxBF,GAAP;AA4BD,CAjCD;;AAmCA,SAASE,OAAT,CAAiBC,IAAjB,EAA4BC,QAA5B,EAA8CC,SAA9C,EAA8D;AAC5D,SAAO;AACLP,IAAAA,KAAK,EAAEK,IADF;AAELN,IAAAA,MAAM,EAAEM,IAFH;AAGLb,IAAAA,KAAK,EAAE;AACLc,MAAAA,QAAQ,EAAEA;AADL,KAHF;AAMLE,IAAAA,UAAU,EAAED;AANP,GAAP;AAQD;;AAED,MAAME,KAAK,GAAG;AACZ,QAAML,OAAO,CAAC,GAAD,EAAM,KAAN,EAAa,GAAb,CADD;AAEZ,QAAMA,OAAO,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,CAFD;AAGZ,QAAMA,OAAO,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,CAHD;AAIZ,QAAMA,OAAO,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,CAJD;AAKZ,QAAMA,OAAO,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CALD;AAMZ,SAAOA,OAAO,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd;AANF,CAAd;AASA,MAAMM,YAAY,GAAG;AACnBL,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,eAAe;AACbtB,EAAAA,SADa;AAEb0B,EAAAA,KAFa;AAGbC,EAAAA;AAHa,CAAf","sourcesContent":["import { randomColor, getRandomString } from './../tools';\nimport type { InterfaceAvatarProps } from '../../components/composites/Avatar/types';\nconst baseStyle = (props: InterfaceAvatarProps & { name: string }) => {\n  const { name } = props;\n  const bg = name\n    ? randomColor({ string: getRandomString(5) + name })\n    : 'gray.400';\n  return {\n    bg,\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 'full',\n    _text: {\n      fontWeight: 600,\n      color: 'text.50',\n    },\n    _image: {\n      borderRadius: 'full',\n      alt: '--',\n      _alt: {\n        fontWeight: 600,\n      },\n      style: {\n        height: '100%',\n        width: '100%',\n      },\n    },\n    _light: {\n      borderColor: 'gray.800',\n    },\n    _dark: {\n      borderColor: 'white',\n    },\n  };\n};\n\nfunction getSize(size: any, fontSize: string, badgeSize: any) {\n  return {\n    width: size,\n    height: size,\n    _text: {\n      fontSize: fontSize,\n    },\n    _badgeSize: badgeSize,\n  };\n}\n\nconst sizes = {\n  'xs': getSize('6', '2xs', '2'),\n  'sm': getSize('8', 'xs', '3'),\n  'md': getSize('12', 'md', '4'),\n  'lg': getSize('16', 'xl', '5'),\n  'xl': getSize('24', '3xl', '6'),\n  '2xl': getSize('32', '5xl', '7'),\n};\n\nconst defaultProps = {\n  size: 'md',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]}