{"version":3,"sources":["AccordionIcon.tsx"],"names":["React","ChevronDownIcon","ChevronUpIcon","AccordionItemContext","useThemeProps","useHasResponsiveProps","AccordionIcon","props","ref","isOpen","useContext","newProps","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,6BAA/C;AAEA,SAASC,oBAAT,QAAqC,WAArC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,aAAa,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,EAAoCC,GAApC,KAAkD;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAyCT,KAAK,CAACU,UAAN,CAC7CP,oBAD6C,CAA/C;AAGA,QAAM,EAAE,GAAGQ;AAAL,MAAkBP,aAAa,CAAC,eAAD,EAAkBG,KAAlB,CAArC,CAJsE,CAKtE;;AACA,MAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,SAAOE,MAAM,gBACX,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KAAiCE,QAAjC;AAA2C,IAAA,GAAG,EAAEH;AAAhD,KADW,gBAGX,oBAAC,eAAD,eAAqBG,QAArB;AAA+B,IAAA,GAAG,EAAEH;AAApC,KAHF;AAKD,CAdD;;AAgBA,4BAAeR,KAAK,CAACY,IAAN,eAAWZ,KAAK,CAACa,UAAN,CAAiBP,aAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '../../primitives/Icon/Icons';\nimport type { IAccordionIconProps, IAccordionItemContextProps } from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionIcon = ({ ...props }: IAccordionIconProps, ref?: any) => {\n  const { isOpen }: IAccordionItemContextProps = React.useContext(\n    AccordionItemContext\n  );\n  const { ...newProps } = useThemeProps('AccordionIcon', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return isOpen ? (\n    <ChevronUpIcon color=\"white\" {...newProps} ref={ref} />\n  ) : (\n    <ChevronDownIcon {...newProps} ref={ref} />\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionIcon));\n"]}