{"version":3,"sources":["platformUnits.test.js"],"names":["Platform","theme","platformSpecificSpaceUnits","describe","it","OS","newTheme","space","xs","convertedTheme","expect","toEqual"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,0BAAT,QAA2C,SAA3C;AAEAC,QAAQ,CAAC,0BAAD,EAA6B,MAAM;AACzCC,EAAAA,EAAE,CAAC,yCAAD,EAA4C,MAAM;AAClDJ,IAAAA,QAAQ,CAACK,EAAT,GAAc,KAAd;AACA,UAAMC,QAAQ,GAAG,EAAE,GAAGL;AAAL,KAAjB;AACAK,IAAAA,QAAQ,CAACC,KAAT,GAAiB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAjB;AACA,UAAMC,cAAc,GAAGP,0BAA0B,CAACI,QAAD,CAAjD;AACAI,IAAAA,MAAM,CAACD,cAAc,CAACF,KAAhB,CAAN,CAA6BI,OAA7B,CAAqC;AAAEH,MAAAA,EAAE,EAAE;AAAN,KAArC;AACD,GANC,CAAF;AAQAJ,EAAAA,EAAE,CAAC,0CAAD,EAA6C,MAAM;AACnDJ,IAAAA,QAAQ,CAACK,EAAT,GAAc,KAAd;AACA,UAAMC,QAAQ,GAAG,EAAE,GAAGL;AAAL,KAAjB;AACAK,IAAAA,QAAQ,CAACC,KAAT,GAAiB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAjB;AACA,UAAMC,cAAc,GAAGP,0BAA0B,CAACI,QAAD,CAAjD;AACAI,IAAAA,MAAM,CAACD,cAAc,CAACF,KAAhB,CAAN,CAA6BI,OAA7B,CAAqC;AAAEH,MAAAA,EAAE,EAAE;AAAN,KAArC;AACD,GANC,CAAF;AAOD,CAhBO,CAAR;AAkBAL,QAAQ,CAAC,uBAAD,EAA0B,MAAM;AACtCC,EAAAA,EAAE,CAAC,qCAAD,EAAwC,MAAM;AAC9CJ,IAAAA,QAAQ,CAACK,EAAT,GAAc,KAAd;AACA,UAAMC,QAAQ,GAAG,EAAE,GAAGL;AAAL,KAAjB;AACAK,IAAAA,QAAQ,CAACC,KAAT,GAAiB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAjB;AACA,UAAMC,cAAc,GAAGP,0BAA0B,CAACI,QAAD,CAAjD;AACAI,IAAAA,MAAM,CAACD,cAAc,CAACF,KAAhB,CAAN,CAA6BI,OAA7B,CAAqC;AAAEH,MAAAA,EAAE,EAAE;AAAN,KAArC;AACD,GANC,CAAF;AAQAJ,EAAAA,EAAE,CAAC,uCAAD,EAA0C,MAAM;AAChDJ,IAAAA,QAAQ,CAACK,EAAT,GAAc,KAAd;AACA,UAAMC,QAAQ,GAAG,EAAE,GAAGL;AAAL,KAAjB;AACAK,IAAAA,QAAQ,CAACC,KAAT,GAAiB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAjB;AACA,UAAMC,cAAc,GAAGP,0BAA0B,CAACI,QAAD,CAAjD;AACAI,IAAAA,MAAM,CAACD,cAAc,CAACF,KAAhB,CAAN,CAA6BI,OAA7B,CAAqC;AAAEH,MAAAA,EAAE,EAAE;AAAN,KAArC;AACD,GANC,CAAF;AAOD,CAhBO,CAAR","sourcesContent":["import { Platform } from 'react-native';\nimport theme from '../base';\nimport { platformSpecificSpaceUnits } from './utils';\n\ndescribe('platform units on native', () => {\n  it('should convert px to absolute on native', () => {\n    Platform.OS = 'ios';\n    const newTheme = { ...theme };\n    newTheme.space = { xs: '1px' };\n    const convertedTheme = platformSpecificSpaceUnits(newTheme);\n    expect(convertedTheme.space).toEqual({ xs: 1 });\n  });\n\n  it('should convert rem to absolute on native', () => {\n    Platform.OS = 'ios';\n    const newTheme = { ...theme };\n    newTheme.space = { xs: '2rem' };\n    const convertedTheme = platformSpecificSpaceUnits(newTheme);\n    expect(convertedTheme.space).toEqual({ xs: 32 });\n  });\n});\n\ndescribe('platform units on web', () => {\n  it('should not convert px to rem on web', () => {\n    Platform.OS = 'web';\n    const newTheme = { ...theme };\n    newTheme.space = { xs: '23px' };\n    const convertedTheme = platformSpecificSpaceUnits(newTheme);\n    expect(convertedTheme.space).toEqual({ xs: '23px' });\n  });\n\n  it('should convert absolute to rem on web', () => {\n    Platform.OS = 'web';\n    const newTheme = { ...theme };\n    newTheme.space = { xs: 23 };\n    const convertedTheme = platformSpecificSpaceUnits(newTheme);\n    expect(convertedTheme.space).toEqual({ xs: '1.4375rem' });\n  });\n});\n"]}