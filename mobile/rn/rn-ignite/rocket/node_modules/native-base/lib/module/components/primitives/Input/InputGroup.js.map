{"version":3,"sources":["InputGroup.tsx"],"names":["React","memo","forwardRef","getAttachedChildren","HStack","extractInObject","stylingProps","useHasResponsiveProps","supplyPropsToChildren","children","props","length","result","firstChild","firstChildProps","borderTopRightRadius","borderBottomRightRadius","push","cloneElement","i","child","newProps","borderRadius","lastChild","lastChildProps","borderTopLeftRadius","borderBottomLeftRadius","Children","map","InputGroup","ref","layoutProps","nonLayoutProps","margin","border","layout","flexbox","position","background"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IInputGroupProps } from './types';\nimport { getAttachedChildren } from '../../../utils';\nimport { HStack } from '../Stack';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst supplyPropsToChildren = (children: any, props: any) => {\n  if (children.length >= 2) {\n    const result = [];\n    const firstChild = children[0];\n    const firstChildProps = {\n      ...firstChild.props.children,\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n    };\n    result.push(\n      React.cloneElement(firstChild, firstChildProps, firstChild.props.children)\n    );\n    for (let i = 1; i < children.length - 1; i++) {\n      const child = children[i];\n      const newProps = { ...props, borderRadius: '0' };\n      result.push(React.cloneElement(child, newProps, child.props.children));\n    }\n    const lastChild = children[children.length - 1];\n    const lastChildProps = {\n      ...lastChild.props.children,\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    };\n    result.push(\n      React.cloneElement(lastChild, lastChildProps, lastChild.props.children)\n    );\n    return result;\n  }\n\n  return React.Children.map(children, (child: JSX.Element) => {\n    return React.cloneElement(child, props, child.props.children);\n  });\n};\n\nexport const InputGroup = memo(\n  forwardRef(({ children, ...props }: IInputGroupProps, ref: any) => {\n    const [layoutProps, nonLayoutProps] = extractInObject(props, [\n      ...stylingProps.margin,\n      ...stylingProps.border,\n      ...stylingProps.layout,\n      ...stylingProps.flexbox,\n      ...stylingProps.position,\n      ...stylingProps.background,\n      'space',\n      'shadow',\n      'opacity',\n    ]);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <HStack {...layoutProps} ref={ref}>\n        {supplyPropsToChildren(getAttachedChildren(children), nonLayoutProps)}\n      </HStack>\n    );\n  })\n);\n"]}