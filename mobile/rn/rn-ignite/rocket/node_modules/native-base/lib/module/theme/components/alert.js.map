{"version":3,"sources":["alert.ts"],"names":["getColor","getColorScheme","transparentize","getBg","props","theme","colorScheme","status","variant","lightBg","darkBg","variantSubtle","_light","bg","_icon","color","_dark","variantOutline","borderWidth","borderColor","variantOutlineLight","variantSolid","variantLeftAccent","borderLeftWidth","borderLeftColor","variantTopAccent","borderTopWidth","borderTopColor","variants","Alert","baseStyle","alignItems","justifyContent","p","space","borderRadius","defaultProps","AlertIcon","size"],"mappings":"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","sourcesContent":["import { getColor, getColorScheme, transparentize } from '../tools';\nimport type { InterfaceAlertProps } from '../../components/composites/Alert/types';\nfunction getBg(\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) {\n  let { theme, colorScheme, status, variant } = props;\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  const lightBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.700`, colorScheme)\n      : getColor(theme, `${colorScheme}.200`, colorScheme);\n\n  const darkBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.600`, colorScheme)\n      : getColor(theme, `${colorScheme}.200`, colorScheme);\n\n  return { lightBg, darkBg };\n}\n\nconst variantSubtle = (\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) => {\n  let { colorScheme, status } = props;\n  const { lightBg, darkBg } = getBg(props);\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  return {\n    _light: {\n      bg: lightBg,\n      _icon: { color: `${colorScheme}.700` },\n    },\n    _dark: {\n      bg: darkBg,\n      _icon: { color: `${colorScheme}.600` },\n    },\n  };\n};\n\nconst variantOutline = (props: InterfaceAlertProps & { colorScheme: any }) => {\n  let { colorScheme, status } = props;\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  return {\n    borderWidth: 1,\n    _light: {\n      _icon: { color: `${colorScheme}.700` },\n      borderColor: `${colorScheme}.700`,\n    },\n    _dark: {\n      _icon: { color: `${colorScheme}.600` },\n      borderColor: `${colorScheme}.600`,\n    },\n  };\n};\n\nconst variantOutlineLight = (\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) => {\n  let { colorScheme, status, theme } = props;\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  return {\n    borderWidth: 1,\n    _light: {\n      _icon: { color: `${colorScheme}.700` },\n      borderColor: transparentize(`${colorScheme}.700`, 0.4)(theme),\n    },\n    _dark: {\n      _icon: { color: `${colorScheme}.600` },\n      borderColor: transparentize(`${colorScheme}.600`, 0.4)(theme),\n    },\n  };\n};\n\nconst variantSolid = (\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) => {\n  const { lightBg, darkBg } = getBg(props);\n  return {\n    _light: {\n      bg: lightBg,\n    },\n    _dark: {\n      bg: darkBg,\n    },\n    _icon: { color: `muted.50` },\n  };\n};\n\nconst variantLeftAccent = (\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) => {\n  let { colorScheme, status } = props;\n  const { lightBg, darkBg } = getBg(props);\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  return {\n    borderLeftWidth: 4,\n    _light: {\n      bg: lightBg,\n      _icon: { color: `${colorScheme}.700` },\n      borderLeftColor: `${colorScheme}.700`,\n    },\n    _dark: {\n      bg: darkBg,\n      _icon: { color: `${colorScheme}.600` },\n      borderLeftColor: `${colorScheme}.600`,\n    },\n  };\n};\n\nconst variantTopAccent = (\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) => {\n  let { colorScheme, status } = props;\n  const { lightBg, darkBg } = getBg(props);\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  return {\n    borderTopWidth: 4,\n    _light: {\n      bg: lightBg,\n      _icon: { color: `${colorScheme}.700` },\n      borderTopColor: `${colorScheme}.700`,\n    },\n    _dark: {\n      bg: darkBg,\n      _icon: { color: `${colorScheme}.600` },\n      borderTopColor: `${colorScheme}.600`,\n    },\n  };\n};\n\nconst variants = {\n  'subtle': variantSubtle as any,\n  'solid': variantSolid as any,\n  'left-accent': variantLeftAccent as any,\n  'top-accent': variantTopAccent as any,\n  'outline': variantOutline as any,\n  'outline-light': variantOutlineLight as any,\n};\n\nexport const Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm',\n  },\n  variants,\n  defaultProps: {\n    colorScheme: 'info',\n    variant: 'subtle',\n  },\n};\n\n// AlertIcon\n\nexport const AlertIcon = {\n  baseStyle: {\n    size: 4,\n  },\n};\n"]}