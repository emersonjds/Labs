{"version":3,"sources":["ResponsiveQueryProvider.tsx"],"names":["React","ResponsiveQueryContext","createContext","disableCSSMediaQueries","ResponsiveQueryProvider","props","value","useMemo","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAMA,OAAO,MAAMC,sBAAsB,gBAAGD,KAAK,CAACE,aAAN,CACpC;AACEC,EAAAA,sBAAsB,EAAE;AAD1B,CADoC,CAA/B;AAMP,OAAO,MAAMC,uBAAuB,GAClCC,KADqC,IAElC;AACH,QAAMC,KAAK,GAAGN,KAAK,CAACO,OAAN,CACZ,OAAO;AACLJ,IAAAA,sBAAsB,EAAEE,KAAK,CAACF;AADzB,GAAP,CADY,EAIZ,CAACE,KAAK,CAACF,sBAAP,CAJY,CAAd;AAOA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEG;AAAxC,KACGD,KAAK,CAACG,QADT,CADF;AAKD,CAfM","sourcesContent":["import React from 'react';\n\ntype ResponsiveQueryContextType = {\n  disableCSSMediaQueries?: boolean;\n};\n\nexport const ResponsiveQueryContext = React.createContext<ResponsiveQueryContextType>(\n  {\n    disableCSSMediaQueries: false,\n  }\n);\n\nexport const ResponsiveQueryProvider = (\n  props: ResponsiveQueryContextType & { children: React.ReactNode }\n) => {\n  const value = React.useMemo(\n    () => ({\n      disableCSSMediaQueries: props.disableCSSMediaQueries,\n    }),\n    [props.disableCSSMediaQueries]\n  );\n\n  return (\n    <ResponsiveQueryContext.Provider value={value}>\n      {props.children}\n    </ResponsiveQueryContext.Provider>\n  );\n};\n"]}