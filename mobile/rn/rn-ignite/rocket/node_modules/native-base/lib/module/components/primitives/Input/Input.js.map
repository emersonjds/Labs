{"version":3,"sources":["Input.tsx"],"names":["React","memo","forwardRef","TextInput","useToken","useFormControl","useHasResponsiveProps","useHover","extractInObject","stylingProps","usePropsResolution","mergeRefs","Stack","makeStyledComponent","useResolvedFontFamily","StyledInput","Input","isHovered","isHoveredProp","isFocused","isFocusedProp","onKeyPress","props","ref","inputProps","isDisabled","isInvalid","isReadOnly","isRequired","nativeID","setIsFocused","useState","handleFocus","focusState","callback","focusOutlineColor","invalidOutlineColor","_ref","useRef","inputThemeProps","disabled","accessibilityInvalid","accessibilityReadOnly","required","ariaLabel","accessibilityLabel","type","isFullWidth","fontFamily","fontWeight","fontStyle","placeholderTextColor","selectionColor","underlineColorAndroid","InputLeftElement","InputRightElement","leftElement","rightElement","onFocus","onBlur","wrapperRef","_stack","_input","resolvedProps","layoutProps","nonLayoutProps","margin","border","layout","flexbox","position","background","resolvedFontFamily","resolvedPlaceholderTextColor","resolvedSelectionColor","resolvedUnderlineColorAndroid","undefined","e","persist"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IInputProps } from './types';\nimport { TextInput } from 'react-native';\nimport { useToken } from '../../../hooks';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { Stack } from '../Stack';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\n\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst Input = (\n  {\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    onKeyPress,\n    ...props\n  }: IInputProps,\n  ref: any\n) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID,\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  /**Converting into Hash Color Code */\n  //@ts-ignore\n  props.focusOutlineColor = useToken('colors', props.focusOutlineColor);\n  //@ts-ignore\n  props.invalidOutlineColor = useToken('colors', props.invalidOutlineColor);\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const {\n    ariaLabel,\n    accessibilityLabel,\n    type,\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    _stack,\n    _input,\n\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.border,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n    'shadow',\n    'opacity',\n  ]);\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight ?? 400,\n    fontStyle: fontStyle ?? 'normal',\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken(\n    'colors',\n    underlineColorAndroid\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Stack\n      {..._stack}\n      {...layoutProps}\n      ref={mergeRefs([_ref, wrapperRef])}\n      isFocused={isFocused}\n    >\n      {InputLeftElement || leftElement ? InputLeftElement || leftElement : null}\n      <StyledInput\n        {...inputProps}\n        secureTextEntry={type === 'password'}\n        accessible\n        accessibilityLabel={ariaLabel || accessibilityLabel}\n        editable={isDisabled || isReadOnly ? false : true}\n        w={isFullWidth ? '100%' : undefined}\n        {...nonLayoutProps}\n        {...resolvedFontFamily}\n        placeholderTextColor={resolvedPlaceholderTextColor}\n        selectionColor={resolvedSelectionColor}\n        underlineColorAndroid={resolvedUnderlineColorAndroid}\n        onKeyPress={(e: any) => {\n          e.persist();\n          onKeyPress && onKeyPress(e);\n        }}\n        onFocus={(e: any) => {\n          handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n        }}\n        onBlur={(e: any) => {\n          handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n        }}\n        {..._input}\n        ref={mergeRefs([ref, _ref, wrapperRef])}\n      />\n      {InputRightElement || rightElement\n        ? InputRightElement || rightElement\n        : null}\n    </Stack>\n  );\n};\n\nexport default memo(forwardRef(Input));\n"]}