{"version":3,"sources":["index.tsx"],"names":["OverlayContainer","React","Backdrop","Box","Drawer","children","isOpen","onClose","placement","placementStyles","useMemo","styles","position","top","left","right","width","bottom","height"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AASA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,QADc;AAEdC,EAAAA,MAFc;AAGdC,EAAAA,OAHc;AAIdC,EAAAA,SAAS,GAAG;AAJE,CAAD,KAKK;AAClB,QAAMC,eAAe,GAAGR,KAAK,CAACS,OAAN,CAAc,MAAM;AAC1C,UAAMC,MAAW,GAAG;AAClBC,MAAAA,QAAQ,EAAE;AADQ,KAApB;;AAIA,QAAIJ,SAAS,KAAK,KAAlB,EAAyB;AACvBG,MAAAA,MAAM,CAACE,GAAP,GAAa,CAAb;AACAF,MAAAA,MAAM,CAACG,IAAP,GAAc,CAAd;AACAH,MAAAA,MAAM,CAACI,KAAP,GAAe,CAAf;AACAJ,MAAAA,MAAM,CAACK,KAAP,GAAe,MAAf;AACD,KALD,MAKO,IAAIR,SAAS,KAAK,QAAlB,EAA4B;AACjCG,MAAAA,MAAM,CAACM,MAAP,GAAgB,CAAhB;AACAN,MAAAA,MAAM,CAACG,IAAP,GAAc,CAAd;AACAH,MAAAA,MAAM,CAACI,KAAP,GAAe,CAAf;AACAJ,MAAAA,MAAM,CAACK,KAAP,GAAe,MAAf;AACD,KALM,MAKA,IAAIR,SAAS,KAAK,OAAlB,EAA2B;AAChCG,MAAAA,MAAM,CAACI,KAAP,GAAe,CAAf;AACAJ,MAAAA,MAAM,CAACE,GAAP,GAAa,CAAb;AACAF,MAAAA,MAAM,CAACM,MAAP,GAAgB,CAAhB;AACAN,MAAAA,MAAM,CAACO,MAAP,GAAgB,MAAhB;AACD,KALM,MAKA;AACLP,MAAAA,MAAM,CAACE,GAAP,GAAa,CAAb;AACAF,MAAAA,MAAM,CAACM,MAAP,GAAgB,CAAhB;AACAN,MAAAA,MAAM,CAACG,IAAP,GAAc,CAAd;AACAH,MAAAA,MAAM,CAACO,MAAP,GAAgB,MAAhB;AACD;;AACD,WAAOP,MAAP;AACD,GA3BuB,EA2BrB,CAACH,SAAD,CA3BqB,CAAxB;AA6BA,MAAI,CAACF,MAAL,EAAa,OAAO,IAAP;AAEb,sBACE,oBAAC,gBAAD,qBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEC,OAAO,GAAGA,OAAH,GAAa,MAAM,CAAE;AAA/C,IADF,eAEE,oBAAC,GAAD,eAASE,eAAT;AAA0B,IAAA,OAAO,EAAE;AAAnC,MACGJ,QADH,CAFF,CADF;AAQD,CA7CD;;AA+CA,eAAeD,MAAf","sourcesContent":["import { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport Backdrop from '../Backdrop';\nimport Box from '../../primitives/Box';\n\nexport type IDrawerProps = {\n  placement?: 'top' | 'left' | 'right' | 'bottom';\n  children?: any;\n  isOpen: boolean;\n  onClose?: () => void;\n};\n\nconst Drawer = ({\n  children,\n  isOpen,\n  onClose,\n  placement = 'right',\n}: IDrawerProps) => {\n  const placementStyles = React.useMemo(() => {\n    const styles: any = {\n      position: 'absolute',\n    };\n\n    if (placement === 'top') {\n      styles.top = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'bottom') {\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'right') {\n      styles.right = 0;\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.height = '100%';\n    } else {\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.height = '100%';\n    }\n    return styles;\n  }, [placement]);\n\n  if (!isOpen) return null;\n\n  return (\n    <OverlayContainer>\n      <Backdrop onPress={onClose ? onClose : () => {}} />\n      <Box {...placementStyles} opacity={1}>\n        {children}\n      </Box>\n    </OverlayContainer>\n  );\n};\n\nexport default Drawer;\n"]}