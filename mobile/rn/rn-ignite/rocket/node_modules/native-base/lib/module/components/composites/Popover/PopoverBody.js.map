{"version":3,"sources":["PopoverBody.tsx"],"names":["usePropsResolution","React","useContext","memo","forwardRef","useEffect","default","Box","PopoverContext","useHasResponsiveProps","PopoverBody","props","ref","resolvedProps","setBodyMounted","bodyId"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,gBAAnC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,SAASC,OAAO,IAAIC,GAApB,QAA0C,sBAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAmBC,GAAnB,KAAiC;AACnD,QAAMC,aAAa,GAAGb,kBAAkB,CAAC,aAAD,EAAgBW,KAAhB,CAAxC;AACA,QAAM;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA6Bb,UAAU,CAACM,cAAD,CAA7C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,WAAO,MAAM;AACXA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAFD;AAGD,GALQ,EAKN,CAACA,cAAD,CALM,CAAT,CAJmD,CAWnD;;AACA,MAAIL,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAEI;AAAf,KAA2BF,aAA3B;AAA0C,IAAA,GAAG,EAAED;AAA/C,KAAP;AACD,CAhBD;;AAkBA,4BAAeT,IAAI,eAACC,UAAU,CAACM,WAAD,CAAX,CAAnB","sourcesContent":["import { usePropsResolution } from '../../../hooks';\nimport React, { useContext, memo, forwardRef, useEffect } from 'react';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverBody = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverBody', props);\n  const { setBodyMounted, bodyId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setBodyMounted(true);\n    return () => {\n      setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={bodyId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverBody));\n"]}