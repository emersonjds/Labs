{"version":3,"sources":["PopoverFooter.tsx"],"names":["React","memo","forwardRef","usePropsResolution","default","Box","useHasResponsiveProps","PopoverFooter","props","ref","resolvedProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,OAAO,IAAIC,GAApB,QAA0C,sBAA1C;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAmBC,GAAnB,KAAiC;AACrD,QAAMC,aAAa,GAAGP,kBAAkB,CAAC,eAAD,EAAkBK,KAAlB,CAAxC,CADqD,CAErD;;AACA,MAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,oBAAC,GAAD,eAASE,aAAT;AAAwB,IAAA,GAAG,EAAED;AAA7B,KAAP;AACD,CAPD;;AASA,4BAAeR,IAAI,eAACC,UAAU,CAACK,aAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverFooter = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverFooter', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverFooter));\n"]}