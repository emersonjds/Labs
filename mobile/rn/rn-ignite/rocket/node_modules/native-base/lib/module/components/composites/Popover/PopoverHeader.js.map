{"version":3,"sources":["PopoverHeader.tsx"],"names":["React","memo","forwardRef","useEffect","useContext","usePropsResolution","default","Box","PopoverContext","useHasResponsiveProps","PopoverHeader","props","ref","resolvedProps","setHeaderMounted","headerId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,OAAO,IAAIC,GAApB,QAA0C,sBAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAmBC,GAAnB,KAAiC;AACrD,QAAMC,aAAa,GAAGR,kBAAkB,CAAC,eAAD,EAAkBM,KAAlB,CAAxC;AACA,QAAM;AAAEG,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAiCX,UAAU,CAACI,cAAD,CAAjD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,WAAO,MAAM;AACXA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KAFD;AAGD,GALQ,EAKN,CAACA,gBAAD,CALM,CAAT,CAJqD,CAUrD;;AACA,MAAIL,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAEI;AAAf,KAA6BF,aAA7B;AAA4C,IAAA,GAAG,EAAED;AAAjD,KAAP;AACD,CAfD;;AAiBA,4BAAeX,IAAI,eAACC,UAAU,CAACQ,aAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef, useEffect, useContext } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverHeader', props);\n  const { setHeaderMounted, headerId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setHeaderMounted(true);\n    return () => {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={headerId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverHeader));\n"]}