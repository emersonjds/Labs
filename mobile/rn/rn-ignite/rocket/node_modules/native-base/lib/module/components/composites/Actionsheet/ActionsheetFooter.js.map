{"version":3,"sources":["ActionsheetFooter.tsx"],"names":["React","memo","forwardRef","Modal","usePropsResolution","useHasResponsiveProps","ActionsheetFooter","props","ref","resolvedProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAsB,wBAAtB;AAEA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAiCC,GAAjC,KAA+C;AACvE,QAAMC,aAAa,GAAGL,kBAAkB,CAAC,mBAAD,EAAsBG,KAAtB,CAAxC,CADuE,CAEvE;;AACA,MAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,sBAAO,oBAAC,KAAD,CAAO,OAAP,eAAmBE,aAAnB;AAAkC,IAAA,GAAG,EAAED;AAAvC,KAAP;AACD,CAPD;;AASA,4BAAeP,IAAI,eAACC,UAAU,CAACI,iBAAD,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetFooterProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ActionsheetFooter = (props: IActionsheetFooterProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ActionsheetFooter', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Modal.Content {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ActionsheetFooter));\n"]}