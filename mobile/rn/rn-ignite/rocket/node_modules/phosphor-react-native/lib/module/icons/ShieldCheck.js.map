{"version":3,"sources":["ShieldCheck.tsx"],"names":["React","useContext","useMemo","IconContext","bold","duotone","fill","light","regular","thin","ShieldCheck","weight","color","size","style","mirrored","contextColor","contextSize","contextWeight","contextMirrored","contextStyle","IconComponent","iconWeight","weightMap","mirroredValue","transform","scaleX"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAAoBC,WAApB,QAAuC,QAAvC;AAEA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,KAAvB;AAA8BC,EAAAA;AAA9B,CAArB,EAA0E;AACxE,QAAM;AACJH,IAAAA,KAAK,EAAEI,YAAY,GAAG,MADlB;AAEJH,IAAAA,IAAI,EAAEI,WAAW,GAAG,EAFhB;AAGJN,IAAAA,MAAM,EAAEO,aAAa,GAAG,SAHpB;AAIJH,IAAAA,QAAQ,EAAEI,eAAe,GAAG,KAJxB;AAKJL,IAAAA,KAAK,EAAEM;AALH,MAMFnB,UAAU,CAACE,WAAD,CANd;AAQA,QAAMkB,aAAa,GAAGnB,OAAO,CAAC,MAAM;AAClC,UAAMoB,UAAU,GAAGX,MAAH,aAAGA,MAAH,cAAGA,MAAH,GAAaO,aAA7B;AAEA,UAAMK,SAAS,GAAG;AAChBnB,MAAAA,IADgB;AAEhBC,MAAAA,OAFgB;AAGhBC,MAAAA,IAHgB;AAIhBC,MAAAA,KAJgB;AAKhBC,MAAAA,OALgB;AAMhBC,MAAAA;AANgB,KAAlB;AASA,WAAOc,SAAS,CAACD,UAAD,CAAhB;AACD,GAb4B,EAa1B,CAACX,MAAD,EAASO,aAAT,CAb0B,CAA7B;AAeA,QAAMM,aAAa,GAAGT,QAAH,aAAGA,QAAH,cAAGA,QAAH,GAAeI,eAAlC;AAEA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEP,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAWI,YADlB;AAEE,IAAA,IAAI,EAAEH,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAUI,WAFhB;AAGE,IAAA,KAAK,EAAE,CACLG,YADK,EAELN,KAFK,EAGL,EACE,IAAIU,aAAa,IAAI;AACnBC,QAAAA,SAAS,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC;AAAX,SAAD;AADQ,OAArB;AADF,KAHK;AAHT,IADF;AAeD;;AAED,eAAehB,WAAf","sourcesContent":["/* GENERATED FILE */\nimport React, { useContext, useMemo } from 'react';\nimport { IconProps, IconContext } from '../lib';\n\nimport bold from '../bold/ShieldCheck';\nimport duotone from '../duotone/ShieldCheck';\nimport fill from '../fill/ShieldCheck';\nimport light from '../light/ShieldCheck';\nimport regular from '../regular/ShieldCheck';\nimport thin from '../thin/ShieldCheck';\n\nfunction ShieldCheck({ weight, color, size, style, mirrored }: IconProps) {\n  const {\n    color: contextColor = '#000',\n    size: contextSize = 24,\n    weight: contextWeight = 'regular',\n    mirrored: contextMirrored = false,\n    style: contextStyle,\n  } = useContext(IconContext);\n\n  const IconComponent = useMemo(() => {\n    const iconWeight = weight ?? contextWeight;\n\n    const weightMap = {\n      bold,\n      duotone,\n      fill,\n      light,\n      regular,\n      thin,\n    };\n\n    return weightMap[iconWeight];\n  }, [weight, contextWeight]);\n\n  const mirroredValue = mirrored ?? contextMirrored;\n\n  return (\n    <IconComponent\n      color={color ?? contextColor}\n      size={size ?? contextSize}\n      style={[\n        contextStyle,\n        style,\n        {\n          ...(mirroredValue && {\n            transform: [{ scaleX: -1 }],\n          }),\n        },\n      ]}\n    />\n  );\n}\n\nexport default ShieldCheck;\n"]}