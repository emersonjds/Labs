function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/* GENERATED FILE */
import * as React from 'react';
import Svg, { Rect, Path } from 'react-native-svg';

function ProhibitInset(props) {
  return /*#__PURE__*/React.createElement(Svg, _extends({
    viewBox: "0 0 256 256",
    width: props.size,
    height: props.size,
    fill: props.color
  }, props), /*#__PURE__*/React.createElement(Rect, {
    width: 256,
    height: 256,
    fill: "none"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm22.6,137.9L94.1,105.4a8,8,0,0,1,11.3-11.3l56.5,56.5a8,8,0,0,1-11.3,11.3Z"
  }));
}

export default ProhibitInset;
//# sourceMappingURL=ProhibitInset.js.map