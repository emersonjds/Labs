function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/* GENERATED FILE */
import * as React from 'react';
import Svg, { Rect, Line, Polyline } from 'react-native-svg';

function BluetoothSlash(props) {
  return /*#__PURE__*/React.createElement(Svg, _extends({
    viewBox: "0 0 256 256",
    width: props.size,
    height: props.size
  }, props), /*#__PURE__*/React.createElement(Rect, {
    width: 256,
    height: 256,
    fill: "none"
  }), /*#__PURE__*/React.createElement(Line, {
    x1: 56,
    y1: 176,
    x2: 120,
    y2: 128,
    fill: "none",
    stroke: props.color,
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 12
  }), /*#__PURE__*/React.createElement(Line, {
    x1: 48,
    y1: 40,
    x2: 208,
    y2: 216,
    fill: "none",
    stroke: props.color,
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 12
  }), /*#__PURE__*/React.createElement(Polyline, {
    points: "120 71.6 120 32 184 80 150.5 105.1",
    fill: "none",
    stroke: props.color,
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 12
  }), /*#__PURE__*/React.createElement(Polyline, {
    points: "176.6 181.5 120 224 120 128 145.2 146.9",
    fill: "none",
    stroke: props.color,
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 12
  }));
}

export default BluetoothSlash;
//# sourceMappingURL=BluetoothSlash.js.map