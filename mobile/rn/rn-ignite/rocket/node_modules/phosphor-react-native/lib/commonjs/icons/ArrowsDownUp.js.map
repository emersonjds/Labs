{"version":3,"sources":["ArrowsDownUp.tsx"],"names":["ArrowsDownUp","weight","color","size","style","mirrored","contextColor","contextSize","contextWeight","contextMirrored","contextStyle","IconContext","IconComponent","iconWeight","weightMap","bold","duotone","fill","light","regular","thin","mirroredValue","transform","scaleX"],"mappings":";;;;;;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AATA;AAWA,SAASA,YAAT,CAAsB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,KAAvB;AAA8BC,EAAAA;AAA9B,CAAtB,EAA2E;AACzE,QAAM;AACJH,IAAAA,KAAK,EAAEI,YAAY,GAAG,MADlB;AAEJH,IAAAA,IAAI,EAAEI,WAAW,GAAG,EAFhB;AAGJN,IAAAA,MAAM,EAAEO,aAAa,GAAG,SAHpB;AAIJH,IAAAA,QAAQ,EAAEI,eAAe,GAAG,KAJxB;AAKJL,IAAAA,KAAK,EAAEM;AALH,MAMF,uBAAWC,gBAAX,CANJ;AAQA,QAAMC,aAAa,GAAG,oBAAQ,MAAM;AAClC,UAAMC,UAAU,GAAGZ,MAAH,aAAGA,MAAH,cAAGA,MAAH,GAAaO,aAA7B;AAEA,UAAMM,SAAS,GAAG;AAChBC,MAAAA,IAAI,EAAJA,qBADgB;AAEhBC,MAAAA,OAAO,EAAPA,sBAFgB;AAGhBC,MAAAA,IAAI,EAAJA,sBAHgB;AAIhBC,MAAAA,KAAK,EAALA,sBAJgB;AAKhBC,MAAAA,OAAO,EAAPA,sBALgB;AAMhBC,MAAAA,IAAI,EAAJA;AANgB,KAAlB;AASA,WAAON,SAAS,CAACD,UAAD,CAAhB;AACD,GAbqB,EAanB,CAACZ,MAAD,EAASO,aAAT,CAbmB,CAAtB;AAeA,QAAMa,aAAa,GAAGhB,QAAH,aAAGA,QAAH,cAAGA,QAAH,GAAeI,eAAlC;AAEA,sBACE,6BAAC,aAAD;AACE,IAAA,KAAK,EAAEP,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAWI,YADlB;AAEE,IAAA,IAAI,EAAEH,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAUI,WAFhB;AAGE,IAAA,KAAK,EAAE,CACLG,YADK,EAELN,KAFK,EAGL,EACE,IAAIiB,aAAa,IAAI;AACnBC,QAAAA,SAAS,EAAE,CAAC;AAAEC,UAAAA,MAAM,EAAE,CAAC;AAAX,SAAD;AADQ,OAArB;AADF,KAHK;AAHT,IADF;AAeD;;eAEcvB,Y","sourcesContent":["/* GENERATED FILE */\nimport React, { useContext, useMemo } from 'react';\nimport { IconProps, IconContext } from '../lib';\n\nimport bold from '../bold/ArrowsDownUp';\nimport duotone from '../duotone/ArrowsDownUp';\nimport fill from '../fill/ArrowsDownUp';\nimport light from '../light/ArrowsDownUp';\nimport regular from '../regular/ArrowsDownUp';\nimport thin from '../thin/ArrowsDownUp';\n\nfunction ArrowsDownUp({ weight, color, size, style, mirrored }: IconProps) {\n  const {\n    color: contextColor = '#000',\n    size: contextSize = 24,\n    weight: contextWeight = 'regular',\n    mirrored: contextMirrored = false,\n    style: contextStyle,\n  } = useContext(IconContext);\n\n  const IconComponent = useMemo(() => {\n    const iconWeight = weight ?? contextWeight;\n\n    const weightMap = {\n      bold,\n      duotone,\n      fill,\n      light,\n      regular,\n      thin,\n    };\n\n    return weightMap[iconWeight];\n  }, [weight, contextWeight]);\n\n  const mirroredValue = mirrored ?? contextMirrored;\n\n  return (\n    <IconComponent\n      color={color ?? contextColor}\n      size={size ?? contextSize}\n      style={[\n        contextStyle,\n        style,\n        {\n          ...(mirroredValue && {\n            transform: [{ scaleX: -1 }],\n          }),\n        },\n      ]}\n    />\n  );\n}\n\nexport default ArrowsDownUp;\n"]}