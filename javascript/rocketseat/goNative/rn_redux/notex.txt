Num contexto geral o redux é um grande objeto que trabalha com as alterações de estados que serao compartilhados pela aplicação ou componentes.

Chamamos o estado global (Objeto) de Store, que é o que abstrai todos os dados e alteração de dados passados pelos reducers

Chamamos de objeto global (Store) a função que vai armazenar os dados vindos do Reducers para repassar para os componentes que a esse objeto global estiver conectado.

Sempre que criamos uma Store essa função recebe como parametro uma outra funcão, geralmente os reducer que farao a manipulação dos dados

É necessario ainda disponibilizar esse grande Store para toda aplicação a fim de que todos os componentes consigam ouvir essas alteracões.

Com a utilização do redux temos que conectar nossos componentes a esse grande objeto maior , desta forma é disponilizado uma interface chamada { connect } que vem no react-redux, desta forma o componente consegue entender se houve ou nao 

Com toda essa configuração o componente recebe uma nova função chamada mapStateToProps que como o proprio nome sugere, mapeia os estados (states = variaveis) da Store para serem utilizados como propriedades do componente


//Reducers
Reducers sao funcoes feitas para manipular os estados, ou fazer outros tipos de manipulação.
Por padrao os reducers recebem como parametro o estado atual da aplicação e uma action que é um tipo de informação que ira efetuar algo dentro do reducer, os types sao passados e verificados dentro de um switch no reducer, que retorna algo a partir destes dados iniciais que foram passados, desta forma ele pode alterar esses valores e ou devolver os mesmos sem que tenham sofrido nenhum tidpo de alteração.

As actions sao objetos que sao enviados pelo componente com algum tipo de ação que o componente quer utilizar, as actions sao passadas como objetos contendo um type: 'descriçào em caixa alta' e um outro dado do objeto que pode ser um text, um id um array, para que seja manipulado dentro do Reducer, deste forma temos

//Action 
{type: 'ADD_TODO', text: 'Adicionar novo todo'}
{type: 'MARK_AS_COMPLETED', id: 3}

com isso o Reducer verifica qual o type foi enviado como parametro e executa alguma operação

Os componentes que sao conectados ao Redux recebem um outro parametro que é o 'dispatch' ele fica responsavel por disparar essas ações e o nome da ação para os reducers.

